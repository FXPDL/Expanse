

Microchip Technology PIC LITE Macro Assembler V1.37 build -260352376 
                                                                                               Wed Jun 22 01:37:57 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	16F1527
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	idataBANK2,global,class=CODE,delta=2
     7                           	psect	idataBANK5,global,class=CODE,delta=2
     8                           	psect	idataBANK6,global,class=CODE,delta=2
     9                           	psect	idataBANK7,global,class=CODE,delta=2
    10                           	psect	idataBANK8,global,class=CODE,delta=2
    11                           	psect	idataBANK9,global,class=CODE,delta=2
    12                           	psect	idataBANK10,global,class=CODE,delta=2
    13                           	psect	idataBIGRAM,global,class=CODE,delta=2
    14                           	psect	cinit,global,class=CODE,merge=1,delta=2
    15                           	psect	dataBIGRAM,global,delta=1
    16                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    18                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    20                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    21                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    22                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    23                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    24                           	psect	dataBANK5,global,class=BANK5,space=1,delta=1
    25                           	psect	dataBANK6,global,class=BANK6,space=1,delta=1
    26                           	psect	dataBANK7,global,class=BANK7,space=1,delta=1
    27                           	psect	dataBANK8,global,class=BANK8,space=1,delta=1
    28                           	psect	dataBANK9,global,class=BANK9,space=1,delta=1
    29                           	psect	dataBANK10,global,class=BANK10,space=1,delta=1
    30                           	psect	clrtext,global,class=CODE,delta=2
    31                           	psect	inittext,global,class=CODE,delta=2
    32                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    33                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    34                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    35                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    36                           	psect	text1,local,class=CODE,merge=1,delta=2
    37                           	psect	text2,local,class=CODE,merge=1,delta=2
    38                           	psect	text3,local,class=CODE,merge=1,delta=2
    39                           	psect	text4,local,class=CODE,merge=1,delta=2
    40                           	psect	text5,local,class=CODE,merge=1,delta=2
    41                           	psect	text6,local,class=CODE,merge=1,delta=2
    42                           	psect	text7,local,class=CODE,merge=1,delta=2
    43                           	psect	text8,local,class=CODE,merge=1,delta=2
    44                           	psect	text9,local,class=CODE,merge=1,delta=2
    45                           	psect	text10,local,class=CODE,merge=1,delta=2
    46                           	psect	text11,local,class=CODE,merge=1,delta=2
    47                           	psect	text12,local,class=CODE,merge=1,delta=2
    48                           	psect	text13,local,class=CODE,merge=1,delta=2
    49                           	psect	text14,local,class=CODE,merge=1,delta=2
    50                           	psect	text15,local,class=CODE,merge=1,delta=2
    51                           	psect	text16,local,class=CODE,merge=1,delta=2
    52                           	psect	text17,local,class=CODE,merge=1,delta=2
    53                           	psect	text18,local,class=CODE,merge=1,delta=2
    54                           	psect	text19,local,class=CODE,merge=1,delta=2
    55                           	psect	text20,local,class=CODE,merge=1,delta=2
    56                           	psect	text21,local,class=CODE,merge=1,delta=2
    57                           	psect	text22,local,class=CODE,merge=1,delta=2
    58                           	psect	text23,local,class=CODE,merge=1,delta=2
    59                           	psect	text24,local,class=CODE,merge=1,delta=2
    60                           	psect	text25,local,class=CODE,merge=1,delta=2
    61                           	psect	text26,local,class=CODE,merge=1,delta=2
    62                           	psect	text27,local,class=CODE,merge=1,delta=2
    63                           	psect	text28,local,class=CODE,merge=1,delta=2
    64                           	psect	text29,local,class=CODE,merge=1,delta=2
    65                           	psect	intentry,global,class=CODE,delta=2
    66                           	psect	text31,local,class=CODE,merge=1,delta=2
    67                           	psect	maintext_split_1,global,class=CODE,merge=1,split=1,delta=2
    68                           	dabs	1,0x920,80
    69                           	dabs	1,0x8C6,42
    70                           	dabs	1,0x8A0,38
    71                           	dabs	1,0x820,80
    72                           	dabs	1,0x7A0,80
    73                           	dabs	1,0x720,80
    74                           	dabs	1,0x6A0,80
    75                           	dabs	1,0x620,80
    76                           	dabs	1,0x5A8,72
    77                           	dabs	1,0x2378,0,_delay
    78                           	dabs	1,0x2576,0,_mod5
    79                           	dabs	1,0x7E,2
    80  0000                     	;# 
    81  0001                     	;# 
    82  0002                     	;# 
    83  0003                     	;# 
    84  0004                     	;# 
    85  0005                     	;# 
    86  0006                     	;# 
    87  0007                     	;# 
    88  0008                     	;# 
    89  0009                     	;# 
    90  000A                     	;# 
    91  000B                     	;# 
    92  000C                     	;# 
    93  000D                     	;# 
    94  000E                     	;# 
    95  000F                     	;# 
    96  0010                     	;# 
    97  0011                     	;# 
    98  0012                     	;# 
    99  0013                     	;# 
   100  0014                     	;# 
   101  0015                     	;# 
   102  0016                     	;# 
   103  0016                     	;# 
   104  0017                     	;# 
   105  0018                     	;# 
   106  0019                     	;# 
   107  001A                     	;# 
   108  001B                     	;# 
   109  001C                     	;# 
   110  008C                     	;# 
   111  008D                     	;# 
   112  008E                     	;# 
   113  008F                     	;# 
   114  0090                     	;# 
   115  0091                     	;# 
   116  0092                     	;# 
   117  0093                     	;# 
   118  0094                     	;# 
   119  0095                     	;# 
   120  0096                     	;# 
   121  0097                     	;# 
   122  0099                     	;# 
   123  009A                     	;# 
   124  009B                     	;# 
   125  009B                     	;# 
   126  009C                     	;# 
   127  009D                     	;# 
   128  009E                     	;# 
   129  010C                     	;# 
   130  010D                     	;# 
   131  010E                     	;# 
   132  010F                     	;# 
   133  0110                     	;# 
   134  0116                     	;# 
   135  0117                     	;# 
   136  011D                     	;# 
   137  018C                     	;# 
   138  018D                     	;# 
   139  018F                     	;# 
   140  0190                     	;# 
   141  0191                     	;# 
   142  0191                     	;# 
   143  0192                     	;# 
   144  0193                     	;# 
   145  0193                     	;# 
   146  0194                     	;# 
   147  0195                     	;# 
   148  0196                     	;# 
   149  0197                     	;# 
   150  0199                     	;# 
   151  0199                     	;# 
   152  0199                     	;# 
   153  019A                     	;# 
   154  019A                     	;# 
   155  019A                     	;# 
   156  019B                     	;# 
   157  019B                     	;# 
   158  019B                     	;# 
   159  019B                     	;# 
   160  019B                     	;# 
   161  019C                     	;# 
   162  019C                     	;# 
   163  019C                     	;# 
   164  019D                     	;# 
   165  019D                     	;# 
   166  019D                     	;# 
   167  019E                     	;# 
   168  019E                     	;# 
   169  019E                     	;# 
   170  019F                     	;# 
   171  019F                     	;# 
   172  019F                     	;# 
   173  020D                     	;# 
   174  020F                     	;# 
   175  0210                     	;# 
   176  0211                     	;# 
   177  0211                     	;# 
   178  0212                     	;# 
   179  0212                     	;# 
   180  0213                     	;# 
   181  0213                     	;# 
   182  0214                     	;# 
   183  0214                     	;# 
   184  0215                     	;# 
   185  0215                     	;# 
   186  0215                     	;# 
   187  0216                     	;# 
   188  0216                     	;# 
   189  0217                     	;# 
   190  0217                     	;# 
   191  0219                     	;# 
   192  021A                     	;# 
   193  021B                     	;# 
   194  021C                     	;# 
   195  021D                     	;# 
   196  021E                     	;# 
   197  021F                     	;# 
   198  028C                     	;# 
   199  028D                     	;# 
   200  0291                     	;# 
   201  0291                     	;# 
   202  0292                     	;# 
   203  0293                     	;# 
   204  0298                     	;# 
   205  0298                     	;# 
   206  0299                     	;# 
   207  029A                     	;# 
   208  029D                     	;# 
   209  029E                     	;# 
   210  029F                     	;# 
   211  030C                     	;# 
   212  030D                     	;# 
   213  0311                     	;# 
   214  0311                     	;# 
   215  0312                     	;# 
   216  0313                     	;# 
   217  0318                     	;# 
   218  0318                     	;# 
   219  0319                     	;# 
   220  031A                     	;# 
   221  031C                     	;# 
   222  031C                     	;# 
   223  031D                     	;# 
   224  031E                     	;# 
   225  038C                     	;# 
   226  038D                     	;# 
   227  0394                     	;# 
   228  0395                     	;# 
   229  0396                     	;# 
   230  040C                     	;# 
   231  040D                     	;# 
   232  0411                     	;# 
   233  0411                     	;# 
   234  0412                     	;# 
   235  0413                     	;# 
   236  0414                     	;# 
   237  0415                     	;# 
   238  0416                     	;# 
   239  0417                     	;# 
   240  0418                     	;# 
   241  0418                     	;# 
   242  0419                     	;# 
   243  041A                     	;# 
   244  041B                     	;# 
   245  041C                     	;# 
   246  041D                     	;# 
   247  041E                     	;# 
   248  048D                     	;# 
   249  0491                     	;# 
   250  0491                     	;# 
   251  0492                     	;# 
   252  0492                     	;# 
   253  0493                     	;# 
   254  0493                     	;# 
   255  0493                     	;# 
   256  0494                     	;# 
   257  0494                     	;# 
   258  0495                     	;# 
   259  0495                     	;# 
   260  0496                     	;# 
   261  0496                     	;# 
   262  0497                     	;# 
   263  0497                     	;# 
   264  0595                     	;# 
   265  0596                     	;# 
   266  0597                     	;# 
   267  059C                     	;# 
   268  059D                     	;# 
   269  059E                     	;# 
   270  0611                     	;# 
   271  0611                     	;# 
   272  0612                     	;# 
   273  0613                     	;# 
   274  0614                     	;# 
   275  0614                     	;# 
   276  0615                     	;# 
   277  0616                     	;# 
   278  0617                     	;# 
   279  0617                     	;# 
   280  0618                     	;# 
   281  0619                     	;# 
   282  061A                     	;# 
   283  061A                     	;# 
   284  061B                     	;# 
   285  061C                     	;# 
   286  061D                     	;# 
   287  061D                     	;# 
   288  061E                     	;# 
   289  061F                     	;# 
   290  0FE4                     	;# 
   291  0FE5                     	;# 
   292  0FE6                     	;# 
   293  0FE7                     	;# 
   294  0FE8                     	;# 
   295  0FE9                     	;# 
   296  0FEA                     	;# 
   297  0FEB                     	;# 
   298  0FED                     	;# 
   299  0FEE                     	;# 
   300  0FEF                     	;# 
   301  0000                     	;# 
   302  0001                     	;# 
   303  0002                     	;# 
   304  0003                     	;# 
   305  0004                     	;# 
   306  0005                     	;# 
   307  0006                     	;# 
   308  0007                     	;# 
   309  0008                     	;# 
   310  0009                     	;# 
   311  000A                     	;# 
   312  000B                     	;# 
   313  000C                     	;# 
   314  000D                     	;# 
   315  000E                     	;# 
   316  000F                     	;# 
   317  0010                     	;# 
   318  0011                     	;# 
   319  0012                     	;# 
   320  0013                     	;# 
   321  0014                     	;# 
   322  0015                     	;# 
   323  0016                     	;# 
   324  0016                     	;# 
   325  0017                     	;# 
   326  0018                     	;# 
   327  0019                     	;# 
   328  001A                     	;# 
   329  001B                     	;# 
   330  001C                     	;# 
   331  008C                     	;# 
   332  008D                     	;# 
   333  008E                     	;# 
   334  008F                     	;# 
   335  0090                     	;# 
   336  0091                     	;# 
   337  0092                     	;# 
   338  0093                     	;# 
   339  0094                     	;# 
   340  0095                     	;# 
   341  0096                     	;# 
   342  0097                     	;# 
   343  0099                     	;# 
   344  009A                     	;# 
   345  009B                     	;# 
   346  009B                     	;# 
   347  009C                     	;# 
   348  009D                     	;# 
   349  009E                     	;# 
   350  010C                     	;# 
   351  010D                     	;# 
   352  010E                     	;# 
   353  010F                     	;# 
   354  0110                     	;# 
   355  0116                     	;# 
   356  0117                     	;# 
   357  011D                     	;# 
   358  018C                     	;# 
   359  018D                     	;# 
   360  018F                     	;# 
   361  0190                     	;# 
   362  0191                     	;# 
   363  0191                     	;# 
   364  0192                     	;# 
   365  0193                     	;# 
   366  0193                     	;# 
   367  0194                     	;# 
   368  0195                     	;# 
   369  0196                     	;# 
   370  0197                     	;# 
   371  0199                     	;# 
   372  0199                     	;# 
   373  0199                     	;# 
   374  019A                     	;# 
   375  019A                     	;# 
   376  019A                     	;# 
   377  019B                     	;# 
   378  019B                     	;# 
   379  019B                     	;# 
   380  019B                     	;# 
   381  019B                     	;# 
   382  019C                     	;# 
   383  019C                     	;# 
   384  019C                     	;# 
   385  019D                     	;# 
   386  019D                     	;# 
   387  019D                     	;# 
   388  019E                     	;# 
   389  019E                     	;# 
   390  019E                     	;# 
   391  019F                     	;# 
   392  019F                     	;# 
   393  019F                     	;# 
   394  020D                     	;# 
   395  020F                     	;# 
   396  0210                     	;# 
   397  0211                     	;# 
   398  0211                     	;# 
   399  0212                     	;# 
   400  0212                     	;# 
   401  0213                     	;# 
   402  0213                     	;# 
   403  0214                     	;# 
   404  0214                     	;# 
   405  0215                     	;# 
   406  0215                     	;# 
   407  0215                     	;# 
   408  0216                     	;# 
   409  0216                     	;# 
   410  0217                     	;# 
   411  0217                     	;# 
   412  0219                     	;# 
   413  021A                     	;# 
   414  021B                     	;# 
   415  021C                     	;# 
   416  021D                     	;# 
   417  021E                     	;# 
   418  021F                     	;# 
   419  028C                     	;# 
   420  028D                     	;# 
   421  0291                     	;# 
   422  0291                     	;# 
   423  0292                     	;# 
   424  0293                     	;# 
   425  0298                     	;# 
   426  0298                     	;# 
   427  0299                     	;# 
   428  029A                     	;# 
   429  029D                     	;# 
   430  029E                     	;# 
   431  029F                     	;# 
   432  030C                     	;# 
   433  030D                     	;# 
   434  0311                     	;# 
   435  0311                     	;# 
   436  0312                     	;# 
   437  0313                     	;# 
   438  0318                     	;# 
   439  0318                     	;# 
   440  0319                     	;# 
   441  031A                     	;# 
   442  031C                     	;# 
   443  031C                     	;# 
   444  031D                     	;# 
   445  031E                     	;# 
   446  038C                     	;# 
   447  038D                     	;# 
   448  0394                     	;# 
   449  0395                     	;# 
   450  0396                     	;# 
   451  040C                     	;# 
   452  040D                     	;# 
   453  0411                     	;# 
   454  0411                     	;# 
   455  0412                     	;# 
   456  0413                     	;# 
   457  0414                     	;# 
   458  0415                     	;# 
   459  0416                     	;# 
   460  0417                     	;# 
   461  0418                     	;# 
   462  0418                     	;# 
   463  0419                     	;# 
   464  041A                     	;# 
   465  041B                     	;# 
   466  041C                     	;# 
   467  041D                     	;# 
   468  041E                     	;# 
   469  048D                     	;# 
   470  0491                     	;# 
   471  0491                     	;# 
   472  0492                     	;# 
   473  0492                     	;# 
   474  0493                     	;# 
   475  0493                     	;# 
   476  0493                     	;# 
   477  0494                     	;# 
   478  0494                     	;# 
   479  0495                     	;# 
   480  0495                     	;# 
   481  0496                     	;# 
   482  0496                     	;# 
   483  0497                     	;# 
   484  0497                     	;# 
   485  0595                     	;# 
   486  0596                     	;# 
   487  0597                     	;# 
   488  059C                     	;# 
   489  059D                     	;# 
   490  059E                     	;# 
   491  0611                     	;# 
   492  0611                     	;# 
   493  0612                     	;# 
   494  0613                     	;# 
   495  0614                     	;# 
   496  0614                     	;# 
   497  0615                     	;# 
   498  0616                     	;# 
   499  0617                     	;# 
   500  0617                     	;# 
   501  0618                     	;# 
   502  0619                     	;# 
   503  061A                     	;# 
   504  061A                     	;# 
   505  061B                     	;# 
   506  061C                     	;# 
   507  061D                     	;# 
   508  061D                     	;# 
   509  061E                     	;# 
   510  061F                     	;# 
   511  0FE4                     	;# 
   512  0FE5                     	;# 
   513  0FE6                     	;# 
   514  0FE7                     	;# 
   515  0FE8                     	;# 
   516  0FE9                     	;# 
   517  0FEA                     	;# 
   518  0FEB                     	;# 
   519  0FED                     	;# 
   520  0FEE                     	;# 
   521  0FEF                     	;# 
   522  0000                     	;# 
   523  0001                     	;# 
   524  0002                     	;# 
   525  0003                     	;# 
   526  0004                     	;# 
   527  0005                     	;# 
   528  0006                     	;# 
   529  0007                     	;# 
   530  0008                     	;# 
   531  0009                     	;# 
   532  000A                     	;# 
   533  000B                     	;# 
   534  000C                     	;# 
   535  000D                     	;# 
   536  000E                     	;# 
   537  000F                     	;# 
   538  0010                     	;# 
   539  0011                     	;# 
   540  0012                     	;# 
   541  0013                     	;# 
   542  0014                     	;# 
   543  0015                     	;# 
   544  0016                     	;# 
   545  0016                     	;# 
   546  0017                     	;# 
   547  0018                     	;# 
   548  0019                     	;# 
   549  001A                     	;# 
   550  001B                     	;# 
   551  001C                     	;# 
   552  008C                     	;# 
   553  008D                     	;# 
   554  008E                     	;# 
   555  008F                     	;# 
   556  0090                     	;# 
   557  0091                     	;# 
   558  0092                     	;# 
   559  0093                     	;# 
   560  0094                     	;# 
   561  0095                     	;# 
   562  0096                     	;# 
   563  0097                     	;# 
   564  0099                     	;# 
   565  009A                     	;# 
   566  009B                     	;# 
   567  009B                     	;# 
   568  009C                     	;# 
   569  009D                     	;# 
   570  009E                     	;# 
   571  010C                     	;# 
   572  010D                     	;# 
   573  010E                     	;# 
   574  010F                     	;# 
   575  0110                     	;# 
   576  0116                     	;# 
   577  0117                     	;# 
   578  011D                     	;# 
   579  018C                     	;# 
   580  018D                     	;# 
   581  018F                     	;# 
   582  0190                     	;# 
   583  0191                     	;# 
   584  0191                     	;# 
   585  0192                     	;# 
   586  0193                     	;# 
   587  0193                     	;# 
   588  0194                     	;# 
   589  0195                     	;# 
   590  0196                     	;# 
   591  0197                     	;# 
   592  0199                     	;# 
   593  0199                     	;# 
   594  0199                     	;# 
   595  019A                     	;# 
   596  019A                     	;# 
   597  019A                     	;# 
   598  019B                     	;# 
   599  019B                     	;# 
   600  019B                     	;# 
   601  019B                     	;# 
   602  019B                     	;# 
   603  019C                     	;# 
   604  019C                     	;# 
   605  019C                     	;# 
   606  019D                     	;# 
   607  019D                     	;# 
   608  019D                     	;# 
   609  019E                     	;# 
   610  019E                     	;# 
   611  019E                     	;# 
   612  019F                     	;# 
   613  019F                     	;# 
   614  019F                     	;# 
   615  020D                     	;# 
   616  020F                     	;# 
   617  0210                     	;# 
   618  0211                     	;# 
   619  0211                     	;# 
   620  0212                     	;# 
   621  0212                     	;# 
   622  0213                     	;# 
   623  0213                     	;# 
   624  0214                     	;# 
   625  0214                     	;# 
   626  0215                     	;# 
   627  0215                     	;# 
   628  0215                     	;# 
   629  0216                     	;# 
   630  0216                     	;# 
   631  0217                     	;# 
   632  0217                     	;# 
   633  0219                     	;# 
   634  021A                     	;# 
   635  021B                     	;# 
   636  021C                     	;# 
   637  021D                     	;# 
   638  021E                     	;# 
   639  021F                     	;# 
   640  028C                     	;# 
   641  028D                     	;# 
   642  0291                     	;# 
   643  0291                     	;# 
   644  0292                     	;# 
   645  0293                     	;# 
   646  0298                     	;# 
   647  0298                     	;# 
   648  0299                     	;# 
   649  029A                     	;# 
   650  029D                     	;# 
   651  029E                     	;# 
   652  029F                     	;# 
   653  030C                     	;# 
   654  030D                     	;# 
   655  0311                     	;# 
   656  0311                     	;# 
   657  0312                     	;# 
   658  0313                     	;# 
   659  0318                     	;# 
   660  0318                     	;# 
   661  0319                     	;# 
   662  031A                     	;# 
   663  031C                     	;# 
   664  031C                     	;# 
   665  031D                     	;# 
   666  031E                     	;# 
   667  038C                     	;# 
   668  038D                     	;# 
   669  0394                     	;# 
   670  0395                     	;# 
   671  0396                     	;# 
   672  040C                     	;# 
   673  040D                     	;# 
   674  0411                     	;# 
   675  0411                     	;# 
   676  0412                     	;# 
   677  0413                     	;# 
   678  0414                     	;# 
   679  0415                     	;# 
   680  0416                     	;# 
   681  0417                     	;# 
   682  0418                     	;# 
   683  0418                     	;# 
   684  0419                     	;# 
   685  041A                     	;# 
   686  041B                     	;# 
   687  041C                     	;# 
   688  041D                     	;# 
   689  041E                     	;# 
   690  048D                     	;# 
   691  0491                     	;# 
   692  0491                     	;# 
   693  0492                     	;# 
   694  0492                     	;# 
   695  0493                     	;# 
   696  0493                     	;# 
   697  0493                     	;# 
   698  0494                     	;# 
   699  0494                     	;# 
   700  0495                     	;# 
   701  0495                     	;# 
   702  0496                     	;# 
   703  0496                     	;# 
   704  0497                     	;# 
   705  0497                     	;# 
   706  0595                     	;# 
   707  0596                     	;# 
   708  0597                     	;# 
   709  059C                     	;# 
   710  059D                     	;# 
   711  059E                     	;# 
   712  0611                     	;# 
   713  0611                     	;# 
   714  0612                     	;# 
   715  0613                     	;# 
   716  0614                     	;# 
   717  0614                     	;# 
   718  0615                     	;# 
   719  0616                     	;# 
   720  0617                     	;# 
   721  0617                     	;# 
   722  0618                     	;# 
   723  0619                     	;# 
   724  061A                     	;# 
   725  061A                     	;# 
   726  061B                     	;# 
   727  061C                     	;# 
   728  061D                     	;# 
   729  061D                     	;# 
   730  061E                     	;# 
   731  061F                     	;# 
   732  0FE4                     	;# 
   733  0FE5                     	;# 
   734  0FE6                     	;# 
   735  0FE7                     	;# 
   736  0FE8                     	;# 
   737  0FE9                     	;# 
   738  0FEA                     	;# 
   739  0FEB                     	;# 
   740  0FED                     	;# 
   741  0FEE                     	;# 
   742  0FEF                     	;# 
   743  0000                     	;# 
   744  0001                     	;# 
   745  0002                     	;# 
   746  0003                     	;# 
   747  0004                     	;# 
   748  0005                     	;# 
   749  0006                     	;# 
   750  0007                     	;# 
   751  0008                     	;# 
   752  0009                     	;# 
   753  000A                     	;# 
   754  000B                     	;# 
   755  000C                     	;# 
   756  000D                     	;# 
   757  000E                     	;# 
   758  000F                     	;# 
   759  0010                     	;# 
   760  0011                     	;# 
   761  0012                     	;# 
   762  0013                     	;# 
   763  0014                     	;# 
   764  0015                     	;# 
   765  0016                     	;# 
   766  0016                     	;# 
   767  0017                     	;# 
   768  0018                     	;# 
   769  0019                     	;# 
   770  001A                     	;# 
   771  001B                     	;# 
   772  001C                     	;# 
   773  008C                     	;# 
   774  008D                     	;# 
   775  008E                     	;# 
   776  008F                     	;# 
   777  0090                     	;# 
   778  0091                     	;# 
   779  0092                     	;# 
   780  0093                     	;# 
   781  0094                     	;# 
   782  0095                     	;# 
   783  0096                     	;# 
   784  0097                     	;# 
   785  0099                     	;# 
   786  009A                     	;# 
   787  009B                     	;# 
   788  009B                     	;# 
   789  009C                     	;# 
   790  009D                     	;# 
   791  009E                     	;# 
   792  010C                     	;# 
   793  010D                     	;# 
   794  010E                     	;# 
   795  010F                     	;# 
   796  0110                     	;# 
   797  0116                     	;# 
   798  0117                     	;# 
   799  011D                     	;# 
   800  018C                     	;# 
   801  018D                     	;# 
   802  018F                     	;# 
   803  0190                     	;# 
   804  0191                     	;# 
   805  0191                     	;# 
   806  0192                     	;# 
   807  0193                     	;# 
   808  0193                     	;# 
   809  0194                     	;# 
   810  0195                     	;# 
   811  0196                     	;# 
   812  0197                     	;# 
   813  0199                     	;# 
   814  0199                     	;# 
   815  0199                     	;# 
   816  019A                     	;# 
   817  019A                     	;# 
   818  019A                     	;# 
   819  019B                     	;# 
   820  019B                     	;# 
   821  019B                     	;# 
   822  019B                     	;# 
   823  019B                     	;# 
   824  019C                     	;# 
   825  019C                     	;# 
   826  019C                     	;# 
   827  019D                     	;# 
   828  019D                     	;# 
   829  019D                     	;# 
   830  019E                     	;# 
   831  019E                     	;# 
   832  019E                     	;# 
   833  019F                     	;# 
   834  019F                     	;# 
   835  019F                     	;# 
   836  020D                     	;# 
   837  020F                     	;# 
   838  0210                     	;# 
   839  0211                     	;# 
   840  0211                     	;# 
   841  0212                     	;# 
   842  0212                     	;# 
   843  0213                     	;# 
   844  0213                     	;# 
   845  0214                     	;# 
   846  0214                     	;# 
   847  0215                     	;# 
   848  0215                     	;# 
   849  0215                     	;# 
   850  0216                     	;# 
   851  0216                     	;# 
   852  0217                     	;# 
   853  0217                     	;# 
   854  0219                     	;# 
   855  021A                     	;# 
   856  021B                     	;# 
   857  021C                     	;# 
   858  021D                     	;# 
   859  021E                     	;# 
   860  021F                     	;# 
   861  028C                     	;# 
   862  028D                     	;# 
   863  0291                     	;# 
   864  0291                     	;# 
   865  0292                     	;# 
   866  0293                     	;# 
   867  0298                     	;# 
   868  0298                     	;# 
   869  0299                     	;# 
   870  029A                     	;# 
   871  029D                     	;# 
   872  029E                     	;# 
   873  029F                     	;# 
   874  030C                     	;# 
   875  030D                     	;# 
   876  0311                     	;# 
   877  0311                     	;# 
   878  0312                     	;# 
   879  0313                     	;# 
   880  0318                     	;# 
   881  0318                     	;# 
   882  0319                     	;# 
   883  031A                     	;# 
   884  031C                     	;# 
   885  031C                     	;# 
   886  031D                     	;# 
   887  031E                     	;# 
   888  038C                     	;# 
   889  038D                     	;# 
   890  0394                     	;# 
   891  0395                     	;# 
   892  0396                     	;# 
   893  040C                     	;# 
   894  040D                     	;# 
   895  0411                     	;# 
   896  0411                     	;# 
   897  0412                     	;# 
   898  0413                     	;# 
   899  0414                     	;# 
   900  0415                     	;# 
   901  0416                     	;# 
   902  0417                     	;# 
   903  0418                     	;# 
   904  0418                     	;# 
   905  0419                     	;# 
   906  041A                     	;# 
   907  041B                     	;# 
   908  041C                     	;# 
   909  041D                     	;# 
   910  041E                     	;# 
   911  048D                     	;# 
   912  0491                     	;# 
   913  0491                     	;# 
   914  0492                     	;# 
   915  0492                     	;# 
   916  0493                     	;# 
   917  0493                     	;# 
   918  0493                     	;# 
   919  0494                     	;# 
   920  0494                     	;# 
   921  0495                     	;# 
   922  0495                     	;# 
   923  0496                     	;# 
   924  0496                     	;# 
   925  0497                     	;# 
   926  0497                     	;# 
   927  0595                     	;# 
   928  0596                     	;# 
   929  0597                     	;# 
   930  059C                     	;# 
   931  059D                     	;# 
   932  059E                     	;# 
   933  0611                     	;# 
   934  0611                     	;# 
   935  0612                     	;# 
   936  0613                     	;# 
   937  0614                     	;# 
   938  0614                     	;# 
   939  0615                     	;# 
   940  0616                     	;# 
   941  0617                     	;# 
   942  0617                     	;# 
   943  0618                     	;# 
   944  0619                     	;# 
   945  061A                     	;# 
   946  061A                     	;# 
   947  061B                     	;# 
   948  061C                     	;# 
   949  061D                     	;# 
   950  061D                     	;# 
   951  061E                     	;# 
   952  061F                     	;# 
   953  0FE4                     	;# 
   954  0FE5                     	;# 
   955  0FE6                     	;# 
   956  0FE7                     	;# 
   957  0FE8                     	;# 
   958  0FE9                     	;# 
   959  0FEA                     	;# 
   960  0FEB                     	;# 
   961  0FED                     	;# 
   962  0FEE                     	;# 
   963  0FEF                     	;# 
   964  0000                     	;# 
   965  0001                     	;# 
   966  0002                     	;# 
   967  0003                     	;# 
   968  0004                     	;# 
   969  0005                     	;# 
   970  0006                     	;# 
   971  0007                     	;# 
   972  0008                     	;# 
   973  0009                     	;# 
   974  000A                     	;# 
   975  000B                     	;# 
   976  000C                     	;# 
   977  000D                     	;# 
   978  000E                     	;# 
   979  000F                     	;# 
   980  0010                     	;# 
   981  0011                     	;# 
   982  0012                     	;# 
   983  0013                     	;# 
   984  0014                     	;# 
   985  0015                     	;# 
   986  0016                     	;# 
   987  0016                     	;# 
   988  0017                     	;# 
   989  0018                     	;# 
   990  0019                     	;# 
   991  001A                     	;# 
   992  001B                     	;# 
   993  001C                     	;# 
   994  008C                     	;# 
   995  008D                     	;# 
   996  008E                     	;# 
   997  008F                     	;# 
   998  0090                     	;# 
   999  0091                     	;# 
  1000  0092                     	;# 
  1001  0093                     	;# 
  1002  0094                     	;# 
  1003  0095                     	;# 
  1004  0096                     	;# 
  1005  0097                     	;# 
  1006  0099                     	;# 
  1007  009A                     	;# 
  1008  009B                     	;# 
  1009  009B                     	;# 
  1010  009C                     	;# 
  1011  009D                     	;# 
  1012  009E                     	;# 
  1013  010C                     	;# 
  1014  010D                     	;# 
  1015  010E                     	;# 
  1016  010F                     	;# 
  1017  0110                     	;# 
  1018  0116                     	;# 
  1019  0117                     	;# 
  1020  011D                     	;# 
  1021  018C                     	;# 
  1022  018D                     	;# 
  1023  018F                     	;# 
  1024  0190                     	;# 
  1025  0191                     	;# 
  1026  0191                     	;# 
  1027  0192                     	;# 
  1028  0193                     	;# 
  1029  0193                     	;# 
  1030  0194                     	;# 
  1031  0195                     	;# 
  1032  0196                     	;# 
  1033  0197                     	;# 
  1034  0199                     	;# 
  1035  0199                     	;# 
  1036  0199                     	;# 
  1037  019A                     	;# 
  1038  019A                     	;# 
  1039  019A                     	;# 
  1040  019B                     	;# 
  1041  019B                     	;# 
  1042  019B                     	;# 
  1043  019B                     	;# 
  1044  019B                     	;# 
  1045  019C                     	;# 
  1046  019C                     	;# 
  1047  019C                     	;# 
  1048  019D                     	;# 
  1049  019D                     	;# 
  1050  019D                     	;# 
  1051  019E                     	;# 
  1052  019E                     	;# 
  1053  019E                     	;# 
  1054  019F                     	;# 
  1055  019F                     	;# 
  1056  019F                     	;# 
  1057  020D                     	;# 
  1058  020F                     	;# 
  1059  0210                     	;# 
  1060  0211                     	;# 
  1061  0211                     	;# 
  1062  0212                     	;# 
  1063  0212                     	;# 
  1064  0213                     	;# 
  1065  0213                     	;# 
  1066  0214                     	;# 
  1067  0214                     	;# 
  1068  0215                     	;# 
  1069  0215                     	;# 
  1070  0215                     	;# 
  1071  0216                     	;# 
  1072  0216                     	;# 
  1073  0217                     	;# 
  1074  0217                     	;# 
  1075  0219                     	;# 
  1076  021A                     	;# 
  1077  021B                     	;# 
  1078  021C                     	;# 
  1079  021D                     	;# 
  1080  021E                     	;# 
  1081  021F                     	;# 
  1082  028C                     	;# 
  1083  028D                     	;# 
  1084  0291                     	;# 
  1085  0291                     	;# 
  1086  0292                     	;# 
  1087  0293                     	;# 
  1088  0298                     	;# 
  1089  0298                     	;# 
  1090  0299                     	;# 
  1091  029A                     	;# 
  1092  029D                     	;# 
  1093  029E                     	;# 
  1094  029F                     	;# 
  1095  030C                     	;# 
  1096  030D                     	;# 
  1097  0311                     	;# 
  1098  0311                     	;# 
  1099  0312                     	;# 
  1100  0313                     	;# 
  1101  0318                     	;# 
  1102  0318                     	;# 
  1103  0319                     	;# 
  1104  031A                     	;# 
  1105  031C                     	;# 
  1106  031C                     	;# 
  1107  031D                     	;# 
  1108  031E                     	;# 
  1109  038C                     	;# 
  1110  038D                     	;# 
  1111  0394                     	;# 
  1112  0395                     	;# 
  1113  0396                     	;# 
  1114  040C                     	;# 
  1115  040D                     	;# 
  1116  0411                     	;# 
  1117  0411                     	;# 
  1118  0412                     	;# 
  1119  0413                     	;# 
  1120  0414                     	;# 
  1121  0415                     	;# 
  1122  0416                     	;# 
  1123  0417                     	;# 
  1124  0418                     	;# 
  1125  0418                     	;# 
  1126  0419                     	;# 
  1127  041A                     	;# 
  1128  041B                     	;# 
  1129  041C                     	;# 
  1130  041D                     	;# 
  1131  041E                     	;# 
  1132  048D                     	;# 
  1133  0491                     	;# 
  1134  0491                     	;# 
  1135  0492                     	;# 
  1136  0492                     	;# 
  1137  0493                     	;# 
  1138  0493                     	;# 
  1139  0493                     	;# 
  1140  0494                     	;# 
  1141  0494                     	;# 
  1142  0495                     	;# 
  1143  0495                     	;# 
  1144  0496                     	;# 
  1145  0496                     	;# 
  1146  0497                     	;# 
  1147  0497                     	;# 
  1148  0595                     	;# 
  1149  0596                     	;# 
  1150  0597                     	;# 
  1151  059C                     	;# 
  1152  059D                     	;# 
  1153  059E                     	;# 
  1154  0611                     	;# 
  1155  0611                     	;# 
  1156  0612                     	;# 
  1157  0613                     	;# 
  1158  0614                     	;# 
  1159  0614                     	;# 
  1160  0615                     	;# 
  1161  0616                     	;# 
  1162  0617                     	;# 
  1163  0617                     	;# 
  1164  0618                     	;# 
  1165  0619                     	;# 
  1166  061A                     	;# 
  1167  061A                     	;# 
  1168  061B                     	;# 
  1169  061C                     	;# 
  1170  061D                     	;# 
  1171  061D                     	;# 
  1172  061E                     	;# 
  1173  061F                     	;# 
  1174  0FE4                     	;# 
  1175  0FE5                     	;# 
  1176  0FE6                     	;# 
  1177  0FE7                     	;# 
  1178  0FE8                     	;# 
  1179  0FE9                     	;# 
  1180  0FEA                     	;# 
  1181  0FEB                     	;# 
  1182  0FED                     	;# 
  1183  0FEE                     	;# 
  1184  0FEF                     	;# 
  1185  0000                     	;# 
  1186  0001                     	;# 
  1187  0002                     	;# 
  1188  0003                     	;# 
  1189  0004                     	;# 
  1190  0005                     	;# 
  1191  0006                     	;# 
  1192  0007                     	;# 
  1193  0008                     	;# 
  1194  0009                     	;# 
  1195  000A                     	;# 
  1196  000B                     	;# 
  1197  000C                     	;# 
  1198  000D                     	;# 
  1199  000E                     	;# 
  1200  000F                     	;# 
  1201  0010                     	;# 
  1202  0011                     	;# 
  1203  0012                     	;# 
  1204  0013                     	;# 
  1205  0014                     	;# 
  1206  0015                     	;# 
  1207  0016                     	;# 
  1208  0016                     	;# 
  1209  0017                     	;# 
  1210  0018                     	;# 
  1211  0019                     	;# 
  1212  001A                     	;# 
  1213  001B                     	;# 
  1214  001C                     	;# 
  1215  008C                     	;# 
  1216  008D                     	;# 
  1217  008E                     	;# 
  1218  008F                     	;# 
  1219  0090                     	;# 
  1220  0091                     	;# 
  1221  0092                     	;# 
  1222  0093                     	;# 
  1223  0094                     	;# 
  1224  0095                     	;# 
  1225  0096                     	;# 
  1226  0097                     	;# 
  1227  0099                     	;# 
  1228  009A                     	;# 
  1229  009B                     	;# 
  1230  009B                     	;# 
  1231  009C                     	;# 
  1232  009D                     	;# 
  1233  009E                     	;# 
  1234  010C                     	;# 
  1235  010D                     	;# 
  1236  010E                     	;# 
  1237  010F                     	;# 
  1238  0110                     	;# 
  1239  0116                     	;# 
  1240  0117                     	;# 
  1241  011D                     	;# 
  1242  018C                     	;# 
  1243  018D                     	;# 
  1244  018F                     	;# 
  1245  0190                     	;# 
  1246  0191                     	;# 
  1247  0191                     	;# 
  1248  0192                     	;# 
  1249  0193                     	;# 
  1250  0193                     	;# 
  1251  0194                     	;# 
  1252  0195                     	;# 
  1253  0196                     	;# 
  1254  0197                     	;# 
  1255  0199                     	;# 
  1256  0199                     	;# 
  1257  0199                     	;# 
  1258  019A                     	;# 
  1259  019A                     	;# 
  1260  019A                     	;# 
  1261  019B                     	;# 
  1262  019B                     	;# 
  1263  019B                     	;# 
  1264  019B                     	;# 
  1265  019B                     	;# 
  1266  019C                     	;# 
  1267  019C                     	;# 
  1268  019C                     	;# 
  1269  019D                     	;# 
  1270  019D                     	;# 
  1271  019D                     	;# 
  1272  019E                     	;# 
  1273  019E                     	;# 
  1274  019E                     	;# 
  1275  019F                     	;# 
  1276  019F                     	;# 
  1277  019F                     	;# 
  1278  020D                     	;# 
  1279  020F                     	;# 
  1280  0210                     	;# 
  1281  0211                     	;# 
  1282  0211                     	;# 
  1283  0212                     	;# 
  1284  0212                     	;# 
  1285  0213                     	;# 
  1286  0213                     	;# 
  1287  0214                     	;# 
  1288  0214                     	;# 
  1289  0215                     	;# 
  1290  0215                     	;# 
  1291  0215                     	;# 
  1292  0216                     	;# 
  1293  0216                     	;# 
  1294  0217                     	;# 
  1295  0217                     	;# 
  1296  0219                     	;# 
  1297  021A                     	;# 
  1298  021B                     	;# 
  1299  021C                     	;# 
  1300  021D                     	;# 
  1301  021E                     	;# 
  1302  021F                     	;# 
  1303  028C                     	;# 
  1304  028D                     	;# 
  1305  0291                     	;# 
  1306  0291                     	;# 
  1307  0292                     	;# 
  1308  0293                     	;# 
  1309  0298                     	;# 
  1310  0298                     	;# 
  1311  0299                     	;# 
  1312  029A                     	;# 
  1313  029D                     	;# 
  1314  029E                     	;# 
  1315  029F                     	;# 
  1316  030C                     	;# 
  1317  030D                     	;# 
  1318  0311                     	;# 
  1319  0311                     	;# 
  1320  0312                     	;# 
  1321  0313                     	;# 
  1322  0318                     	;# 
  1323  0318                     	;# 
  1324  0319                     	;# 
  1325  031A                     	;# 
  1326  031C                     	;# 
  1327  031C                     	;# 
  1328  031D                     	;# 
  1329  031E                     	;# 
  1330  038C                     	;# 
  1331  038D                     	;# 
  1332  0394                     	;# 
  1333  0395                     	;# 
  1334  0396                     	;# 
  1335  040C                     	;# 
  1336  040D                     	;# 
  1337  0411                     	;# 
  1338  0411                     	;# 
  1339  0412                     	;# 
  1340  0413                     	;# 
  1341  0414                     	;# 
  1342  0415                     	;# 
  1343  0416                     	;# 
  1344  0417                     	;# 
  1345  0418                     	;# 
  1346  0418                     	;# 
  1347  0419                     	;# 
  1348  041A                     	;# 
  1349  041B                     	;# 
  1350  041C                     	;# 
  1351  041D                     	;# 
  1352  041E                     	;# 
  1353  048D                     	;# 
  1354  0491                     	;# 
  1355  0491                     	;# 
  1356  0492                     	;# 
  1357  0492                     	;# 
  1358  0493                     	;# 
  1359  0493                     	;# 
  1360  0493                     	;# 
  1361  0494                     	;# 
  1362  0494                     	;# 
  1363  0495                     	;# 
  1364  0495                     	;# 
  1365  0496                     	;# 
  1366  0496                     	;# 
  1367  0497                     	;# 
  1368  0497                     	;# 
  1369  0595                     	;# 
  1370  0596                     	;# 
  1371  0597                     	;# 
  1372  059C                     	;# 
  1373  059D                     	;# 
  1374  059E                     	;# 
  1375  0611                     	;# 
  1376  0611                     	;# 
  1377  0612                     	;# 
  1378  0613                     	;# 
  1379  0614                     	;# 
  1380  0614                     	;# 
  1381  0615                     	;# 
  1382  0616                     	;# 
  1383  0617                     	;# 
  1384  0617                     	;# 
  1385  0618                     	;# 
  1386  0619                     	;# 
  1387  061A                     	;# 
  1388  061A                     	;# 
  1389  061B                     	;# 
  1390  061C                     	;# 
  1391  061D                     	;# 
  1392  061D                     	;# 
  1393  061E                     	;# 
  1394  061F                     	;# 
  1395  0FE4                     	;# 
  1396  0FE5                     	;# 
  1397  0FE6                     	;# 
  1398  0FE7                     	;# 
  1399  0FE8                     	;# 
  1400  0FE9                     	;# 
  1401  0FEA                     	;# 
  1402  0FEB                     	;# 
  1403  0FED                     	;# 
  1404  0FEE                     	;# 
  1405  0FEF                     	;_delay
  1406                           
  1407                           	psect	idataCOMMON
  1408  07FE                     __pidataCOMMON:	
  1409                           
  1410                           ;initializer for _top_push_state
  1411  07FE  3406               	retlw	6
  1412  07FF  3400               	retlw	0
  1413                           
  1414                           	psect	idataBANK1
  1415  1073                     __pidataBANK1:	
  1416                           
  1417                           ;initializer for _baseline_delay_time
  1418  1073  34D0               	retlw	208
  1419  1074  3407               	retlw	7
  1420  1075  3400               	retlw	0
  1421  1076  3400               	retlw	0
  1422                           
  1423                           ;initializer for _delay_time
  1424  1077  34D0               	retlw	208
  1425  1078  3407               	retlw	7
  1426  1079  3400               	retlw	0
  1427  107A  3400               	retlw	0
  1428                           
  1429                           ;initializer for _bottom_push_state
  1430  107B  3406               	retlw	6
  1431  107C  3400               	retlw	0
  1432                           
  1433                           ;initializer for _knob1_prev
  1434  107D  34D0               	retlw	208
  1435  107E  3407               	retlw	7
  1436                           
  1437                           ;initializer for _num_taps
  1438  107F  3404               	retlw	4
  1439  1080  3400               	retlw	0
  1440                           
  1441                           ;initializer for _tap_iteration
  1442  1081  3401               	retlw	1
  1443  1082  3400               	retlw	0
  1444                           
  1445                           	psect	idataBANK2
  1446  1063                     __pidataBANK2:	
  1447                           
  1448                           ;initializer for _blink_state
  1449  1063  3401               	retlw	1
  1450  1064  3400               	retlw	0
  1451                           
  1452                           ;initializer for _delay_time_changed
  1453  1065  3401               	retlw	1
  1454  1066  3400               	retlw	0
  1455                           
  1456                           ;initializer for _incoming_data
  1457  1067  3401               	retlw	1
  1458  1068  3400               	retlw	0
  1459                           
  1460                           ;initializer for _knob2_prev
  1461  1069  34D0               	retlw	208
  1462  106A  3407               	retlw	7
  1463                           
  1464                           ;initializer for _knob3_prev
  1465  106B  34D0               	retlw	208
  1466  106C  3407               	retlw	7
  1467                           
  1468                           ;initializer for _knob4_prev
  1469  106D  34D0               	retlw	208
  1470  106E  3407               	retlw	7
  1471                           
  1472                           ;initializer for _knob5_prev
  1473  106F  34D0               	retlw	208
  1474  1070  3407               	retlw	7
  1475                           
  1476                           ;initializer for _mod_delay_time
  1477  1071  34D0               	retlw	208
  1478  1072  3407               	retlw	7
  1479                           
  1480                           	psect	idataBANK5
  1481  1237                     __pidataBANK5:	
  1482                           
  1483                           ;initializer for _mod2
  1484  1237  3400               	retlw	0
  1485  1238  3400               	retlw	0
  1486  1239  340D               	retlw	13
  1487  123A  3400               	retlw	0
  1488  123B  341B               	retlw	27
  1489  123C  3400               	retlw	0
  1490  123D  3428               	retlw	40
  1491  123E  3400               	retlw	0
  1492  123F  3435               	retlw	53
  1493  1240  3400               	retlw	0
  1494  1241  3443               	retlw	67
  1495  1242  3400               	retlw	0
  1496  1243  3450               	retlw	80
  1497  1244  3400               	retlw	0
  1498  1245  345D               	retlw	93
  1499  1246  3400               	retlw	0
  1500  1247  345D               	retlw	93
  1501  1248  3400               	retlw	0
  1502  1249  3450               	retlw	80
  1503  124A  3400               	retlw	0
  1504  124B  3443               	retlw	67
  1505  124C  3400               	retlw	0
  1506  124D  3435               	retlw	53
  1507  124E  3400               	retlw	0
  1508  124F  3428               	retlw	40
  1509  1250  3400               	retlw	0
  1510  1251  341B               	retlw	27
  1511  1252  3400               	retlw	0
  1512  1253  340D               	retlw	13
  1513  1254  3400               	retlw	0
  1514  1255  3400               	retlw	0
  1515  1256  3400               	retlw	0
  1516  1257  34F3               	retlw	243
  1517  1258  34FF               	retlw	255
  1518  1259  34E5               	retlw	229
  1519  125A  34FF               	retlw	255
  1520  125B  34D8               	retlw	216
  1521  125C  34FF               	retlw	255
  1522  125D  34CB               	retlw	203
  1523  125E  34FF               	retlw	255
  1524  125F  34BD               	retlw	189
  1525  1260  34FF               	retlw	255
  1526  1261  34B0               	retlw	176
  1527  1262  34FF               	retlw	255
  1528  1263  34A3               	retlw	163
  1529  1264  34FF               	retlw	255
  1530  1265  34A3               	retlw	163
  1531  1266  34FF               	retlw	255
  1532  1267  34B0               	retlw	176
  1533  1268  34FF               	retlw	255
  1534  1269  34BD               	retlw	189
  1535  126A  34FF               	retlw	255
  1536  126B  34CB               	retlw	203
  1537  126C  34FF               	retlw	255
  1538  126D  34D8               	retlw	216
  1539  126E  34FF               	retlw	255
  1540  126F  34E5               	retlw	229
  1541  1270  34FF               	retlw	255
  1542                           
  1543                           	psect	idataBANK6
  1544  11FD                     __pidataBANK6:	
  1545                           
  1546                           ;initializer for _mod3
  1547  11FD  3400               	retlw	0
  1548  11FE  3400               	retlw	0
  1549  11FF  3407               	retlw	7
  1550  1200  3400               	retlw	0
  1551  1201  340D               	retlw	13
  1552  1202  3400               	retlw	0
  1553  1203  3414               	retlw	20
  1554  1204  3400               	retlw	0
  1555  1205  341B               	retlw	27
  1556  1206  3400               	retlw	0
  1557  1207  3421               	retlw	33
  1558  1208  3400               	retlw	0
  1559  1209  3428               	retlw	40
  1560  120A  3400               	retlw	0
  1561  120B  342F               	retlw	47
  1562  120C  3400               	retlw	0
  1563  120D  3435               	retlw	53
  1564  120E  3400               	retlw	0
  1565  120F  343C               	retlw	60
  1566  1210  3400               	retlw	0
  1567  1211  3443               	retlw	67
  1568  1212  3400               	retlw	0
  1569  1213  3449               	retlw	73
  1570  1214  3400               	retlw	0
  1571  1215  3450               	retlw	80
  1572  1216  3400               	retlw	0
  1573  1217  3457               	retlw	87
  1574  1218  3400               	retlw	0
  1575  1219  345D               	retlw	93
  1576  121A  3400               	retlw	0
  1577  121B  349C               	retlw	156
  1578  121C  34FF               	retlw	255
  1579  121D  34A3               	retlw	163
  1580  121E  34FF               	retlw	255
  1581  121F  34A9               	retlw	169
  1582  1220  34FF               	retlw	255
  1583  1221  34B0               	retlw	176
  1584  1222  34FF               	retlw	255
  1585  1223  34B7               	retlw	183
  1586  1224  34FF               	retlw	255
  1587  1225  34BD               	retlw	189
  1588  1226  34FF               	retlw	255
  1589  1227  34C4               	retlw	196
  1590  1228  34FF               	retlw	255
  1591  1229  34CB               	retlw	203
  1592  122A  34FF               	retlw	255
  1593  122B  34D1               	retlw	209
  1594  122C  34FF               	retlw	255
  1595  122D  34D8               	retlw	216
  1596  122E  34FF               	retlw	255
  1597  122F  34DF               	retlw	223
  1598  1230  34FF               	retlw	255
  1599  1231  34E5               	retlw	229
  1600  1232  34FF               	retlw	255
  1601  1233  34EC               	retlw	236
  1602  1234  34FF               	retlw	255
  1603  1235  34F3               	retlw	243
  1604  1236  34FF               	retlw	255
  1605                           
  1606                           	psect	idataBANK7
  1607  11C3                     __pidataBANK7:	
  1608                           
  1609                           ;initializer for _mod4
  1610  11C3  3464               	retlw	100
  1611  11C4  3400               	retlw	0
  1612  11C5  3464               	retlw	100
  1613  11C6  3400               	retlw	0
  1614  11C7  3464               	retlw	100
  1615  11C8  3400               	retlw	0
  1616  11C9  3464               	retlw	100
  1617  11CA  3400               	retlw	0
  1618  11CB  3464               	retlw	100
  1619  11CC  3400               	retlw	0
  1620  11CD  3464               	retlw	100
  1621  11CE  3400               	retlw	0
  1622  11CF  3464               	retlw	100
  1623  11D0  3400               	retlw	0
  1624  11D1  3464               	retlw	100
  1625  11D2  3400               	retlw	0
  1626  11D3  3464               	retlw	100
  1627  11D4  3400               	retlw	0
  1628  11D5  3464               	retlw	100
  1629  11D6  3400               	retlw	0
  1630  11D7  3464               	retlw	100
  1631  11D8  3400               	retlw	0
  1632  11D9  3464               	retlw	100
  1633  11DA  3400               	retlw	0
  1634  11DB  3464               	retlw	100
  1635  11DC  3400               	retlw	0
  1636  11DD  3464               	retlw	100
  1637  11DE  3400               	retlw	0
  1638  11DF  3464               	retlw	100
  1639  11E0  3400               	retlw	0
  1640  11E1  349C               	retlw	156
  1641  11E2  34FF               	retlw	255
  1642  11E3  349C               	retlw	156
  1643  11E4  34FF               	retlw	255
  1644  11E5  349C               	retlw	156
  1645  11E6  34FF               	retlw	255
  1646  11E7  349C               	retlw	156
  1647  11E8  34FF               	retlw	255
  1648  11E9  349C               	retlw	156
  1649  11EA  34FF               	retlw	255
  1650  11EB  349C               	retlw	156
  1651  11EC  34FF               	retlw	255
  1652  11ED  349C               	retlw	156
  1653  11EE  34FF               	retlw	255
  1654  11EF  349C               	retlw	156
  1655  11F0  34FF               	retlw	255
  1656  11F1  349C               	retlw	156
  1657  11F2  34FF               	retlw	255
  1658  11F3  349C               	retlw	156
  1659  11F4  34FF               	retlw	255
  1660  11F5  349C               	retlw	156
  1661  11F6  34FF               	retlw	255
  1662  11F7  349C               	retlw	156
  1663  11F8  34FF               	retlw	255
  1664  11F9  349C               	retlw	156
  1665  11FA  34FF               	retlw	255
  1666  11FB  349C               	retlw	156
  1667  11FC  34FF               	retlw	255
  1668                           
  1669                           	psect	idataBANK8
  1670  1408                     __pidataBANK8:	
  1671                           
  1672                           ;initializer for _B25k
  1673  1408  34FF               	retlw	255
  1674  1409  3400               	retlw	0
  1675  140A  34FF               	retlw	255
  1676  140B  3400               	retlw	0
  1677  140C  34FF               	retlw	255
  1678  140D  3400               	retlw	0
  1679  140E  34DF               	retlw	223
  1680  140F  3400               	retlw	0
  1681  1410  34AE               	retlw	174
  1682  1411  3400               	retlw	0
  1683  1412  348E               	retlw	142
  1684  1413  3400               	retlw	0
  1685  1414  3478               	retlw	120
  1686  1415  3400               	retlw	0
  1687  1416  3467               	retlw	103
  1688  1417  3400               	retlw	0
  1689  1418  345B               	retlw	91
  1690  1419  3400               	retlw	0
  1691  141A  3450               	retlw	80
  1692  141B  3400               	retlw	0
  1693  141C  3448               	retlw	72
  1694  141D  3400               	retlw	0
  1695  141E  3442               	retlw	66
  1696  141F  3400               	retlw	0
  1697  1420  343C               	retlw	60
  1698  1421  3400               	retlw	0
  1699  1422  3437               	retlw	55
  1700  1423  3400               	retlw	0
  1701  1424  3433               	retlw	51
  1702  1425  3400               	retlw	0
  1703  1426  3430               	retlw	48
  1704  1427  3400               	retlw	0
  1705  1428  342D               	retlw	45
  1706  1429  3400               	retlw	0
  1707  142A  342A               	retlw	42
  1708  142B  3400               	retlw	0
  1709  142C  3427               	retlw	39
  1710  142D  3400               	retlw	0
  1711  142E  3425               	retlw	37
  1712  142F  3400               	retlw	0
  1713  1430  3423               	retlw	35
  1714  1431  3400               	retlw	0
  1715  1432  3421               	retlw	33
  1716  1433  3400               	retlw	0
  1717  1434  3420               	retlw	32
  1718  1435  3400               	retlw	0
  1719  1436  341E               	retlw	30
  1720  1437  3400               	retlw	0
  1721  1438  341D               	retlw	29
  1722  1439  3400               	retlw	0
  1723  143A  341C               	retlw	28
  1724  143B  3400               	retlw	0
  1725  143C  341B               	retlw	27
  1726  143D  3400               	retlw	0
  1727  143E  341A               	retlw	26
  1728  143F  3400               	retlw	0
  1729  1440  3419               	retlw	25
  1730  1441  3400               	retlw	0
  1731  1442  3418               	retlw	24
  1732  1443  3400               	retlw	0
  1733  1444  3417               	retlw	23
  1734  1445  3400               	retlw	0
  1735  1446  3416               	retlw	22
  1736  1447  3400               	retlw	0
  1737  1448  3415               	retlw	21
  1738  1449  3400               	retlw	0
  1739  144A  3415               	retlw	21
  1740  144B  3400               	retlw	0
  1741  144C  3414               	retlw	20
  1742  144D  3400               	retlw	0
  1743  144E  3413               	retlw	19
  1744  144F  3400               	retlw	0
  1745  1450  340F               	retlw	15
  1746  1451  3400               	retlw	0
  1747  1452  340B               	retlw	11
  1748  1453  3400               	retlw	0
  1749  1454  3407               	retlw	7
  1750  1455  3400               	retlw	0
  1751  1456  3407               	retlw	7
  1752  1457  3400               	retlw	0
  1753                           
  1754                           	psect	idataBANK9
  1755  13B8                     __pidataBANK9:	
  1756                           
  1757                           ;initializer for _iB25k
  1758  13B8  3407               	retlw	7
  1759  13B9  3400               	retlw	0
  1760  13BA  3407               	retlw	7
  1761  13BB  3400               	retlw	0
  1762  13BC  340B               	retlw	11
  1763  13BD  3400               	retlw	0
  1764  13BE  340F               	retlw	15
  1765  13BF  3400               	retlw	0
  1766  13C0  3413               	retlw	19
  1767  13C1  3400               	retlw	0
  1768  13C2  3414               	retlw	20
  1769  13C3  3400               	retlw	0
  1770  13C4  3415               	retlw	21
  1771  13C5  3400               	retlw	0
  1772  13C6  3415               	retlw	21
  1773  13C7  3400               	retlw	0
  1774  13C8  3416               	retlw	22
  1775  13C9  3400               	retlw	0
  1776  13CA  3417               	retlw	23
  1777  13CB  3400               	retlw	0
  1778  13CC  3418               	retlw	24
  1779  13CD  3400               	retlw	0
  1780  13CE  3419               	retlw	25
  1781  13CF  3400               	retlw	0
  1782  13D0  341A               	retlw	26
  1783  13D1  3400               	retlw	0
  1784  13D2  341B               	retlw	27
  1785  13D3  3400               	retlw	0
  1786  13D4  341C               	retlw	28
  1787  13D5  3400               	retlw	0
  1788  13D6  341D               	retlw	29
  1789  13D7  3400               	retlw	0
  1790  13D8  341E               	retlw	30
  1791  13D9  3400               	retlw	0
  1792  13DA  3420               	retlw	32
  1793  13DB  3400               	retlw	0
  1794  13DC  3421               	retlw	33
  1795  13DD  3400               	retlw	0
  1796  13DE  3423               	retlw	35
  1797  13DF  3400               	retlw	0
  1798  13E0  3425               	retlw	37
  1799  13E1  3400               	retlw	0
  1800  13E2  3427               	retlw	39
  1801  13E3  3400               	retlw	0
  1802  13E4  342A               	retlw	42
  1803  13E5  3400               	retlw	0
  1804  13E6  342D               	retlw	45
  1805  13E7  3400               	retlw	0
  1806  13E8  3430               	retlw	48
  1807  13E9  3400               	retlw	0
  1808  13EA  3433               	retlw	51
  1809  13EB  3400               	retlw	0
  1810  13EC  3437               	retlw	55
  1811  13ED  3400               	retlw	0
  1812  13EE  343C               	retlw	60
  1813  13EF  3400               	retlw	0
  1814  13F0  3442               	retlw	66
  1815  13F1  3400               	retlw	0
  1816  13F2  3448               	retlw	72
  1817  13F3  3400               	retlw	0
  1818  13F4  3450               	retlw	80
  1819  13F5  3400               	retlw	0
  1820  13F6  345B               	retlw	91
  1821  13F7  3400               	retlw	0
  1822  13F8  3467               	retlw	103
  1823  13F9  3400               	retlw	0
  1824  13FA  3478               	retlw	120
  1825  13FB  3400               	retlw	0
  1826  13FC  348E               	retlw	142
  1827  13FD  3400               	retlw	0
  1828  13FE  34AE               	retlw	174
  1829  13FF  3400               	retlw	0
  1830  1400  34DF               	retlw	223
  1831  1401  3400               	retlw	0
  1832  1402  34FF               	retlw	255
  1833  1403  3400               	retlw	0
  1834  1404  34FF               	retlw	255
  1835  1405  3400               	retlw	0
  1836  1406  34FF               	retlw	255
  1837  1407  3400               	retlw	0
  1838                           
  1839                           	psect	idataBANK10
  1840  1189                     __pidataBANK10:	
  1841                           
  1842                           ;initializer for _mod1
  1843  1189  3400               	retlw	0
  1844  118A  3400               	retlw	0
  1845  118B  3415               	retlw	21
  1846  118C  3400               	retlw	0
  1847  118D  3428               	retlw	40
  1848  118E  3400               	retlw	0
  1849  118F  343B               	retlw	59
  1850  1190  3400               	retlw	0
  1851  1191  344A               	retlw	74
  1852  1192  3400               	retlw	0
  1853  1193  3456               	retlw	86
  1854  1194  3400               	retlw	0
  1855  1195  345F               	retlw	95
  1856  1196  3400               	retlw	0
  1857  1197  3463               	retlw	99
  1858  1198  3400               	retlw	0
  1859  1199  3464               	retlw	100
  1860  119A  3400               	retlw	0
  1861  119B  345F               	retlw	95
  1862  119C  3400               	retlw	0
  1863  119D  3457               	retlw	87
  1864  119E  3400               	retlw	0
  1865  119F  344B               	retlw	75
  1866  11A0  3400               	retlw	0
  1867  11A1  343C               	retlw	60
  1868  11A2  3400               	retlw	0
  1869  11A3  342A               	retlw	42
  1870  11A4  3400               	retlw	0
  1871  11A5  3416               	retlw	22
  1872  11A6  3400               	retlw	0
  1873  11A7  3402               	retlw	2
  1874  11A8  3400               	retlw	0
  1875  11A9  34ED               	retlw	237
  1876  11AA  34FF               	retlw	255
  1877  11AB  34D9               	retlw	217
  1878  11AC  34FF               	retlw	255
  1879  11AD  34C7               	retlw	199
  1880  11AE  34FF               	retlw	255
  1881  11AF  34B7               	retlw	183
  1882  11B0  34FF               	retlw	255
  1883  11B1  34AB               	retlw	171
  1884  11B2  34FF               	retlw	255
  1885  11B3  34A2               	retlw	162
  1886  11B4  34FF               	retlw	255
  1887  11B5  349D               	retlw	157
  1888  11B6  34FF               	retlw	255
  1889  11B7  349C               	retlw	156
  1890  11B8  34FF               	retlw	255
  1891  11B9  34A8               	retlw	168
  1892  11BA  34FF               	retlw	255
  1893  11BB  34B4               	retlw	180
  1894  11BC  34FF               	retlw	255
  1895  11BD  34C3               	retlw	195
  1896  11BE  34FF               	retlw	255
  1897  11BF  34D5               	retlw	213
  1898  11C0  34FF               	retlw	255
  1899  11C1  34E8               	retlw	232
  1900  11C2  34FF               	retlw	255
  1901                           
  1902                           	psect	idataBIGRAM
  1903  019E                     __pidataBIGRAM:	
  1904                           
  1905                           ;initializer for _delay
  1906  019E  3422               	retlw	34
  1907  019F  3408               	retlw	8
  1908  01A0  34FC               	retlw	252
  1909  01A1  3407               	retlw	7
  1910  01A2  34D8               	retlw	216
  1911  01A3  3407               	retlw	7
  1912  01A4  34B5               	retlw	181
  1913  01A5  3407               	retlw	7
  1914  01A6  3493               	retlw	147
  1915  01A7  3407               	retlw	7
  1916  01A8  3472               	retlw	114
  1917  01A9  3407               	retlw	7
  1918  01AA  3452               	retlw	82
  1919  01AB  3407               	retlw	7
  1920  01AC  3434               	retlw	52
  1921  01AD  3407               	retlw	7
  1922  01AE  3416               	retlw	22
  1923  01AF  3407               	retlw	7
  1924  01B0  34F9               	retlw	249
  1925  01B1  3406               	retlw	6
  1926  01B2  34DD               	retlw	221
  1927  01B3  3406               	retlw	6
  1928  01B4  34C2               	retlw	194
  1929  01B5  3406               	retlw	6
  1930  01B6  34A8               	retlw	168
  1931  01B7  3406               	retlw	6
  1932  01B8  348F               	retlw	143
  1933  01B9  3406               	retlw	6
  1934  01BA  3476               	retlw	118
  1935  01BB  3406               	retlw	6
  1936  01BC  345E               	retlw	94
  1937  01BD  3406               	retlw	6
  1938  01BE  3447               	retlw	71
  1939  01BF  3406               	retlw	6
  1940  01C0  3430               	retlw	48
  1941  01C1  3406               	retlw	6
  1942  01C2  341A               	retlw	26
  1943  01C3  3406               	retlw	6
  1944  01C4  3405               	retlw	5
  1945  01C5  3406               	retlw	6
  1946  01C6  34F0               	retlw	240
  1947  01C7  3405               	retlw	5
  1948  01C8  34DC               	retlw	220
  1949  01C9  3405               	retlw	5
  1950  01CA  34C8               	retlw	200
  1951  01CB  3405               	retlw	5
  1952  01CC  34B5               	retlw	181
  1953  01CD  3405               	retlw	5
  1954  01CE  34A3               	retlw	163
  1955  01CF  3405               	retlw	5
  1956  01D0  3490               	retlw	144
  1957  01D1  3405               	retlw	5
  1958  01D2  347F               	retlw	127
  1959  01D3  3405               	retlw	5
  1960  01D4  346D               	retlw	109
  1961  01D5  3405               	retlw	5
  1962  01D6  345C               	retlw	92
  1963  01D7  3405               	retlw	5
  1964  01D8  344C               	retlw	76
  1965  01D9  3405               	retlw	5
  1966  01DA  343C               	retlw	60
  1967  01DB  3405               	retlw	5
  1968  01DC  342C               	retlw	44
  1969  01DD  3405               	retlw	5
  1970  01DE  341D               	retlw	29
  1971  01DF  3405               	retlw	5
  1972  01E0  340E               	retlw	14
  1973  01E1  3405               	retlw	5
  1974  01E2  34FF               	retlw	255
  1975  01E3  3404               	retlw	4
  1976  01E4  34F1               	retlw	241
  1977  01E5  3404               	retlw	4
  1978  01E6  34E2               	retlw	226
  1979  01E7  3404               	retlw	4
  1980  01E8  34D5               	retlw	213
  1981  01E9  3404               	retlw	4
  1982  01EA  34C7               	retlw	199
  1983  01EB  3404               	retlw	4
  1984  01EC  34BA               	retlw	186
  1985  01ED  3404               	retlw	4
  1986  01EE  34AD               	retlw	173
  1987  01EF  3404               	retlw	4
  1988  01F0  34A1               	retlw	161
  1989  01F1  3404               	retlw	4
  1990  01F2  3494               	retlw	148
  1991  01F3  3404               	retlw	4
  1992  01F4  3488               	retlw	136
  1993  01F5  3404               	retlw	4
  1994  01F6  347D               	retlw	125
  1995  01F7  3404               	retlw	4
  1996  01F8  3471               	retlw	113
  1997  01F9  3404               	retlw	4
  1998  01FA  3466               	retlw	102
  1999  01FB  3404               	retlw	4
  2000  01FC  345A               	retlw	90
  2001  01FD  3404               	retlw	4
  2002  01FE  3450               	retlw	80
  2003  01FF  3404               	retlw	4
  2004  0200  3445               	retlw	69
  2005  0201  3404               	retlw	4
  2006  0202  343A               	retlw	58
  2007  0203  3404               	retlw	4
  2008  0204  3430               	retlw	48
  2009  0205  3404               	retlw	4
  2010  0206  3426               	retlw	38
  2011  0207  3404               	retlw	4
  2012  0208  341C               	retlw	28
  2013  0209  3404               	retlw	4
  2014  020A  3412               	retlw	18
  2015  020B  3404               	retlw	4
  2016  020C  3409               	retlw	9
  2017  020D  3404               	retlw	4
  2018  020E  34FF               	retlw	255
  2019  020F  3403               	retlw	3
  2020  0210  34F6               	retlw	246
  2021  0211  3403               	retlw	3
  2022  0212  34ED               	retlw	237
  2023  0213  3403               	retlw	3
  2024  0214  34E4               	retlw	228
  2025  0215  3403               	retlw	3
  2026  0216  34DC               	retlw	220
  2027  0217  3403               	retlw	3
  2028  0218  34D3               	retlw	211
  2029  0219  3403               	retlw	3
  2030  021A  34CB               	retlw	203
  2031  021B  3403               	retlw	3
  2032  021C  34C2               	retlw	194
  2033  021D  3403               	retlw	3
  2034  021E  34BA               	retlw	186
  2035  021F  3403               	retlw	3
  2036  0220  34B2               	retlw	178
  2037  0221  3403               	retlw	3
  2038  0222  34AA               	retlw	170
  2039  0223  3403               	retlw	3
  2040  0224  34A2               	retlw	162
  2041  0225  3403               	retlw	3
  2042  0226  349B               	retlw	155
  2043  0227  3403               	retlw	3
  2044  0228  3493               	retlw	147
  2045  0229  3403               	retlw	3
  2046  022A  348C               	retlw	140
  2047  022B  3403               	retlw	3
  2048  022C  3485               	retlw	133
  2049  022D  3403               	retlw	3
  2050  022E  347E               	retlw	126
  2051  022F  3403               	retlw	3
  2052  0230  3477               	retlw	119
  2053  0231  3403               	retlw	3
  2054  0232  3470               	retlw	112
  2055  0233  3403               	retlw	3
  2056  0234  3469               	retlw	105
  2057  0235  3403               	retlw	3
  2058  0236  3462               	retlw	98
  2059  0237  3403               	retlw	3
  2060  0238  345C               	retlw	92
  2061  0239  3403               	retlw	3
  2062  023A  3455               	retlw	85
  2063  023B  3403               	retlw	3
  2064  023C  344F               	retlw	79
  2065  023D  3403               	retlw	3
  2066  023E  3448               	retlw	72
  2067  023F  3403               	retlw	3
  2068  0240  3442               	retlw	66
  2069  0241  3403               	retlw	3
  2070  0242  343C               	retlw	60
  2071  0243  3403               	retlw	3
  2072  0244  3436               	retlw	54
  2073  0245  3403               	retlw	3
  2074  0246  3430               	retlw	48
  2075  0247  3403               	retlw	3
  2076  0248  342A               	retlw	42
  2077  0249  3403               	retlw	3
  2078  024A  3424               	retlw	36
  2079  024B  3403               	retlw	3
  2080  024C  341F               	retlw	31
  2081  024D  3403               	retlw	3
  2082  024E  3419               	retlw	25
  2083  024F  3403               	retlw	3
  2084  0250  3413               	retlw	19
  2085  0251  3403               	retlw	3
  2086  0252  340E               	retlw	14
  2087  0253  3403               	retlw	3
  2088  0254  3409               	retlw	9
  2089  0255  3403               	retlw	3
  2090  0256  3403               	retlw	3
  2091  0257  3403               	retlw	3
  2092  0258  34FE               	retlw	254
  2093  0259  3402               	retlw	2
  2094  025A  34F9               	retlw	249
  2095  025B  3402               	retlw	2
  2096  025C  34F4               	retlw	244
  2097  025D  3402               	retlw	2
  2098  025E  34EF               	retlw	239
  2099  025F  3402               	retlw	2
  2100  0260  34EA               	retlw	234
  2101  0261  3402               	retlw	2
  2102  0262  34E5               	retlw	229
  2103  0263  3402               	retlw	2
  2104  0264  34E0               	retlw	224
  2105  0265  3402               	retlw	2
  2106  0266  34DB               	retlw	219
  2107  0267  3402               	retlw	2
  2108  0268  34D7               	retlw	215
  2109  0269  3402               	retlw	2
  2110  026A  34D2               	retlw	210
  2111  026B  3402               	retlw	2
  2112  026C  34CD               	retlw	205
  2113  026D  3402               	retlw	2
  2114  026E  34C9               	retlw	201
  2115  026F  3402               	retlw	2
  2116  0270  34C4               	retlw	196
  2117  0271  3402               	retlw	2
  2118  0272  34C0               	retlw	192
  2119  0273  3402               	retlw	2
  2120  0274  34BC               	retlw	188
  2121  0275  3402               	retlw	2
  2122  0276  34B7               	retlw	183
  2123  0277  3402               	retlw	2
  2124  0278  34B3               	retlw	179
  2125  0279  3402               	retlw	2
  2126  027A  34AF               	retlw	175
  2127  027B  3402               	retlw	2
  2128  027C  34AB               	retlw	171
  2129  027D  3402               	retlw	2
  2130  027E  34A6               	retlw	166
  2131  027F  3402               	retlw	2
  2132  0280  34A2               	retlw	162
  2133  0281  3402               	retlw	2
  2134  0282  349E               	retlw	158
  2135  0283  3402               	retlw	2
  2136  0284  349A               	retlw	154
  2137  0285  3402               	retlw	2
  2138  0286  3497               	retlw	151
  2139  0287  3402               	retlw	2
  2140  0288  3493               	retlw	147
  2141  0289  3402               	retlw	2
  2142  028A  348F               	retlw	143
  2143  028B  3402               	retlw	2
  2144  028C  348B               	retlw	139
  2145  028D  3402               	retlw	2
  2146  028E  3487               	retlw	135
  2147  028F  3402               	retlw	2
  2148  0290  3484               	retlw	132
  2149  0291  3402               	retlw	2
  2150  0292  3480               	retlw	128
  2151  0293  3402               	retlw	2
  2152  0294  347C               	retlw	124
  2153  0295  3402               	retlw	2
  2154  0296  3479               	retlw	121
  2155  0297  3402               	retlw	2
  2156  0298  3475               	retlw	117
  2157  0299  3402               	retlw	2
  2158  029A  3472               	retlw	114
  2159  029B  3402               	retlw	2
  2160  029C  346E               	retlw	110
  2161  029D  3402               	retlw	2
  2162  029E  346B               	retlw	107
  2163  029F  3402               	retlw	2
  2164  02A0  3467               	retlw	103
  2165  02A1  3402               	retlw	2
  2166  02A2  3464               	retlw	100
  2167  02A3  3402               	retlw	2
  2168  02A4  3461               	retlw	97
  2169  02A5  3402               	retlw	2
  2170  02A6  345E               	retlw	94
  2171  02A7  3402               	retlw	2
  2172  02A8  345A               	retlw	90
  2173  02A9  3402               	retlw	2
  2174  02AA  3457               	retlw	87
  2175  02AB  3402               	retlw	2
  2176  02AC  3454               	retlw	84
  2177  02AD  3402               	retlw	2
  2178  02AE  3451               	retlw	81
  2179  02AF  3402               	retlw	2
  2180  02B0  344E               	retlw	78
  2181  02B1  3402               	retlw	2
  2182  02B2  344B               	retlw	75
  2183  02B3  3402               	retlw	2
  2184  02B4  3448               	retlw	72
  2185  02B5  3402               	retlw	2
  2186  02B6  3445               	retlw	69
  2187  02B7  3402               	retlw	2
  2188  02B8  3442               	retlw	66
  2189  02B9  3402               	retlw	2
  2190  02BA  343F               	retlw	63
  2191  02BB  3402               	retlw	2
  2192  02BC  343C               	retlw	60
  2193  02BD  3402               	retlw	2
  2194  02BE  3439               	retlw	57
  2195  02BF  3402               	retlw	2
  2196  02C0  3436               	retlw	54
  2197  02C1  3402               	retlw	2
  2198  02C2  3433               	retlw	51
  2199  02C3  3402               	retlw	2
  2200  02C4  3430               	retlw	48
  2201  02C5  3402               	retlw	2
  2202  02C6  342E               	retlw	46
  2203  02C7  3402               	retlw	2
  2204  02C8  342B               	retlw	43
  2205  02C9  3402               	retlw	2
  2206  02CA  3428               	retlw	40
  2207  02CB  3402               	retlw	2
  2208  02CC  3425               	retlw	37
  2209  02CD  3402               	retlw	2
  2210  02CE  3423               	retlw	35
  2211  02CF  3402               	retlw	2
  2212  02D0  3420               	retlw	32
  2213  02D1  3402               	retlw	2
  2214  02D2  341E               	retlw	30
  2215  02D3  3402               	retlw	2
  2216  02D4  341B               	retlw	27
  2217  02D5  3402               	retlw	2
  2218  02D6  3418               	retlw	24
  2219  02D7  3402               	retlw	2
  2220  02D8  3416               	retlw	22
  2221  02D9  3402               	retlw	2
  2222  02DA  3413               	retlw	19
  2223  02DB  3402               	retlw	2
  2224  02DC  3411               	retlw	17
  2225  02DD  3402               	retlw	2
  2226  02DE  340E               	retlw	14
  2227  02DF  3402               	retlw	2
  2228  02E0  340C               	retlw	12
  2229  02E1  3402               	retlw	2
  2230  02E2  340A               	retlw	10
  2231  02E3  3402               	retlw	2
  2232  02E4  3407               	retlw	7
  2233  02E5  3402               	retlw	2
  2234  02E6  3405               	retlw	5
  2235  02E7  3402               	retlw	2
  2236  02E8  3402               	retlw	2
  2237  02E9  3402               	retlw	2
  2238  02EA  3400               	retlw	0
  2239  02EB  3402               	retlw	2
  2240  02EC  34FE               	retlw	254
  2241  02ED  3401               	retlw	1
  2242  02EE  34FB               	retlw	251
  2243  02EF  3401               	retlw	1
  2244  02F0  34F9               	retlw	249
  2245  02F1  3401               	retlw	1
  2246  02F2  34F7               	retlw	247
  2247  02F3  3401               	retlw	1
  2248  02F4  34F5               	retlw	245
  2249  02F5  3401               	retlw	1
  2250  02F6  34F2               	retlw	242
  2251  02F7  3401               	retlw	1
  2252  02F8  34F0               	retlw	240
  2253  02F9  3401               	retlw	1
  2254  02FA  34EE               	retlw	238
  2255  02FB  3401               	retlw	1
  2256  02FC  34EC               	retlw	236
  2257  02FD  3401               	retlw	1
  2258  02FE  34EA               	retlw	234
  2259  02FF  3401               	retlw	1
  2260  0300  34E8               	retlw	232
  2261  0301  3401               	retlw	1
  2262  0302  34E6               	retlw	230
  2263  0303  3401               	retlw	1
  2264  0304  34E3               	retlw	227
  2265  0305  3401               	retlw	1
  2266  0306  34E1               	retlw	225
  2267  0307  3401               	retlw	1
  2268  0308  34DF               	retlw	223
  2269  0309  3401               	retlw	1
  2270  030A  34DD               	retlw	221
  2271  030B  3401               	retlw	1
  2272  030C  34DB               	retlw	219
  2273  030D  3401               	retlw	1
  2274  030E  34D9               	retlw	217
  2275  030F  3401               	retlw	1
  2276  0310  34D7               	retlw	215
  2277  0311  3401               	retlw	1
  2278  0312  34D5               	retlw	213
  2279  0313  3401               	retlw	1
  2280  0314  34D3               	retlw	211
  2281  0315  3401               	retlw	1
  2282  0316  34D2               	retlw	210
  2283  0317  3401               	retlw	1
  2284  0318  34D0               	retlw	208
  2285  0319  3401               	retlw	1
  2286  031A  34CE               	retlw	206
  2287  031B  3401               	retlw	1
  2288  031C  34CC               	retlw	204
  2289  031D  3401               	retlw	1
  2290  031E  34CA               	retlw	202
  2291  031F  3401               	retlw	1
  2292  0320  34C8               	retlw	200
  2293  0321  3401               	retlw	1
  2294  0322  34C6               	retlw	198
  2295  0323  3401               	retlw	1
  2296  0324  34C4               	retlw	196
  2297  0325  3401               	retlw	1
  2298  0326  34C3               	retlw	195
  2299  0327  3401               	retlw	1
  2300  0328  34C1               	retlw	193
  2301  0329  3401               	retlw	1
  2302  032A  34BF               	retlw	191
  2303  032B  3401               	retlw	1
  2304  032C  34BD               	retlw	189
  2305  032D  3401               	retlw	1
  2306  032E  34BC               	retlw	188
  2307  032F  3401               	retlw	1
  2308  0330  34BA               	retlw	186
  2309  0331  3401               	retlw	1
  2310  0332  34B8               	retlw	184
  2311  0333  3401               	retlw	1
  2312  0334  34B6               	retlw	182
  2313  0335  3401               	retlw	1
  2314  0336  34B5               	retlw	181
  2315  0337  3401               	retlw	1
  2316  0338  34B3               	retlw	179
  2317  0339  3401               	retlw	1
  2318  033A  34B1               	retlw	177
  2319  033B  3401               	retlw	1
  2320  033C  34B0               	retlw	176
  2321  033D  3401               	retlw	1
  2322  033E  34AE               	retlw	174
  2323  033F  3401               	retlw	1
  2324  0340  34AC               	retlw	172
  2325  0341  3401               	retlw	1
  2326  0342  34AB               	retlw	171
  2327  0343  3401               	retlw	1
  2328  0344  34A9               	retlw	169
  2329  0345  3401               	retlw	1
  2330  0346  34A8               	retlw	168
  2331  0347  3401               	retlw	1
  2332  0348  34A6               	retlw	166
  2333  0349  3401               	retlw	1
  2334  034A  34A4               	retlw	164
  2335  034B  3401               	retlw	1
  2336  034C  34A3               	retlw	163
  2337  034D  3401               	retlw	1
  2338  034E  34A1               	retlw	161
  2339  034F  3401               	retlw	1
  2340  0350  34A0               	retlw	160
  2341  0351  3401               	retlw	1
  2342  0352  349E               	retlw	158
  2343  0353  3401               	retlw	1
  2344  0354  349D               	retlw	157
  2345  0355  3401               	retlw	1
  2346  0356  349B               	retlw	155
  2347  0357  3401               	retlw	1
  2348  0358  349A               	retlw	154
  2349  0359  3401               	retlw	1
  2350  035A  3498               	retlw	152
  2351  035B  3401               	retlw	1
  2352  035C  3497               	retlw	151
  2353  035D  3401               	retlw	1
  2354  035E  3495               	retlw	149
  2355  035F  3401               	retlw	1
  2356  0360  3494               	retlw	148
  2357  0361  3401               	retlw	1
  2358  0362  3492               	retlw	146
  2359  0363  3401               	retlw	1
  2360  0364  3491               	retlw	145
  2361  0365  3401               	retlw	1
  2362  0366  3490               	retlw	144
  2363  0367  3401               	retlw	1
  2364  0368  348E               	retlw	142
  2365  0369  3401               	retlw	1
  2366  036A  348D               	retlw	141
  2367  036B  3401               	retlw	1
  2368  036C  348B               	retlw	139
  2369  036D  3401               	retlw	1
  2370  036E  348A               	retlw	138
  2371  036F  3401               	retlw	1
  2372  0370  3489               	retlw	137
  2373  0371  3401               	retlw	1
  2374  0372  3487               	retlw	135
  2375  0373  3401               	retlw	1
  2376  0374  3486               	retlw	134
  2377  0375  3401               	retlw	1
  2378  0376  3485               	retlw	133
  2379  0377  3401               	retlw	1
  2380  0378  3483               	retlw	131
  2381  0379  3401               	retlw	1
  2382  037A  3482               	retlw	130
  2383  037B  3401               	retlw	1
  2384  037C  3481               	retlw	129
  2385  037D  3401               	retlw	1
  2386  037E  347F               	retlw	127
  2387  037F  3401               	retlw	1
  2388  0380  347E               	retlw	126
  2389  0381  3401               	retlw	1
  2390  0382  347D               	retlw	125
  2391  0383  3401               	retlw	1
  2392  0384  347B               	retlw	123
  2393  0385  3401               	retlw	1
  2394  0386  347A               	retlw	122
  2395  0387  3401               	retlw	1
  2396  0388  3479               	retlw	121
  2397  0389  3401               	retlw	1
  2398  038A  3478               	retlw	120
  2399  038B  3401               	retlw	1
  2400  038C  3476               	retlw	118
  2401  038D  3401               	retlw	1
  2402  038E  3475               	retlw	117
  2403  038F  3401               	retlw	1
  2404  0390  3474               	retlw	116
  2405  0391  3401               	retlw	1
  2406  0392  3473               	retlw	115
  2407  0393  3401               	retlw	1
  2408  0394  3471               	retlw	113
  2409  0395  3401               	retlw	1
  2410  0396  3470               	retlw	112
  2411  0397  3401               	retlw	1
  2412  0398  346F               	retlw	111
  2413  0399  3401               	retlw	1
  2414  039A  346E               	retlw	110
  2415  039B  3401               	retlw	1
  2416                           
  2417                           ;initializer for _mod5
  2418  039C  3400               	retlw	0
  2419  039D  3400               	retlw	0
  2420  039E  340A               	retlw	10
  2421  039F  3400               	retlw	0
  2422  03A0  3414               	retlw	20
  2423  03A1  3400               	retlw	0
  2424  03A2  341E               	retlw	30
  2425  03A3  3400               	retlw	0
  2426  03A4  3428               	retlw	40
  2427  03A5  3400               	retlw	0
  2428  03A6  3432               	retlw	50
  2429  03A7  3400               	retlw	0
  2430  03A8  343A               	retlw	58
  2431  03A9  3400               	retlw	0
  2432  03AA  3442               	retlw	66
  2433  03AB  3400               	retlw	0
  2434  03AC  344A               	retlw	74
  2435  03AD  3400               	retlw	0
  2436  03AE  3450               	retlw	80
  2437  03AF  3400               	retlw	0
  2438  03B0  3456               	retlw	86
  2439  03B1  3400               	retlw	0
  2440  03B2  345B               	retlw	91
  2441  03B3  3400               	retlw	0
  2442  03B4  345F               	retlw	95
  2443  03B5  3400               	retlw	0
  2444  03B6  3461               	retlw	97
  2445  03B7  3400               	retlw	0
  2446  03B8  3463               	retlw	99
  2447  03B9  3400               	retlw	0
  2448  03BA  3464               	retlw	100
  2449  03BB  3400               	retlw	0
  2450  03BC  3463               	retlw	99
  2451  03BD  3400               	retlw	0
  2452  03BE  3461               	retlw	97
  2453  03BF  3400               	retlw	0
  2454  03C0  345F               	retlw	95
  2455  03C1  3400               	retlw	0
  2456  03C2  345B               	retlw	91
  2457  03C3  3400               	retlw	0
  2458  03C4  3456               	retlw	86
  2459  03C5  3400               	retlw	0
  2460  03C6  3450               	retlw	80
  2461  03C7  3400               	retlw	0
  2462  03C8  344A               	retlw	74
  2463  03C9  3400               	retlw	0
  2464  03CA  3442               	retlw	66
  2465  03CB  3400               	retlw	0
  2466  03CC  343A               	retlw	58
  2467  03CD  3400               	retlw	0
  2468  03CE  3432               	retlw	50
  2469  03CF  3400               	retlw	0
  2470  03D0  3428               	retlw	40
  2471  03D1  3400               	retlw	0
  2472  03D2  341E               	retlw	30
  2473  03D3  3400               	retlw	0
  2474  03D4  3414               	retlw	20
  2475  03D5  3400               	retlw	0
  2476  03D6  340A               	retlw	10
  2477  03D7  3400               	retlw	0
  2478  03D8  3400               	retlw	0
  2479  03D9  3400               	retlw	0
  2480  03DA  34F6               	retlw	246
  2481  03DB  34FF               	retlw	255
  2482  03DC  34EC               	retlw	236
  2483  03DD  34FF               	retlw	255
  2484  03DE  34E2               	retlw	226
  2485  03DF  34FF               	retlw	255
  2486  03E0  34D8               	retlw	216
  2487  03E1  34FF               	retlw	255
  2488  03E2  34CE               	retlw	206
  2489  03E3  34FF               	retlw	255
  2490  03E4  34C6               	retlw	198
  2491  03E5  34FF               	retlw	255
  2492  03E6  34BE               	retlw	190
  2493  03E7  34FF               	retlw	255
  2494  03E8  34B6               	retlw	182
  2495  03E9  34FF               	retlw	255
  2496  03EA  34B0               	retlw	176
  2497  03EB  34FF               	retlw	255
  2498  03EC  34AA               	retlw	170
  2499  03ED  34FF               	retlw	255
  2500  03EE  34A5               	retlw	165
  2501  03EF  34FF               	retlw	255
  2502  03F0  34A1               	retlw	161
  2503  03F1  34FF               	retlw	255
  2504  03F2  349F               	retlw	159
  2505  03F3  34FF               	retlw	255
  2506  03F4  349D               	retlw	157
  2507  03F5  34FF               	retlw	255
  2508  03F6  349C               	retlw	156
  2509  03F7  34FF               	retlw	255
  2510  03F8  349D               	retlw	157
  2511  03F9  34FF               	retlw	255
  2512  03FA  349F               	retlw	159
  2513  03FB  34FF               	retlw	255
  2514  03FC  34A1               	retlw	161
  2515  03FD  34FF               	retlw	255
  2516  03FE  34A5               	retlw	165
  2517  03FF  34FF               	retlw	255
  2518  0400  34AA               	retlw	170
  2519  0401  34FF               	retlw	255
  2520  0402  34B0               	retlw	176
  2521  0403  34FF               	retlw	255
  2522  0404  34B6               	retlw	182
  2523  0405  34FF               	retlw	255
  2524  0406  34BE               	retlw	190
  2525  0407  34FF               	retlw	255
  2526  0408  34C6               	retlw	198
  2527  0409  34FF               	retlw	255
  2528  040A  34CE               	retlw	206
  2529  040B  34FF               	retlw	255
  2530  040C  34D8               	retlw	216
  2531  040D  34FF               	retlw	255
  2532  040E  34E2               	retlw	226
  2533  040F  34FF               	retlw	255
  2534  0410  34EC               	retlw	236
  2535  0411  34FF               	retlw	255
  2536  0412  34F6               	retlw	246
  2537  0413  34FF               	retlw	255
  2538  0414  3400               	retlw	0
  2539  0415  3400               	retlw	0
  2540  000B                     _INTCONbits	set	11
  2541  000D                     _PORTBbits	set	13
  2542  000F                     _PORTDbits	set	15
  2543  0010                     _PORTEbits	set	16
  2544  001B                     _PR2	set	27
  2545  001C                     _T2CONbits	set	28
  2546  009D                     _ADCON0bits	set	157
  2547  009E                     _ADCON1bits	set	158
  2548  009C                     _ADRESH	set	156
  2549  009B                     _ADRESL	set	155
  2550  0095                     _OPTION_REGbits	set	149
  2551  0099                     _OSCCONbits	set	153
  2552  008D                     _TRISBbits	set	141
  2553  008E                     _TRISCbits	set	142
  2554  008F                     _TRISDbits	set	143
  2555  0090                     _TRISEbits	set	144
  2556  011D                     _APFCONbits	set	285
  2557  010D                     _LATBbits	set	269
  2558  010E                     _LATCbits	set	270
  2559  010F                     _LATDbits	set	271
  2560  018D                     _ANSELBbits	set	397
  2561  0190                     _ANSELEbits	set	400
  2562  0192                     _PMADRH	set	402
  2563  0191                     _PMADRL	set	401
  2564  0195                     _PMCON1bits	set	405
  2565  0196                     _PMCON2	set	406
  2566  0194                     _PMDATH	set	404
  2567  0193                     _PMDATL	set	403
  2568  0291                     _CCPR1	set	657
  2569  0298                     _CCPR2	set	664
  2570  0293                     _CCP1CONbits	set	659
  2571  029A                     _CCP2CONbits	set	666
  2572  029D                     _CCPTMRS0	set	669
  2573  029E                     _CCPTMRS1	set	670
  2574  029F                     _CCPTMRS2	set	671
  2575  0311                     _CCPR3	set	785
  2576  0318                     _CCPR4	set	792
  2577  031C                     _CCPR5	set	796
  2578  0313                     _CCP3CONbits	set	787
  2579  031A                     _CCP4CONbits	set	794
  2580  031E                     _CCP5CONbits	set	798
  2581  030C                     _TRISFbits	set	780
  2582  030D                     _TRISGbits	set	781
  2583  038C                     _LATFbits	set	908
  2584  038D                     _LATGbits	set	909
  2585  061A                     _CCPR9	set	1562
  2586  061F                     _CCP10CONbits	set	1567
  2587  0613                     _CCP6CONbits	set	1555
  2588  0616                     _CCP7CONbits	set	1558
  2589  0619                     _CCP8CONbits	set	1561
  2590  061C                     _CCP9CONbits	set	1564
  2591                           
  2592                           ; #config settings
  2593  0000                     
  2594                           	psect	cinit
  2595  00E7                     start_initialization:	
  2596  00E7                     __initialization:		;BIGRAM
  2597                           
  2598                           ; Clear objects allocated to COMMON
  2599  00E7  01F9               	clrf	__pbssCOMMON& (0+127)
  2600  00E8  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
  2601                           
  2602                           ; Clear objects allocated to BANK1
  2603  00E9  30C5               	movlw	low __pbssBANK1
  2604  00EA  0084               	movwf	4
  2605  00EB  3000               	movlw	high __pbssBANK1
  2606  00EC  0085               	movwf	5
  2607  00ED  301A               	movlw	26
  2608  00EE  00FE               	movwf	btemp
  2609  00EF  3000               	movlw	0
  2610  00F0  00FF               	movwf	btemp+1
  2611  00F1  3190  2057  3180   	fcall	clear_ram0
  2612                           
  2613                           ; Clear objects allocated to BANK2
  2614  00F4  3020               	movlw	low __pbssBANK2
  2615  00F5  0084               	movwf	4
  2616  00F6  3001               	movlw	high __pbssBANK2
  2617  00F7  0085               	movwf	5
  2618  00F8  303E               	movlw	62
  2619  00F9  00FE               	movwf	btemp
  2620  00FA  3000               	movlw	0
  2621  00FB  00FF               	movwf	btemp+1
  2622  00FC  3190  2057  3180   	fcall	clear_ram0
  2623                           
  2624                           ; Clear objects allocated to BANK3
  2625  00FF  30A0               	movlw	low __pbssBANK3
  2626  0100  0084               	movwf	4
  2627  0101  3001               	movlw	high __pbssBANK3
  2628  0102  0085               	movwf	5
  2629  0103  3044               	movlw	68
  2630  0104  00FE               	movwf	btemp
  2631  0105  3000               	movlw	0
  2632  0106  00FF               	movwf	btemp+1
  2633  0107  3190  2057  3180   	fcall	clear_ram0
  2634                           
  2635                           ; Clear objects allocated to BANK4
  2636  010A  3020               	movlw	low __pbssBANK4
  2637  010B  0084               	movwf	4
  2638  010C  3002               	movlw	high __pbssBANK4
  2639  010D  0085               	movwf	5
  2640  010E  3040               	movlw	64
  2641  010F  00FE               	movwf	btemp
  2642  0110  3000               	movlw	0
  2643  0111  00FF               	movwf	btemp+1
  2644  0112  3190  2057  3180   	fcall	clear_ram0
  2645                           
  2646                           ; Initialize objects allocated to BIGRAM
  2647  0115  309E               	movlw	low __pidataBIGRAM
  2648  0116  0084               	movwf	4
  2649  0117  3081               	movlw	(high __pidataBIGRAM)| (0+128)
  2650  0118  0085               	movwf	5
  2651  0119  3078               	movlw	low (0+9080)
  2652  011A  0086               	movwf	6
  2653  011B  3023               	movlw	high (0+9080)
  2654  011C  0087               	movwf	7
  2655  011D  3002               	movlw	2
  2656  011E  00FF               	movwf	btemp+1
  2657  011F  3078               	movlw	120
  2658  0120  3190  204B  3180   	fcall	init_ram
  2659                           
  2660                           ; Initialize objects allocated to COMMON
  2661  0123  3187  27FE  3180   	fcall	__pidataCOMMON	;fetch initializer
  2662  0126  00FB               	movwf	__pdataCOMMON& (0+127)
  2663  0127  3187  27FF  3180   	fcall	__pidataCOMMON+1	;fetch initializer
  2664  012A  00FC               	movwf	(__pdataCOMMON+1)& (0+127)
  2665                           
  2666                           ; Initialize objects allocated to BANK1
  2667  012B  3073               	movlw	low __pidataBANK1
  2668  012C  0084               	movwf	4
  2669  012D  3090               	movlw	(high __pidataBANK1)| (0+128)
  2670  012E  0085               	movwf	5
  2671  012F  30DF               	movlw	low __pdataBANK1
  2672  0130  0086               	movwf	6
  2673  0131  3000               	movlw	high __pdataBANK1
  2674  0132  0087               	movwf	7
  2675  0133  3000               	movlw	0
  2676  0134  00FF               	movwf	btemp+1
  2677  0135  3010               	movlw	16
  2678  0136  3190  204B  3180   	fcall	init_ram
  2679                           
  2680                           ; Initialize objects allocated to BANK2
  2681  0139  3063               	movlw	low __pidataBANK2
  2682  013A  0084               	movwf	4
  2683  013B  3090               	movlw	(high __pidataBANK2)| (0+128)
  2684  013C  0085               	movwf	5
  2685  013D  305E               	movlw	low __pdataBANK2
  2686  013E  0086               	movwf	6
  2687  013F  3001               	movlw	high __pdataBANK2
  2688  0140  0087               	movwf	7
  2689  0141  3000               	movlw	0
  2690  0142  00FF               	movwf	btemp+1
  2691  0143  3010               	movlw	16
  2692  0144  3190  204B  3180   	fcall	init_ram
  2693                           
  2694                           ; Initialize objects allocated to BANK5
  2695  0147  3037               	movlw	low __pidataBANK5
  2696  0148  0084               	movwf	4
  2697  0149  3092               	movlw	(high __pidataBANK5)| (0+128)
  2698  014A  0085               	movwf	5
  2699  014B  30A0               	movlw	low __pdataBANK5
  2700  014C  0086               	movwf	6
  2701  014D  3002               	movlw	high __pdataBANK5
  2702  014E  0087               	movwf	7
  2703  014F  3000               	movlw	0
  2704  0150  00FF               	movwf	btemp+1
  2705  0151  303A               	movlw	58
  2706  0152  3190  204B  3180   	fcall	init_ram
  2707                           
  2708                           ; Initialize objects allocated to BANK6
  2709  0155  30FD               	movlw	low __pidataBANK6
  2710  0156  0084               	movwf	4
  2711  0157  3091               	movlw	(high __pidataBANK6)| (0+128)
  2712  0158  0085               	movwf	5
  2713  0159  3020               	movlw	low __pdataBANK6
  2714  015A  0086               	movwf	6
  2715  015B  3003               	movlw	high __pdataBANK6
  2716  015C  0087               	movwf	7
  2717  015D  3000               	movlw	0
  2718  015E  00FF               	movwf	btemp+1
  2719  015F  303A               	movlw	58
  2720  0160  3190  204B  3180   	fcall	init_ram
  2721                           
  2722                           ; Initialize objects allocated to BANK7
  2723  0163  30C3               	movlw	low __pidataBANK7
  2724  0164  0084               	movwf	4
  2725  0165  3091               	movlw	(high __pidataBANK7)| (0+128)
  2726  0166  0085               	movwf	5
  2727  0167  30A0               	movlw	low __pdataBANK7
  2728  0168  0086               	movwf	6
  2729  0169  3003               	movlw	high __pdataBANK7
  2730  016A  0087               	movwf	7
  2731  016B  3000               	movlw	0
  2732  016C  00FF               	movwf	btemp+1
  2733  016D  303A               	movlw	58
  2734  016E  3190  204B  3180   	fcall	init_ram
  2735                           
  2736                           ; Initialize objects allocated to BANK8
  2737  0171  3008               	movlw	low __pidataBANK8
  2738  0172  0084               	movwf	4
  2739  0173  3094               	movlw	(high __pidataBANK8)| (0+128)
  2740  0174  0085               	movwf	5
  2741  0175  3020               	movlw	low __pdataBANK8
  2742  0176  0086               	movwf	6
  2743  0177  3004               	movlw	high __pdataBANK8
  2744  0178  0087               	movwf	7
  2745  0179  3000               	movlw	0
  2746  017A  00FF               	movwf	btemp+1
  2747  017B  3050               	movlw	80
  2748  017C  3190  204B  3180   	fcall	init_ram
  2749                           
  2750                           ; Initialize objects allocated to BANK9
  2751  017F  30B8               	movlw	low __pidataBANK9
  2752  0180  0084               	movwf	4
  2753  0181  3093               	movlw	(high __pidataBANK9)| (0+128)
  2754  0182  0085               	movwf	5
  2755  0183  30A0               	movlw	low __pdataBANK9
  2756  0184  0086               	movwf	6
  2757  0185  3004               	movlw	high __pdataBANK9
  2758  0186  0087               	movwf	7
  2759  0187  3000               	movlw	0
  2760  0188  00FF               	movwf	btemp+1
  2761  0189  3050               	movlw	80
  2762  018A  3190  204B  3180   	fcall	init_ram
  2763                           
  2764                           ; Initialize objects allocated to BANK10
  2765  018D  3089               	movlw	low __pidataBANK10
  2766  018E  0084               	movwf	4
  2767  018F  3091               	movlw	(high __pidataBANK10)| (0+128)
  2768  0190  0085               	movwf	5
  2769  0191  3020               	movlw	low __pdataBANK10
  2770  0192  0086               	movwf	6
  2771  0193  3005               	movlw	high __pdataBANK10
  2772  0194  0087               	movwf	7
  2773  0195  3000               	movlw	0
  2774  0196  00FF               	movwf	btemp+1
  2775  0197  303A               	movlw	58
  2776  0198  3190  204B         	fcall	init_ram
  2777  019A                     end_of_initialization:	
  2778                           ;End of C runtime variable initialization code
  2779                           
  2780  019A                     __end_of__initialization:	
  2781  019A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2782  019B  0020               	movlb	0
  2783  019C  3188  28DD         	ljmp	_main	;jump to C main() function
  2784                           
  2785                           	psect	bssCOMMON
  2786  0079                     __pbssCOMMON:	
  2787  0079                     _knob_5_pos:	
  2788  0079                     	ds	2
  2789                           
  2790                           	psect	dataCOMMON
  2791  007B                     __pdataCOMMON:	
  2792  007B                     _top_push_state:	
  2793  007B                     	ds	2
  2794                           
  2795                           	psect	bssBANK1
  2796  00C5                     __pbssBANK1:	
  2797  00C5                     _sub_timer:	
  2798  00C5                     	ds	4
  2799  00C9                     _tap_timer:	
  2800  00C9                     	ds	4
  2801  00CD                     _timer:	
  2802  00CD                     	ds	4
  2803  00D1                     _bypass_state:	
  2804  00D1                     	ds	2
  2805  00D3                     _iCnt:	
  2806  00D3                     	ds	2
  2807  00D5                     _knob_1_pos:	
  2808  00D5                     	ds	2
  2809  00D7                     _knob_2_pos:	
  2810  00D7                     	ds	2
  2811  00D9                     _knob_3_pos:	
  2812  00D9                     	ds	2
  2813  00DB                     _knob_4_pos:	
  2814  00DB                     	ds	2
  2815  00DD                     _mod_counter:	
  2816  00DD                     	ds	2
  2817                           
  2818                           	psect	dataBANK1
  2819  00DF                     __pdataBANK1:	
  2820  00DF                     _baseline_delay_time:	
  2821  00DF                     	ds	4
  2822  00E3                     _delay_time:	
  2823  00E3                     	ds	4
  2824  00E7                     _bottom_push_state:	
  2825  00E7                     	ds	2
  2826  00E9                     _knob1_prev:	
  2827  00E9                     	ds	2
  2828  00EB                     _num_taps:	
  2829  00EB                     	ds	2
  2830  00ED                     _tap_iteration:	
  2831  00ED                     	ds	2
  2832                           
  2833                           	psect	bssBANK2
  2834  0120                     __pbssBANK2:	
  2835  0120                     _tap_history:	
  2836  0120                     	ds	20
  2837  0134                     _mod_timer:	
  2838  0134                     	ds	4
  2839  0138                     _tap1:	
  2840  0138                     	ds	4
  2841  013C                     _tap2:	
  2842  013C                     	ds	4
  2843  0140                     _tap3:	
  2844  0140                     	ds	4
  2845  0144                     _tap4:	
  2846  0144                     	ds	4
  2847  0148                     _tap_total:	
  2848  0148                     	ds	4
  2849  014C                     wait_ms@timel:	
  2850  014C                     	ds	4
  2851  0150                     _SPI_Value:	
  2852  0150                     	ds	2
  2853  0152                     _debounce_bypass:	
  2854  0152                     	ds	2
  2855  0154                     _debounce_count:	
  2856  0154                     	ds	2
  2857  0156                     _delay_counter:	
  2858  0156                     	ds	2
  2859  0158                     _delayfound:	
  2860  0158                     	ds	2
  2861  015A                     _mod_value:	
  2862  015A                     	ds	2
  2863  015C                     _preset:	
  2864  015C                     	ds	2
  2865                           
  2866                           	psect	dataBANK2
  2867  015E                     __pdataBANK2:	
  2868  015E                     _blink_state:	
  2869  015E                     	ds	2
  2870  0160                     _delay_time_changed:	
  2871  0160                     	ds	2
  2872  0162                     _incoming_data:	
  2873  0162                     	ds	2
  2874  0164                     _knob2_prev:	
  2875  0164                     	ds	2
  2876  0166                     _knob3_prev:	
  2877  0166                     	ds	2
  2878  0168                     _knob4_prev:	
  2879  0168                     	ds	2
  2880  016A                     _knob5_prev:	
  2881  016A                     	ds	2
  2882  016C                     _mod_delay_time:	
  2883  016C                     	ds	2
  2884                           
  2885                           	psect	bssBANK3
  2886  01A0                     __pbssBANK3:	
  2887  01A0                     _tap:	
  2888  01A0                     	ds	44
  2889  01CC                     _tap10:	
  2890  01CC                     	ds	4
  2891  01D0                     _tap5:	
  2892  01D0                     	ds	4
  2893  01D4                     _tap6:	
  2894  01D4                     	ds	4
  2895  01D8                     _tap7:	
  2896  01D8                     	ds	4
  2897  01DC                     _tap8:	
  2898  01DC                     	ds	4
  2899  01E0                     _tap9:	
  2900  01E0                     	ds	4
  2901                           
  2902                           	psect	bssBANK4
  2903  0220                     __pbssBANK4:	
  2904  0220                     _myBuf:	
  2905  0220                     	ds	64
  2906                           
  2907                           	psect	dataBANK5
  2908  02A0                     __pdataBANK5:	
  2909  02A0                     _mod2:	
  2910  02A0                     	ds	58
  2911                           
  2912                           	psect	dataBANK6
  2913  0320                     __pdataBANK6:	
  2914  0320                     _mod3:	
  2915  0320                     	ds	58
  2916                           
  2917                           	psect	dataBANK7
  2918  03A0                     __pdataBANK7:	
  2919  03A0                     _mod4:	
  2920  03A0                     	ds	58
  2921                           
  2922                           	psect	dataBANK8
  2923  0420                     __pdataBANK8:	
  2924  0420                     _B25k:	
  2925  0420                     	ds	80
  2926                           
  2927                           	psect	dataBANK9
  2928  04A0                     __pdataBANK9:	
  2929  04A0                     _iB25k:	
  2930  04A0                     	ds	80
  2931                           
  2932                           	psect	dataBANK10
  2933  0520                     __pdataBANK10:	
  2934  0520                     _mod1:	
  2935  0520                     	ds	58
  2936                           
  2937                           	psect	clrtext
  2938  1057                     clear_ram0:	
  2939                           ;	Called with FSR0 containing the base address, and
  2940                           ;	btemp/btemp+1 has the size to clear
  2941                           
  2942  1057  0064               	clrwdt	;clear the watchdog before getting into this loop
  2943  1058                     clrloop0:	
  2944  1058  0180               	clrf	0	;clear RAM location pointed to by FSR
  2945  1059  3101               	addfsr 0,1
  2946  105A  3001               	movlw	1
  2947  105B  02FE               	subwf	126,f
  2948  105C  3000               	movlw	0
  2949  105D  3BFF               	subwfb	127,f
  2950  105E  087F               	movf	127,w
  2951  105F  047E               	iorwf	126,w
  2952  1060  1903               	btfsc	3,2
  2953  1061  3400               	retlw	0	;all done for this memory range, return
  2954  1062  2858               	goto	clrloop0	;have we reached the end yet?
  2955                           
  2956                           	psect	inittext
  2957  104B                     init_ram:	
  2958  104B  00FE               	movwf	126
  2959  104C                     initloop:	
  2960  104C  0012               	moviw fsr0++
  2961  104D  001E               	movwi fsr1++
  2962  104E  3001               	movlw	1
  2963  104F  02FE               	subwf	126,f
  2964  1050  3000               	movlw	0
  2965  1051  3BFF               	subwfb	127,f
  2966  1052  087F               	movf	127,w
  2967  1053  047E               	iorwf	126,w
  2968  1054  1903               	btfsc	3,2
  2969  1055  3400               	retlw	0
  2970  1056  284C               	goto	initloop
  2971                           
  2972                           	psect	cstackBANK1
  2973  00A0                     __pcstackBANK1:	
  2974  00A0                     ___fttol@sign1:	
  2975                           
  2976                           ; 1 bytes @ 0x0
  2977  00A0                     	ds	1
  2978  00A1                     ___fttol@lval:	
  2979                           
  2980                           ; 4 bytes @ 0x1
  2981  00A1                     	ds	4
  2982  00A5                     ___fttol@exp1:	
  2983                           
  2984                           ; 1 bytes @ 0x5
  2985  00A5                     	ds	1
  2986  00A6                     ?_set_subdivision:	
  2987  00A6                     set_subdivision@x:	
  2988                           ; 2 bytes @ 0x6
  2989                           
  2990                           
  2991                           ; 2 bytes @ 0x6
  2992  00A6                     	ds	2
  2993  00A8                     set_subdivision@y:	
  2994                           
  2995                           ; 2 bytes @ 0x8
  2996  00A8                     	ds	2
  2997  00AA                     ??_main:	
  2998                           
  2999                           ; 1 bytes @ 0xA
  3000  00AA                     	ds	15
  3001  00B9                     main@i:	
  3002                           
  3003                           ; 2 bytes @ 0x19
  3004  00B9                     	ds	2
  3005  00BB                     main@tapCntDivisor:	
  3006                           
  3007                           ; 2 bytes @ 0x1B
  3008  00BB                     	ds	2
  3009  00BD                     main@adjusted_pot_value:	
  3010                           
  3011                           ; 2 bytes @ 0x1D
  3012  00BD                     	ds	2
  3013  00BF                     main@i_395:	
  3014                           
  3015                           ; 2 bytes @ 0x1F
  3016  00BF                     	ds	2
  3017  00C1                     main@i_396:	
  3018                           
  3019                           ; 2 bytes @ 0x21
  3020  00C1                     	ds	2
  3021  00C3                     main@count:	
  3022                           
  3023                           ; 2 bytes @ 0x23
  3024  00C3                     	ds	2
  3025                           
  3026                           	psect	cstackCOMMON
  3027  0070                     __pcstackCOMMON:	
  3028  0070                     ?_ConfigureOscillator:	
  3029  0070                     ?_InitApp:	
  3030                           ; 1 bytes @ 0x0
  3031                           
  3032  0070                     ?_init_adc:	
  3033                           ; 1 bytes @ 0x0
  3034                           
  3035  0070                     ?_init_pwm:	
  3036                           ; 1 bytes @ 0x0
  3037                           
  3038  0070                     ?_init_timer2:	
  3039                           ; 1 bytes @ 0x0
  3040                           
  3041  0070                     ?_init_timer0:	
  3042                           ; 1 bytes @ 0x0
  3043                           
  3044  0070                     ?_isr:	
  3045                           ; 1 bytes @ 0x0
  3046                           
  3047  0070                     ?_main:	
  3048                           ; 1 bytes @ 0x0
  3049                           
  3050  0070                     ?i1_set_leds_top:	
  3051                           ; 1 bytes @ 0x0
  3052                           
  3053  0070                     i1set_leds_top@x:	
  3054                           ; 1 bytes @ 0x0
  3055                           
  3056                           
  3057                           ; 2 bytes @ 0x0
  3058  0070                     	ds	2
  3059  0072                     i1set_leds_top@ledState:	
  3060                           
  3061                           ; 2 bytes @ 0x2
  3062  0072                     	ds	2
  3063  0074                     ??_isr:	
  3064  0074                     ??i1_set_leds_top:	
  3065                           ; 1 bytes @ 0x4
  3066                           
  3067                           
  3068                           ; 1 bytes @ 0x4
  3069  0074                     	ds	5
  3070                           
  3071                           	psect	cstackBANK0
  3072  0020                     __pcstackBANK0:	
  3073  0020                     ?_set_leds_top:	
  3074  0020                     ??_ConfigureOscillator:	
  3075                           ; 1 bytes @ 0x0
  3076                           
  3077  0020                     ??_InitApp:	
  3078                           ; 1 bytes @ 0x0
  3079                           
  3080  0020                     ?_set_leds_bottom:	
  3081                           ; 1 bytes @ 0x0
  3082                           
  3083  0020                     ??_init_adc:	
  3084                           ; 1 bytes @ 0x0
  3085                           
  3086  0020                     ??_init_pwm:	
  3087                           ; 1 bytes @ 0x0
  3088                           
  3089  0020                     ??_init_timer2:	
  3090                           ; 1 bytes @ 0x0
  3091                           
  3092  0020                     ??_init_timer0:	
  3093                           ; 1 bytes @ 0x0
  3094                           
  3095  0020                     ?_FLASH_EraseBlock:	
  3096                           ; 1 bytes @ 0x0
  3097                           
  3098  0020                     ?_FLASH_ReadWord:	
  3099                           ; 1 bytes @ 0x0
  3100                           
  3101  0020                     ?_adc_convert:	
  3102                           ; 2 bytes @ 0x0
  3103                           
  3104  0020                     ?___wmul:	
  3105                           ; 2 bytes @ 0x0
  3106                           
  3107  0020                     ?___awdiv:	
  3108                           ; 2 bytes @ 0x0
  3109                           
  3110  0020                     ?___ftpack:	
  3111                           ; 2 bytes @ 0x0
  3112                           
  3113  0020                     ?___ftneg:	
  3114                           ; 3 bytes @ 0x0
  3115                           
  3116  0020                     ?___lmul:	
  3117                           ; 3 bytes @ 0x0
  3118                           
  3119  0020                     set_leds_bottom@x:	
  3120                           ; 4 bytes @ 0x0
  3121                           
  3122  0020                     set_leds_top@x:	
  3123                           ; 2 bytes @ 0x0
  3124                           
  3125  0020                     FLASH_ReadWord@flashAddr:	
  3126                           ; 2 bytes @ 0x0
  3127                           
  3128  0020                     FLASH_EraseBlock@startAddr:	
  3129                           ; 2 bytes @ 0x0
  3130                           
  3131  0020                     ___wmul@multiplier:	
  3132                           ; 2 bytes @ 0x0
  3133                           
  3134  0020                     ___awdiv@divisor:	
  3135                           ; 2 bytes @ 0x0
  3136                           
  3137  0020                     ___ftpack@arg:	
  3138                           ; 2 bytes @ 0x0
  3139                           
  3140  0020                     ___ftneg@f1:	
  3141                           ; 3 bytes @ 0x0
  3142                           
  3143  0020                     ___lmul@multiplier:	
  3144                           ; 3 bytes @ 0x0
  3145                           
  3146                           
  3147                           ; 4 bytes @ 0x0
  3148  0020                     	ds	2
  3149  0022                     ??_FLASH_ReadWord:	
  3150  0022                     ??_set_leds_bottom:	
  3151                           ; 1 bytes @ 0x2
  3152                           
  3153  0022                     ??_adc_convert:	
  3154                           ; 1 bytes @ 0x2
  3155                           
  3156  0022                     ??_FLASH_EraseBlock:	
  3157                           ; 1 bytes @ 0x2
  3158                           
  3159  0022                     FLASH_ReadWord@GIEBitValue:	
  3160                           ; 1 bytes @ 0x2
  3161                           
  3162  0022                     FLASH_EraseBlock@GIEBitValue:	
  3163                           ; 1 bytes @ 0x2
  3164                           
  3165  0022                     set_leds_top@ledState:	
  3166                           ; 1 bytes @ 0x2
  3167                           
  3168  0022                     ___wmul@multiplicand:	
  3169                           ; 2 bytes @ 0x2
  3170                           
  3171  0022                     ___awdiv@dividend:	
  3172                           ; 2 bytes @ 0x2
  3173                           
  3174                           
  3175                           ; 2 bytes @ 0x2
  3176  0022                     	ds	1
  3177  0023                     ?_FLASH_WriteBlock:	
  3178  0023                     ??___ftneg:	
  3179                           ; 1 bytes @ 0x3
  3180                           
  3181  0023                     adc_convert@channel:	
  3182                           ; 1 bytes @ 0x3
  3183                           
  3184  0023                     ___ftpack@exp:	
  3185                           ; 1 bytes @ 0x3
  3186                           
  3187  0023                     FLASH_WriteBlock@writeAddr:	
  3188                           ; 1 bytes @ 0x3
  3189                           
  3190                           
  3191                           ; 2 bytes @ 0x3
  3192  0023                     	ds	1
  3193  0024                     ??_set_leds_top:	
  3194  0024                     ??___wmul:	
  3195                           ; 1 bytes @ 0x4
  3196                           
  3197  0024                     ??___awdiv:	
  3198                           ; 1 bytes @ 0x4
  3199                           
  3200  0024                     ___ftpack@sign:	
  3201                           ; 1 bytes @ 0x4
  3202                           
  3203  0024                     ___wmul@product:	
  3204                           ; 1 bytes @ 0x4
  3205                           
  3206  0024                     ___lmul@multiplicand:	
  3207                           ; 2 bytes @ 0x4
  3208                           
  3209                           
  3210                           ; 4 bytes @ 0x4
  3211  0024                     	ds	1
  3212  0025                     ??___ftpack:	
  3213  0025                     FLASH_WriteBlock@flashWordArray:	
  3214                           ; 1 bytes @ 0x5
  3215                           
  3216  0025                     ___awdiv@counter:	
  3217                           ; 1 bytes @ 0x5
  3218                           
  3219                           
  3220                           ; 1 bytes @ 0x5
  3221  0025                     	ds	1
  3222  0026                     ??_FLASH_WriteBlock:	
  3223  0026                     ?___aldiv:	
  3224                           ; 1 bytes @ 0x6
  3225                           
  3226  0026                     ___awdiv@sign:	
  3227                           ; 4 bytes @ 0x6
  3228                           
  3229  0026                     ___aldiv@divisor:	
  3230                           ; 1 bytes @ 0x6
  3231                           
  3232                           
  3233                           ; 4 bytes @ 0x6
  3234  0026                     	ds	1
  3235  0027                     ___awdiv@quotient:	
  3236                           
  3237                           ; 2 bytes @ 0x7
  3238  0027                     	ds	1
  3239  0028                     ??___lmul:	
  3240  0028                     ?___altoft:	
  3241                           ; 1 bytes @ 0x8
  3242                           
  3243  0028                     ?___awtoft:	
  3244                           ; 3 bytes @ 0x8
  3245                           
  3246  0028                     ?___ftadd:	
  3247                           ; 3 bytes @ 0x8
  3248                           
  3249  0028                     ___awtoft@c:	
  3250                           ; 3 bytes @ 0x8
  3251                           
  3252  0028                     ___ftadd@f1:	
  3253                           ; 2 bytes @ 0x8
  3254                           
  3255  0028                     ___lmul@product:	
  3256                           ; 3 bytes @ 0x8
  3257                           
  3258  0028                     ___altoft@c:	
  3259                           ; 4 bytes @ 0x8
  3260                           
  3261                           
  3262                           ; 4 bytes @ 0x8
  3263  0028                     	ds	1
  3264  0029                     FLASH_WriteBlock@blockStartAddr:	
  3265                           
  3266                           ; 2 bytes @ 0x9
  3267  0029                     	ds	1
  3268  002A                     ___aldiv@dividend:	
  3269                           
  3270                           ; 4 bytes @ 0xA
  3271  002A                     	ds	1
  3272  002B                     ??___awtoft:	
  3273  002B                     FLASH_WriteBlock@GIEBitValue:	
  3274                           ; 1 bytes @ 0xB
  3275                           
  3276  002B                     ___ftadd@f2:	
  3277                           ; 1 bytes @ 0xB
  3278                           
  3279                           
  3280                           ; 3 bytes @ 0xB
  3281  002B                     	ds	1
  3282  002C                     ?_wait_ms:	
  3283  002C                     ??___altoft:	
  3284                           ; 1 bytes @ 0xC
  3285                           
  3286  002C                     FLASH_WriteBlock@i:	
  3287                           ; 1 bytes @ 0xC
  3288                           
  3289  002C                     wait_ms@time:	
  3290                           ; 1 bytes @ 0xC
  3291                           
  3292                           
  3293                           ; 2 bytes @ 0xC
  3294  002C                     	ds	1
  3295  002D                     ?_FLASH_WriteWord:	
  3296  002D                     ___awtoft@sign:	
  3297                           ; 1 bytes @ 0xD
  3298                           
  3299  002D                     FLASH_WriteWord@flashAddr:	
  3300                           ; 1 bytes @ 0xD
  3301                           
  3302                           
  3303                           ; 2 bytes @ 0xD
  3304  002D                     	ds	1
  3305  002E                     ??_wait_ms:	
  3306  002E                     ??___aldiv:	
  3307                           ; 1 bytes @ 0xE
  3308                           
  3309  002E                     ??___ftadd:	
  3310                           ; 1 bytes @ 0xE
  3311                           
  3312  002E                     ___altoft@exp:	
  3313                           ; 1 bytes @ 0xE
  3314                           
  3315                           
  3316                           ; 1 bytes @ 0xE
  3317  002E                     	ds	1
  3318  002F                     FLASH_WriteWord@ramBuf:	
  3319  002F                     ___aldiv@counter:	
  3320                           ; 1 bytes @ 0xF
  3321                           
  3322  002F                     ___altoft@sign:	
  3323                           ; 1 bytes @ 0xF
  3324                           
  3325                           
  3326                           ; 1 bytes @ 0xF
  3327  002F                     	ds	1
  3328  0030                     ___aldiv@sign:	
  3329  0030                     FLASH_WriteWord@word:	
  3330                           ; 1 bytes @ 0x10
  3331                           
  3332                           
  3333                           ; 2 bytes @ 0x10
  3334  0030                     	ds	1
  3335  0031                     ___aldiv@quotient:	
  3336                           
  3337                           ; 4 bytes @ 0x11
  3338  0031                     	ds	1
  3339  0032                     ??_FLASH_WriteWord:	
  3340  0032                     ___ftadd@sign:	
  3341                           ; 1 bytes @ 0x12
  3342                           
  3343                           
  3344                           ; 1 bytes @ 0x12
  3345  0032                     	ds	1
  3346  0033                     FLASH_WriteWord@offset:	
  3347  0033                     ___ftadd@exp2:	
  3348                           ; 1 bytes @ 0x13
  3349                           
  3350                           
  3351                           ; 1 bytes @ 0x13
  3352  0033                     	ds	1
  3353  0034                     ___ftadd@exp1:	
  3354  0034                     FLASH_WriteWord@blockStartAddr:	
  3355                           ; 1 bytes @ 0x14
  3356                           
  3357                           
  3358                           ; 2 bytes @ 0x14
  3359  0034                     	ds	1
  3360  0035                     ?_modulation:	
  3361  0035                     ?___ftmul:	
  3362                           ; 2 bytes @ 0x15
  3363                           
  3364  0035                     modulation@x:	
  3365                           ; 3 bytes @ 0x15
  3366                           
  3367  0035                     ___ftmul@f1:	
  3368                           ; 2 bytes @ 0x15
  3369                           
  3370                           
  3371                           ; 3 bytes @ 0x15
  3372  0035                     	ds	1
  3373  0036                     FLASH_WriteWord@i:	
  3374                           
  3375                           ; 1 bytes @ 0x16
  3376  0036                     	ds	1
  3377  0037                     modulation@y:	
  3378                           
  3379                           ; 2 bytes @ 0x17
  3380  0037                     	ds	1
  3381  0038                     ___ftmul@f2:	
  3382                           
  3383                           ; 3 bytes @ 0x18
  3384  0038                     	ds	1
  3385  0039                     ??_modulation:	
  3386                           
  3387                           ; 1 bytes @ 0x19
  3388  0039                     	ds	2
  3389  003B                     ??___ftmul:	
  3390                           
  3391                           ; 1 bytes @ 0x1B
  3392  003B                     	ds	4
  3393  003F                     ___ftmul@exp:	
  3394                           
  3395                           ; 1 bytes @ 0x1F
  3396  003F                     	ds	1
  3397  0040                     ___ftmul@f3_as_product:	
  3398                           
  3399                           ; 3 bytes @ 0x20
  3400  0040                     	ds	3
  3401  0043                     ___ftmul@cntr:	
  3402                           
  3403                           ; 1 bytes @ 0x23
  3404  0043                     	ds	1
  3405  0044                     ___ftmul@sign:	
  3406                           
  3407                           ; 1 bytes @ 0x24
  3408  0044                     	ds	1
  3409  0045                     ?___ftdiv:	
  3410  0045                     ___ftdiv@f2:	
  3411                           ; 3 bytes @ 0x25
  3412                           
  3413                           
  3414                           ; 3 bytes @ 0x25
  3415  0045                     	ds	3
  3416  0048                     ___ftdiv@f1:	
  3417                           
  3418                           ; 3 bytes @ 0x28
  3419  0048                     	ds	3
  3420  004B                     ??___ftdiv:	
  3421                           
  3422                           ; 1 bytes @ 0x2B
  3423  004B                     	ds	4
  3424  004F                     ___ftdiv@cntr:	
  3425                           
  3426                           ; 1 bytes @ 0x2F
  3427  004F                     	ds	1
  3428  0050                     ___ftdiv@f3:	
  3429                           
  3430                           ; 3 bytes @ 0x30
  3431  0050                     	ds	3
  3432  0053                     ___ftdiv@exp:	
  3433                           
  3434                           ; 1 bytes @ 0x33
  3435  0053                     	ds	1
  3436  0054                     ___ftdiv@sign:	
  3437                           
  3438                           ; 1 bytes @ 0x34
  3439  0054                     	ds	1
  3440  0055                     ?_map:	
  3441  0055                     map@x:	
  3442                           ; 3 bytes @ 0x35
  3443                           
  3444                           
  3445                           ; 3 bytes @ 0x35
  3446  0055                     	ds	3
  3447  0058                     map@in_min:	
  3448                           
  3449                           ; 3 bytes @ 0x38
  3450  0058                     	ds	3
  3451  005B                     map@in_max:	
  3452                           
  3453                           ; 3 bytes @ 0x3B
  3454  005B                     	ds	3
  3455  005E                     map@out_min:	
  3456                           
  3457                           ; 3 bytes @ 0x3E
  3458  005E                     	ds	3
  3459  0061                     map@out_max:	
  3460                           
  3461                           ; 3 bytes @ 0x41
  3462  0061                     	ds	3
  3463  0064                     ??_map:	
  3464  0064                     _map$1566:	
  3465                           ; 1 bytes @ 0x44
  3466                           
  3467                           
  3468                           ; 3 bytes @ 0x44
  3469  0064                     	ds	3
  3470  0067                     ?___fttol:	
  3471  0067                     ___fttol@f1:	
  3472                           ; 4 bytes @ 0x47
  3473                           
  3474                           
  3475                           ; 3 bytes @ 0x47
  3476  0067                     	ds	4
  3477  006B                     ??___fttol:	
  3478                           
  3479                           ; 1 bytes @ 0x4B
  3480  006B                     	ds	4
  3481  006F                     ??_set_subdivision:	
  3482                           
  3483                           	psect	maintext
  3484  08DD                     __pmaintext:	
  3485                           ; 1 bytes @ 0x4F
  3486 ;;
  3487 ;;Main: autosize = 0, tempsize = 15, incstack = 0, save=0
  3488 ;;
  3489 ;; *************** function _main *****************
  3490 ;; Defined at:
  3491 ;;		line 107 in file "main.c"
  3492 ;; Parameters:    Size  Location     Type
  3493 ;;		None
  3494 ;; Auto vars:     Size  Location     Type
  3495 ;;  tapCntDiviso    2   27[BANK1 ] int 
  3496 ;;  adjusted_pot    2   29[BANK1 ] int 
  3497 ;;  i               2   33[BANK1 ] int 
  3498 ;;  i               2   31[BANK1 ] int 
  3499 ;;  i               2   25[BANK1 ] int 
  3500 ;;  count           2   35[BANK1 ] int 
  3501 ;; Return value:  Size  Location     Type
  3502 ;;                  1    wreg      void 
  3503 ;; Registers used:
  3504 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3505 ;; Tracked objects:
  3506 ;;		On entry : B1F/0
  3507 ;;		On exit  : 0/0
  3508 ;;		Unchanged: 0/0
  3509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  3510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3511 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3512 ;;      Temps:          0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3513 ;;      Totals:         0       0      27       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3514 ;;Total ram usage:       27 bytes
  3515 ;; Hardware stack levels required when called:    5
  3516 ;; This function calls:
  3517 ;;		_ConfigureOscillator
  3518 ;;		_FLASH_ReadWord
  3519 ;;		_FLASH_WriteWord
  3520 ;;		_InitApp
  3521 ;;		___aldiv
  3522 ;;		___altoft
  3523 ;;		___awdiv
  3524 ;;		___awtoft
  3525 ;;		___ftdiv
  3526 ;;		___fttol
  3527 ;;		_adc_convert
  3528 ;;		_map
  3529 ;;		_modulation
  3530 ;;		_set_leds_bottom
  3531 ;;		_set_leds_top
  3532 ;;		_set_subdivision
  3533 ;;		_wait_ms
  3534 ;; This function is called by:
  3535 ;;		Startup code after reset
  3536 ;; This function uses a non-reentrant model
  3537 ;;
  3538                           
  3539                           
  3540                           ;psect for function _main
  3541  08DD                     _main:	
  3542                           
  3543                           ;main.c: 108: ConfigureOscillator();
  3544                           
  3545                           ;incstack = 0
  3546                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3547  08DD  3187  27FA  3188   	fcall	_ConfigureOscillator
  3548                           
  3549                           ;main.c: 109: InitApp();
  3550  08E0  3190  20F8  3188   	fcall	_InitApp
  3551                           
  3552                           ;main.c: 110: tap[0] = 0;
  3553  08E3  3000               	movlw	0
  3554  08E4  0023               	movlb	3	; select bank3
  3555  08E5  00A3               	movwf	(_tap+3)^(0+384)
  3556  08E6  3000               	movlw	0
  3557  08E7  00A2               	movwf	(_tap+2)^(0+384)
  3558  08E8  3000               	movlw	0
  3559  08E9  00A1               	movwf	(_tap+1)^(0+384)
  3560  08EA  3000               	movlw	0
  3561  08EB  00A0               	movwf	_tap^(0+384)
  3562                           
  3563                           ;main.c: 111: tap[1] = 0;
  3564  08EC  3000               	movlw	0
  3565  08ED  00A7               	movwf	((_tap+3)^(0+384)+4)
  3566  08EE  3000               	movlw	0
  3567  08EF  00A6               	movwf	((_tap+2)^(0+384)+4)
  3568  08F0  3000               	movlw	0
  3569  08F1  00A5               	movwf	((_tap+1)^(0+384)+4)
  3570  08F2  3000               	movlw	0
  3571  08F3  00A4               	movwf	(_tap^(0+384)+4)
  3572                           
  3573                           ;main.c: 112: tap[2] = 0;
  3574  08F4  3000               	movlw	0
  3575  08F5  00AB               	movwf	((_tap+3)^(0+384)+8)
  3576  08F6  3000               	movlw	0
  3577  08F7  00AA               	movwf	((_tap+2)^(0+384)+8)
  3578  08F8  3000               	movlw	0
  3579  08F9  00A9               	movwf	((_tap+1)^(0+384)+8)
  3580  08FA  3000               	movlw	0
  3581  08FB  00A8               	movwf	(_tap^(0+384)+8)
  3582                           
  3583                           ;main.c: 113: tap[3] = 0;
  3584  08FC  3000               	movlw	0
  3585  08FD  00AF               	movwf	((_tap+3)^(0+384)+12)
  3586  08FE  3000               	movlw	0
  3587  08FF  00AE               	movwf	((_tap+2)^(0+384)+12)
  3588  0900  3000               	movlw	0
  3589  0901  00AD               	movwf	((_tap+1)^(0+384)+12)
  3590  0902  3000               	movlw	0
  3591  0903  00AC               	movwf	(_tap^(0+384)+12)
  3592                           
  3593                           ;main.c: 114: tap[4] = 0;
  3594  0904  3000               	movlw	0
  3595  0905  00B3               	movwf	((_tap+3)^(0+384)+16)
  3596  0906  3000               	movlw	0
  3597  0907  00B2               	movwf	((_tap+2)^(0+384)+16)
  3598  0908  3000               	movlw	0
  3599  0909  00B1               	movwf	((_tap+1)^(0+384)+16)
  3600  090A  3000               	movlw	0
  3601  090B  00B0               	movwf	(_tap^(0+384)+16)
  3602                           
  3603                           ;main.c: 115: tap[5] = 0;
  3604  090C  3000               	movlw	0
  3605  090D  00B7               	movwf	((_tap+3)^(0+384)+20)
  3606  090E  3000               	movlw	0
  3607  090F  00B6               	movwf	((_tap+2)^(0+384)+20)
  3608  0910  3000               	movlw	0
  3609  0911  00B5               	movwf	((_tap+1)^(0+384)+20)
  3610  0912  3000               	movlw	0
  3611  0913  00B4               	movwf	(_tap^(0+384)+20)
  3612                           
  3613                           ;main.c: 116: tap[6] = 0;
  3614  0914  3000               	movlw	0
  3615  0915  00BB               	movwf	((_tap+3)^(0+384)+24)
  3616  0916  3000               	movlw	0
  3617  0917  00BA               	movwf	((_tap+2)^(0+384)+24)
  3618  0918  3000               	movlw	0
  3619  0919  00B9               	movwf	((_tap+1)^(0+384)+24)
  3620  091A  3000               	movlw	0
  3621  091B  00B8               	movwf	(_tap^(0+384)+24)
  3622                           
  3623                           ;main.c: 117: tap[7] = 0;
  3624  091C  3000               	movlw	0
  3625  091D  00BF               	movwf	((_tap+3)^(0+384)+28)
  3626  091E  3000               	movlw	0
  3627  091F  00BE               	movwf	((_tap+2)^(0+384)+28)
  3628  0920  3000               	movlw	0
  3629  0921  00BD               	movwf	((_tap+1)^(0+384)+28)
  3630  0922  3000               	movlw	0
  3631  0923  00BC               	movwf	(_tap^(0+384)+28)
  3632                           
  3633                           ;main.c: 118: tap[8] = 0;
  3634  0924  3000               	movlw	0
  3635  0925  00C3               	movwf	((_tap+3)^(0+384)+32)
  3636  0926  3000               	movlw	0
  3637  0927  00C2               	movwf	((_tap+2)^(0+384)+32)
  3638  0928  3000               	movlw	0
  3639  0929  00C1               	movwf	((_tap+1)^(0+384)+32)
  3640  092A  3000               	movlw	0
  3641  092B  00C0               	movwf	(_tap^(0+384)+32)
  3642                           
  3643                           ;main.c: 119: tap[9] = 0;
  3644  092C  3000               	movlw	0
  3645  092D  00C7               	movwf	((_tap+3)^(0+384)+36)
  3646  092E  3000               	movlw	0
  3647  092F  00C6               	movwf	((_tap+2)^(0+384)+36)
  3648  0930  3000               	movlw	0
  3649  0931  00C5               	movwf	((_tap+1)^(0+384)+36)
  3650  0932  3000               	movlw	0
  3651  0933  00C4               	movwf	(_tap^(0+384)+36)
  3652                           
  3653                           ;main.c: 120: tap[10] = 0;
  3654  0934  3000               	movlw	0
  3655  0935  00CB               	movwf	((_tap+3)^(0+384)+40)
  3656  0936  3000               	movlw	0
  3657  0937  00CA               	movwf	((_tap+2)^(0+384)+40)
  3658  0938  3000               	movlw	0
  3659  0939  00C9               	movwf	((_tap+1)^(0+384)+40)
  3660  093A  3000               	movlw	0
  3661  093B  00C8               	movwf	(_tap^(0+384)+40)
  3662                           
  3663                           ;main.c: 123: top_push_state = FLASH_ReadWord(0x1F81);
  3664  093C  3081               	movlw	129
  3665  093D  0020               	movlb	0	; select bank0
  3666  093E  00A0               	movwf	FLASH_ReadWord@flashAddr
  3667  093F  301F               	movlw	31
  3668  0940  00A1               	movwf	FLASH_ReadWord@flashAddr+1
  3669  0941  3190  20B8  3188   	fcall	_FLASH_ReadWord
  3670  0944  0020               	movlb	0	; select bank0
  3671  0945  0821               	movf	?_FLASH_ReadWord+1,w
  3672  0946  00FC               	movwf	_top_push_state+1	;volatile
  3673  0947  0820               	movf	?_FLASH_ReadWord,w
  3674  0948  00FB               	movwf	_top_push_state	;volatile
  3675                           
  3676                           ;main.c: 124: bottom_push_state = FLASH_ReadWord(0x1F82);
  3677  0949  3082               	movlw	130
  3678  094A  00A0               	movwf	FLASH_ReadWord@flashAddr
  3679  094B  301F               	movlw	31
  3680  094C  00A1               	movwf	FLASH_ReadWord@flashAddr+1
  3681  094D  3190  20B8  3188   	fcall	_FLASH_ReadWord
  3682  0950  0020               	movlb	0	; select bank0
  3683  0951  0821               	movf	?_FLASH_ReadWord+1,w
  3684  0952  0021               	movlb	1	; select bank1
  3685  0953  00E8               	movwf	(_bottom_push_state+1)^(0+128)
  3686  0954  0020               	movlb	0	; select bank0
  3687  0955  0820               	movf	?_FLASH_ReadWord,w
  3688  0956  0021               	movlb	1	; select bank1
  3689  0957  00E7               	movwf	_bottom_push_state^(0+128)
  3690                           
  3691                           ;main.c: 127: LATGbits.LATG1 = !bypass_state;
  3692  0958  0851               	movf	_bypass_state^(0+128),w
  3693  0959  0452               	iorwf	(_bypass_state+1)^(0+128),w
  3694  095A  1D03               	btfss	3,2
  3695  095B  295F               	goto	u2790
  3696  095C  0027               	movlb	7	; select bank7
  3697  095D  148D               	bsf	13,1	;volatile
  3698  095E  2961               	goto	l2708
  3699  095F                     u2790:	
  3700  095F  0027               	movlb	7	; select bank7
  3701  0960  108D               	bcf	13,1	;volatile
  3702  0961                     l2708:	
  3703                           
  3704                           ;main.c: 128: LATGbits.LATG2 = bypass_state;
  3705  0961  0021               	movlb	1	; select bank1
  3706  0962  0C51               	rrf	_bypass_state^(0+128),w
  3707  0963  0027               	movlb	7	; select bank7
  3708  0964  1C03               	skipc
  3709  0965  110D               	bcf	13,2	;volatile
  3710  0966  1803               	skipnc
  3711  0967  150D               	bsf	13,2	;volatile
  3712                           
  3713                           ;main.c: 129: LATFbits.LATF6 = bypass_state;
  3714  0968  0021               	movlb	1	; select bank1
  3715  0969  0C51               	rrf	_bypass_state^(0+128),w
  3716  096A  0027               	movlb	7	; select bank7
  3717  096B  1C03               	skipc
  3718  096C  130C               	bcf	12,6	;volatile
  3719  096D  1803               	skipnc
  3720  096E  170C               	bsf	12,6	;volatile
  3721                           
  3722                           ;main.c: 130: set_leds_top(top_push_state, 1);
  3723  096F  087C               	movf	_top_push_state+1,w	;volatile
  3724  0970  0020               	movlb	0	; select bank0
  3725  0971  00A1               	movwf	set_leds_top@x+1
  3726  0972  087B               	movf	_top_push_state,w	;volatile
  3727  0973  00A0               	movwf	set_leds_top@x
  3728  0974  3001               	movlw	1
  3729  0975  00A2               	movwf	set_leds_top@ledState
  3730  0976  3000               	movlw	0
  3731  0977  00A3               	movwf	set_leds_top@ledState+1
  3732  0978  3195  2503  3188   	fcall	_set_leds_top
  3733                           
  3734                           ;main.c: 131: set_leds_bottom(bottom_push_state);
  3735  097B  0021               	movlb	1	; select bank1
  3736  097C  0868               	movf	(_bottom_push_state+1)^(0+128),w
  3737  097D  0020               	movlb	0	; select bank0
  3738  097E  00A1               	movwf	set_leds_bottom@x+1
  3739  097F  0021               	movlb	1	; select bank1
  3740  0980  0867               	movf	_bottom_push_state^(0+128),w
  3741  0981  0020               	movlb	0	; select bank0
  3742  0982  00A0               	movwf	set_leds_bottom@x
  3743  0983  3193  2372  3188   	fcall	_set_leds_bottom
  3744  0986                     l2716:	
  3745                           ;main.c: 133: while (1) {
  3746                           
  3747                           
  3748                           ;main.c: 135: if (PORTBbits.RB0 == 1) {
  3749  0986  0020               	movlb	0	; select bank0
  3750  0987  1C0D               	btfss	13,0	;volatile
  3751  0988  2A13               	goto	l2754
  3752                           
  3753                           ;main.c: 136: LATBbits.LATB5 = 1;
  3754  0989  0022               	movlb	2	; select bank2
  3755  098A  168D               	bsf	13,5	;volatile
  3756                           
  3757                           ;main.c: 137: LATBbits.LATB1 = 1;
  3758  098B  148D               	bsf	13,1	;volatile
  3759                           
  3760                           ;main.c: 138: wait_ms(1);
  3761  098C  3001               	movlw	1
  3762  098D  0020               	movlb	0	; select bank0
  3763  098E  00AC               	movwf	wait_ms@time
  3764  098F  3000               	movlw	0
  3765  0990  00AD               	movwf	wait_ms@time+1
  3766  0991  3191  2158  3188   	fcall	_wait_ms
  3767                           
  3768                           ;main.c: 139: LATBbits.LATB1 = 0;
  3769  0994  0022               	movlb	2	; select bank2
  3770  0995  108D               	bcf	13,1	;volatile
  3771                           
  3772                           ;main.c: 140: int count = 1;
  3773  0996  3001               	movlw	1
  3774  0997  0021               	movlb	1	; select bank1
  3775  0998  00C3               	movwf	main@count^(0+128)
  3776  0999  3000               	movlw	0
  3777  099A  00C4               	movwf	(main@count^(0+128)+1)
  3778                           
  3779                           ;main.c: 141: preset = 0;
  3780  099B  0022               	movlb	2	; select bank2
  3781  099C  01DC               	clrf	_preset^(0+256)
  3782  099D  01DD               	clrf	(_preset+1)^(0+256)
  3783  099E                     l2736:	
  3784                           ;main.c: 142: while (count <= 8) {
  3785                           
  3786  099E  0021               	movlb	1	; select bank1
  3787  099F  0844               	movf	(main@count+1)^(0+128),w
  3788  09A0  3A80               	xorlw	128
  3789  09A1  00AA               	movwf	??_main^(0+128)
  3790  09A2  3080               	movlw	128
  3791  09A3  022A               	subwf	??_main^(0+128),w
  3792  09A4  1D03               	skipz
  3793  09A5  29A8               	goto	u2845
  3794  09A6  3009               	movlw	9
  3795  09A7  0243               	subwf	main@count^(0+128),w
  3796  09A8                     u2845:	
  3797  09A8  1803               	btfsc	3,0
  3798  09A9  29CB               	goto	l197
  3799                           
  3800                           ;main.c: 143: if (PORTBbits.RB2 == 1) {
  3801  09AA  0020               	movlb	0	; select bank0
  3802  09AB  1D0D               	btfss	13,2	;volatile
  3803  09AC  299E               	goto	l2736
  3804                           
  3805                           ;main.c: 144: LATBbits.LATB4 = 1;
  3806  09AD  0022               	movlb	2	; select bank2
  3807  09AE  160D               	bsf	13,4	;volatile
  3808                           
  3809                           ;main.c: 145: if (PORTBbits.RB3 == 1) {
  3810  09AF  0020               	movlb	0	; select bank0
  3811  09B0  1D8D               	btfss	13,3	;volatile
  3812  09B1  29B9               	goto	l196
  3813                           
  3814                           ;main.c: 146: preset = preset + 1;
  3815  09B2  0022               	movlb	2	; select bank2
  3816  09B3  085C               	movf	_preset^(0+256),w
  3817  09B4  3E01               	addlw	1
  3818  09B5  00DC               	movwf	_preset^(0+256)
  3819  09B6  3000               	movlw	0
  3820  09B7  3D5D               	addwfc	(_preset+1)^(0+256),w
  3821  09B8  00DD               	movwf	(_preset+1)^(0+256)
  3822  09B9                     l196:	
  3823                           
  3824                           ;main.c: 147: }
  3825                           ;main.c: 148: count = count + 1;
  3826  09B9  0021               	movlb	1	; select bank1
  3827  09BA  0843               	movf	main@count^(0+128),w
  3828  09BB  3E01               	addlw	1
  3829  09BC  00C3               	movwf	main@count^(0+128)
  3830  09BD  3000               	movlw	0
  3831  09BE  3D44               	addwfc	(main@count+1)^(0+128),w
  3832  09BF  00C4               	movwf	(main@count+1)^(0+128)
  3833                           
  3834                           ;main.c: 149: wait_ms(2);
  3835  09C0  3002               	movlw	2
  3836  09C1  0020               	movlb	0	; select bank0
  3837  09C2  00AC               	movwf	wait_ms@time
  3838  09C3  3000               	movlw	0
  3839  09C4  00AD               	movwf	wait_ms@time+1
  3840  09C5  3191  2158  3188   	fcall	_wait_ms
  3841                           
  3842                           ;main.c: 150: LATBbits.LATB4 = 0;
  3843  09C8  0022               	movlb	2	; select bank2
  3844  09C9  120D               	bcf	13,4	;volatile
  3845  09CA  299E               	goto	l2736
  3846  09CB                     l197:	
  3847                           
  3848                           ;main.c: 151: }
  3849                           ;main.c: 152: }
  3850                           ;main.c: 153: LATBbits.LATB5 = 0;
  3851  09CB  0022               	movlb	2	; select bank2
  3852  09CC  128D               	bcf	13,5	;volatile
  3853                           
  3854                           ;main.c: 154: LATFbits.LATF6 = 0;
  3855  09CD  0027               	movlb	7	; select bank7
  3856  09CE  130C               	bcf	12,6	;volatile
  3857                           
  3858                           ;main.c: 155: wait_ms(2);
  3859  09CF  3002               	movlw	2
  3860  09D0  0020               	movlb	0	; select bank0
  3861  09D1  00AC               	movwf	wait_ms@time
  3862  09D2  3000               	movlw	0
  3863  09D3  00AD               	movwf	wait_ms@time+1
  3864  09D4  3191  2158  3188   	fcall	_wait_ms
  3865                           
  3866                           ;main.c: 156: for (count = 0; count < preset; count++) {
  3867  09D7  0021               	movlb	1	; select bank1
  3868  09D8  01C3               	clrf	main@count^(0+128)
  3869  09D9  01C4               	clrf	(main@count+1)^(0+128)
  3870  09DA                     l2748:	
  3871  09DA  0844               	movf	(main@count+1)^(0+128),w
  3872  09DB  3A80               	xorlw	128
  3873  09DC  00AA               	movwf	??_main^(0+128)
  3874  09DD  0022               	movlb	2	; select bank2
  3875  09DE  085D               	movf	(_preset+1)^(0+256),w
  3876  09DF  3A80               	xorlw	128
  3877  09E0  0021               	movlb	1	; select bank1
  3878  09E1  022A               	subwf	??_main^(0+128),w
  3879  09E2  1D03               	skipz
  3880  09E3  29E8               	goto	u2855
  3881  09E4  0022               	movlb	2	; select bank2
  3882  09E5  085C               	movf	_preset^(0+256),w
  3883  09E6  0021               	movlb	1	; select bank1
  3884  09E7  0243               	subwf	main@count^(0+128),w
  3885  09E8                     u2855:	
  3886  09E8  1803               	btfsc	3,0
  3887  09E9  2A04               	goto	l2750
  3888                           
  3889                           ;main.c: 157: LATFbits.LATF6 = 1;
  3890  09EA  0027               	movlb	7	; select bank7
  3891  09EB  170C               	bsf	12,6	;volatile
  3892                           
  3893                           ;main.c: 158: wait_ms(40);
  3894  09EC  3028               	movlw	40
  3895  09ED  0020               	movlb	0	; select bank0
  3896  09EE  00AC               	movwf	wait_ms@time
  3897  09EF  3000               	movlw	0
  3898  09F0  00AD               	movwf	wait_ms@time+1
  3899  09F1  3191  2158  3188   	fcall	_wait_ms
  3900                           
  3901                           ;main.c: 159: LATFbits.LATF6 = 0;
  3902  09F4  0027               	movlb	7	; select bank7
  3903  09F5  130C               	bcf	12,6	;volatile
  3904                           
  3905                           ;main.c: 160: wait_ms(40);
  3906  09F6  3028               	movlw	40
  3907  09F7  0020               	movlb	0	; select bank0
  3908  09F8  00AC               	movwf	wait_ms@time
  3909  09F9  3000               	movlw	0
  3910  09FA  00AD               	movwf	wait_ms@time+1
  3911  09FB  3191  2158  3188   	fcall	_wait_ms
  3912  09FE  3001               	movlw	1
  3913  09FF  0021               	movlb	1	; select bank1
  3914  0A00  07C3               	addwf	main@count^(0+128),f
  3915  0A01  3000               	movlw	0
  3916  0A02  3DC4               	addwfc	(main@count+1)^(0+128),f
  3917  0A03  29DA               	goto	l2748
  3918  0A04                     l2750:	
  3919                           
  3920                           ;main.c: 161: }
  3921                           ;main.c: 162: LATFbits.LATF6 = bypass_state;
  3922  0A04  0021               	movlb	1	; select bank1
  3923  0A05  0C51               	rrf	_bypass_state^(0+128),w
  3924  0A06  0027               	movlb	7	; select bank7
  3925  0A07  1C03               	skipc
  3926  0A08  130C               	bcf	12,6	;volatile
  3927  0A09  1803               	skipnc
  3928  0A0A  170C               	bsf	12,6	;volatile
  3929                           
  3930                           ;main.c: 163: wait_ms(100);
  3931  0A0B  3064               	movlw	100
  3932  0A0C  0020               	movlb	0	; select bank0
  3933  0A0D  00AC               	movwf	wait_ms@time
  3934  0A0E  3000               	movlw	0
  3935  0A0F  00AD               	movwf	wait_ms@time+1
  3936  0A10  3191  2158  3188   	fcall	_wait_ms
  3937  0A13                     l2754:	
  3938                           
  3939                           ;main.c: 164: }
  3940                           ;main.c: 172: if (PORTDbits.RD6 == 0) {
  3941  0A13  0020               	movlb	0	; select bank0
  3942  0A14  1B0F               	btfsc	15,6	;volatile
  3943  0A15  2A58               	goto	l2768
  3944                           
  3945                           ;main.c: 173: bottom_push_state = bottom_push_state + 1;
  3946  0A16  0021               	movlb	1	; select bank1
  3947  0A17  0867               	movf	_bottom_push_state^(0+128),w
  3948  0A18  3E01               	addlw	1
  3949  0A19  00E7               	movwf	_bottom_push_state^(0+128)
  3950  0A1A  3000               	movlw	0
  3951  0A1B  3D68               	addwfc	(_bottom_push_state+1)^(0+128),w
  3952  0A1C  00E8               	movwf	(_bottom_push_state+1)^(0+128)
  3953                           
  3954                           ;main.c: 174: if (bottom_push_state >= 7) {
  3955  0A1D  0868               	movf	(_bottom_push_state+1)^(0+128),w
  3956  0A1E  3A80               	xorlw	128
  3957  0A1F  00AA               	movwf	??_main^(0+128)
  3958  0A20  3080               	movlw	128
  3959  0A21  022A               	subwf	??_main^(0+128),w
  3960  0A22  1D03               	skipz
  3961  0A23  2A26               	goto	u2875
  3962  0A24  3007               	movlw	7
  3963  0A25  0267               	subwf	_bottom_push_state^(0+128),w
  3964  0A26                     u2875:	
  3965  0A26  1C03               	skipc
  3966  0A27  2A2D               	goto	l2762
  3967                           
  3968                           ;main.c: 175: bottom_push_state = 1;
  3969  0A28  3001               	movlw	1
  3970  0A29  0021               	movlb	1	; select bank1
  3971  0A2A  00E7               	movwf	_bottom_push_state^(0+128)
  3972  0A2B  3000               	movlw	0
  3973  0A2C  00E8               	movwf	(_bottom_push_state^(0+128)+1)
  3974  0A2D                     l2762:	
  3975                           
  3976                           ;main.c: 176: }
  3977                           ;main.c: 177: set_leds_bottom(bottom_push_state);
  3978  0A2D  0021               	movlb	1	; select bank1
  3979  0A2E  0868               	movf	(_bottom_push_state+1)^(0+128),w
  3980  0A2F  0020               	movlb	0	; select bank0
  3981  0A30  00A1               	movwf	set_leds_bottom@x+1
  3982  0A31  0021               	movlb	1	; select bank1
  3983  0A32  0867               	movf	_bottom_push_state^(0+128),w
  3984  0A33  0020               	movlb	0	; select bank0
  3985  0A34  00A0               	movwf	set_leds_bottom@x
  3986  0A35  3193  2372  3188   	fcall	_set_leds_bottom
  3987                           
  3988                           ;main.c: 178: FLASH_WriteWord(0x1F82, myBuf, bottom_push_state);
  3989  0A38  3082               	movlw	130
  3990  0A39  0020               	movlb	0	; select bank0
  3991  0A3A  00AD               	movwf	FLASH_WriteWord@flashAddr
  3992  0A3B  301F               	movlw	31
  3993  0A3C  00AE               	movwf	FLASH_WriteWord@flashAddr+1
  3994  0A3D  3020               	movlw	(low (_myBuf| (0+512)))& (0+255)
  3995  0A3E  0021               	movlb	1	; select bank1
  3996  0A3F  00AA               	movwf	??_main^(0+128)
  3997  0A40  082A               	movf	??_main^(0+128),w
  3998  0A41  0020               	movlb	0	; select bank0
  3999  0A42  00AF               	movwf	FLASH_WriteWord@ramBuf
  4000  0A43  0021               	movlb	1	; select bank1
  4001  0A44  0868               	movf	(_bottom_push_state+1)^(0+128),w
  4002  0A45  0020               	movlb	0	; select bank0
  4003  0A46  00B1               	movwf	FLASH_WriteWord@word+1
  4004  0A47  0021               	movlb	1	; select bank1
  4005  0A48  0867               	movf	_bottom_push_state^(0+128),w
  4006  0A49  0020               	movlb	0	; select bank0
  4007  0A4A  00B0               	movwf	FLASH_WriteWord@word
  4008  0A4B  3193  232D  3188   	fcall	_FLASH_WriteWord
  4009  0A4E                     l203:	
  4010                           ;main.c: 179: while (PORTDbits.RD6 == 0) {
  4011                           
  4012  0A4E  0020               	movlb	0	; select bank0
  4013  0A4F  1F0F               	btfss	15,6	;volatile
  4014  0A50  2A4E               	goto	l203
  4015                           
  4016                           ;main.c: 180: }
  4017                           ;main.c: 181: wait_ms(20);
  4018  0A51  3014               	movlw	20
  4019  0A52  00AC               	movwf	wait_ms@time
  4020  0A53  3000               	movlw	0
  4021  0A54  00AD               	movwf	wait_ms@time+1
  4022  0A55  3191  2158  3188   	fcall	_wait_ms
  4023  0A58                     l2768:	
  4024                           
  4025                           ;main.c: 182: }
  4026                           ;main.c: 193: if (PORTDbits.RD5 == 0) {
  4027  0A58  0020               	movlb	0	; select bank0
  4028  0A59  1A8F               	btfsc	15,5	;volatile
  4029  0A5A  2A9E               	goto	l2784
  4030                           
  4031                           ;main.c: 194: top_push_state = top_push_state + 1;
  4032  0A5B  087B               	movf	_top_push_state,w	;volatile
  4033  0A5C  3E01               	addlw	1
  4034  0A5D  00FB               	movwf	_top_push_state	;volatile
  4035  0A5E  3000               	movlw	0
  4036  0A5F  3D7C               	addwfc	_top_push_state+1,w	;volatile
  4037  0A60  00FC               	movwf	_top_push_state+1	;volatile
  4038                           
  4039                           ;main.c: 195: if (top_push_state >= 7) {
  4040  0A61  087C               	movf	_top_push_state+1,w	;volatile
  4041  0A62  3A80               	xorlw	128
  4042  0A63  0021               	movlb	1	; select bank1
  4043  0A64  00AA               	movwf	??_main^(0+128)
  4044  0A65  3080               	movlw	128
  4045  0A66  022A               	subwf	??_main^(0+128),w
  4046  0A67  1D03               	skipz
  4047  0A68  2A6B               	goto	u2905
  4048  0A69  3007               	movlw	7
  4049  0A6A  027B               	subwf	_top_push_state,w	;volatile
  4050  0A6B                     u2905:	
  4051  0A6B  1C03               	skipc
  4052  0A6C  2A71               	goto	l2776
  4053                           
  4054                           ;main.c: 196: top_push_state = 1;
  4055  0A6D  3001               	movlw	1
  4056  0A6E  00FB               	movwf	_top_push_state	;volatile
  4057  0A6F  3000               	movlw	0
  4058  0A70  00FC               	movwf	_top_push_state+1	;volatile
  4059  0A71                     l2776:	
  4060                           
  4061                           ;main.c: 197: }
  4062                           ;main.c: 198: set_leds_top(top_push_state, 1);
  4063  0A71  087C               	movf	_top_push_state+1,w	;volatile
  4064  0A72  0020               	movlb	0	; select bank0
  4065  0A73  00A1               	movwf	set_leds_top@x+1
  4066  0A74  087B               	movf	_top_push_state,w	;volatile
  4067  0A75  00A0               	movwf	set_leds_top@x
  4068  0A76  3001               	movlw	1
  4069  0A77  00A2               	movwf	set_leds_top@ledState
  4070  0A78  3000               	movlw	0
  4071  0A79  00A3               	movwf	set_leds_top@ledState+1
  4072  0A7A  3195  2503  3188   	fcall	_set_leds_top
  4073                           
  4074                           ;main.c: 199: delay_time_changed = 1;
  4075  0A7D  3001               	movlw	1
  4076  0A7E  0022               	movlb	2	; select bank2
  4077  0A7F  00E0               	movwf	_delay_time_changed^(0+256)
  4078  0A80  3000               	movlw	0
  4079  0A81  00E1               	movwf	(_delay_time_changed^(0+256)+1)
  4080                           
  4081                           ;main.c: 200: FLASH_WriteWord(0x1F81, myBuf, top_push_state);
  4082  0A82  3081               	movlw	129
  4083  0A83  0020               	movlb	0	; select bank0
  4084  0A84  00AD               	movwf	FLASH_WriteWord@flashAddr
  4085  0A85  301F               	movlw	31
  4086  0A86  00AE               	movwf	FLASH_WriteWord@flashAddr+1
  4087  0A87  3020               	movlw	(low (_myBuf| (0+512)))& (0+255)
  4088  0A88  0021               	movlb	1	; select bank1
  4089  0A89  00AA               	movwf	??_main^(0+128)
  4090  0A8A  082A               	movf	??_main^(0+128),w
  4091  0A8B  0020               	movlb	0	; select bank0
  4092  0A8C  00AF               	movwf	FLASH_WriteWord@ramBuf
  4093  0A8D  087C               	movf	_top_push_state+1,w	;volatile
  4094  0A8E  00B1               	movwf	FLASH_WriteWord@word+1
  4095  0A8F  087B               	movf	_top_push_state,w	;volatile
  4096  0A90  00B0               	movwf	FLASH_WriteWord@word
  4097  0A91  3193  232D  3188   	fcall	_FLASH_WriteWord
  4098  0A94                     l208:	
  4099                           ;main.c: 201: while (PORTDbits.RD5 == 0) {
  4100                           
  4101  0A94  0020               	movlb	0	; select bank0
  4102  0A95  1E8F               	btfss	15,5	;volatile
  4103  0A96  2A94               	goto	l208
  4104                           
  4105                           ;main.c: 202: }
  4106                           ;main.c: 203: wait_ms(20);
  4107  0A97  3014               	movlw	20
  4108  0A98  00AC               	movwf	wait_ms@time
  4109  0A99  3000               	movlw	0
  4110  0A9A  00AD               	movwf	wait_ms@time+1
  4111  0A9B  3191  2158  3188   	fcall	_wait_ms
  4112  0A9E                     l2784:	
  4113                           
  4114                           ;main.c: 204: }
  4115                           ;main.c: 214: if (PORTEbits.RE1 == 0) {
  4116  0A9E  0020               	movlb	0	; select bank0
  4117  0A9F  1890               	btfsc	16,1	;volatile
  4118  0AA0  2ADC               	goto	l2794
  4119                           
  4120                           ;main.c: 215: debounce_bypass++;
  4121  0AA1  3001               	movlw	1
  4122  0AA2  0022               	movlb	2	; select bank2
  4123  0AA3  07D2               	addwf	_debounce_bypass^(0+256),f
  4124  0AA4  3000               	movlw	0
  4125  0AA5  3DD3               	addwfc	(_debounce_bypass+1)^(0+256),f
  4126                           
  4127                           ;main.c: 216: if (debounce_bypass > 25) {
  4128  0AA6  0853               	movf	(_debounce_bypass+1)^(0+256),w
  4129  0AA7  3A80               	xorlw	128
  4130  0AA8  0021               	movlb	1	; select bank1
  4131  0AA9  00AA               	movwf	??_main^(0+128)
  4132  0AAA  3080               	movlw	128
  4133  0AAB  022A               	subwf	??_main^(0+128),w
  4134  0AAC  1D03               	skipz
  4135  0AAD  2AB1               	goto	u2935
  4136  0AAE  301A               	movlw	26
  4137  0AAF  0022               	movlb	2	; select bank2
  4138  0AB0  0252               	subwf	_debounce_bypass^(0+256),w
  4139  0AB1                     u2935:	
  4140  0AB1  1C03               	skipc
  4141  0AB2  2ADF               	goto	l2796
  4142                           
  4143                           ;main.c: 217: bypass_state = !bypass_state;
  4144  0AB3  0021               	movlb	1	; select bank1
  4145  0AB4  0851               	movf	_bypass_state^(0+128),w
  4146  0AB5  0452               	iorwf	(_bypass_state+1)^(0+128),w
  4147  0AB6  1D03               	btfss	3,2
  4148  0AB7  2ABA               	goto	u2940
  4149  0AB8  3001               	movlw	1
  4150  0AB9  2ABB               	goto	u2950
  4151  0ABA                     u2940:	
  4152  0ABA  3000               	movlw	0
  4153  0ABB                     u2950:	
  4154  0ABB  00AA               	movwf	??_main^(0+128)
  4155  0ABC  01AB               	clrf	(??_main^(0+128)+1)
  4156  0ABD  082A               	movf	??_main^(0+128),w
  4157  0ABE  00D1               	movwf	_bypass_state^(0+128)
  4158  0ABF  082B               	movf	(??_main+1)^(0+128),w
  4159  0AC0  00D2               	movwf	(_bypass_state+1)^(0+128)
  4160                           
  4161                           ;main.c: 218: LATGbits.LATG1 = !bypass_state;
  4162  0AC1  0851               	movf	_bypass_state^(0+128),w
  4163  0AC2  0452               	iorwf	(_bypass_state+1)^(0+128),w
  4164  0AC3  1D03               	btfss	3,2
  4165  0AC4  2AC8               	goto	u2960
  4166  0AC5  0027               	movlb	7	; select bank7
  4167  0AC6  148D               	bsf	13,1	;volatile
  4168  0AC7  2ACA               	goto	l2790
  4169  0AC8                     u2960:	
  4170  0AC8  0027               	movlb	7	; select bank7
  4171  0AC9  108D               	bcf	13,1	;volatile
  4172  0ACA                     l2790:	
  4173                           
  4174                           ;main.c: 219: LATGbits.LATG2 = bypass_state;
  4175  0ACA  0021               	movlb	1	; select bank1
  4176  0ACB  0C51               	rrf	_bypass_state^(0+128),w
  4177  0ACC  0027               	movlb	7	; select bank7
  4178  0ACD  1C03               	skipc
  4179  0ACE  110D               	bcf	13,2	;volatile
  4180  0ACF  1803               	skipnc
  4181  0AD0  150D               	bsf	13,2	;volatile
  4182                           
  4183                           ;main.c: 220: LATFbits.LATF6 = bypass_state;
  4184  0AD1  0021               	movlb	1	; select bank1
  4185  0AD2  0C51               	rrf	_bypass_state^(0+128),w
  4186  0AD3  0027               	movlb	7	; select bank7
  4187  0AD4  1C03               	skipc
  4188  0AD5  130C               	bcf	12,6	;volatile
  4189  0AD6  1803               	skipnc
  4190  0AD7  170C               	bsf	12,6	;volatile
  4191  0AD8                     l213:	
  4192                           ;main.c: 221: while (PORTEbits.RE1 == 0) {
  4193                           
  4194  0AD8  0020               	movlb	0	; select bank0
  4195  0AD9  1890               	btfsc	16,1	;volatile
  4196  0ADA  2ADF               	goto	l2796
  4197  0ADB  2AD8               	goto	l213
  4198  0ADC                     l2794:	
  4199                           ;main.c: 222: }
  4200                           ;main.c: 223: }
  4201                           ;main.c: 224: } else {
  4202                           
  4203                           
  4204                           ;main.c: 225: debounce_bypass = 0;
  4205  0ADC  0022               	movlb	2	; select bank2
  4206  0ADD  01D2               	clrf	_debounce_bypass^(0+256)
  4207  0ADE  01D3               	clrf	(_debounce_bypass+1)^(0+256)
  4208  0ADF                     l2796:	
  4209                           
  4210                           ;main.c: 226: }
  4211                           ;main.c: 244: if (PORTEbits.RE0 == 0) {
  4212  0ADF  0020               	movlb	0	; select bank0
  4213  0AE0  1810               	btfsc	16,0	;volatile
  4214  0AE1  2C7B               	goto	l2848
  4215                           
  4216                           ;main.c: 245: debounce_count++;
  4217  0AE2  3001               	movlw	1
  4218  0AE3  0022               	movlb	2	; select bank2
  4219  0AE4  07D4               	addwf	_debounce_count^(0+256),f
  4220  0AE5  3000               	movlw	0
  4221  0AE6  3DD5               	addwfc	(_debounce_count+1)^(0+256),f
  4222                           
  4223                           ;main.c: 246: if (debounce_count > 25) {
  4224  0AE7  0855               	movf	(_debounce_count+1)^(0+256),w
  4225  0AE8  3A80               	xorlw	128
  4226  0AE9  0021               	movlb	1	; select bank1
  4227  0AEA  00AA               	movwf	??_main^(0+128)
  4228  0AEB  3080               	movlw	128
  4229  0AEC  022A               	subwf	??_main^(0+128),w
  4230  0AED  1D03               	skipz
  4231  0AEE  2AF2               	goto	u3005
  4232  0AEF  301A               	movlw	26
  4233  0AF0  0022               	movlb	2	; select bank2
  4234  0AF1  0254               	subwf	_debounce_count^(0+256),w
  4235  0AF2                     u3005:	
  4236  0AF2  1C03               	skipc
  4237  0AF3  2C7E               	goto	l2850
  4238                           
  4239                           ;main.c: 247: if (tap_timer >= 1563) {
  4240  0AF4  0021               	movlb	1	; select bank1
  4241  0AF5  1BCC               	btfsc	(_tap_timer+3)^(0+128),7	;volatile
  4242  0AF6  2B47               	goto	l2814
  4243  0AF7  084C               	movf	(_tap_timer+3)^(0+128),w	;volatile
  4244  0AF8  1D03               	btfss	3,2
  4245  0AF9  2B03               	goto	l2802
  4246  0AFA  084B               	movf	(_tap_timer+2)^(0+128),w	;volatile
  4247  0AFB  1D03               	btfss	3,2
  4248  0AFC  2B03               	goto	l2802
  4249  0AFD  301B               	movlw	27
  4250  0AFE  0249               	subwf	_tap_timer^(0+128),w	;volatile
  4251  0AFF  3006               	movlw	6
  4252  0B00  3B4A               	subwfb	(_tap_timer+1)^(0+128),w	;volatile
  4253  0B01  1C03               	btfss	3,0
  4254  0B02  2B47               	goto	l2814
  4255  0B03                     l2802:	
  4256                           
  4257                           ;main.c: 248: tap_timer = 0;
  4258  0B03  3000               	movlw	0
  4259  0B04  00CC               	movwf	(_tap_timer+3)^(0+128)	;volatile
  4260  0B05  3000               	movlw	0
  4261  0B06  00CB               	movwf	(_tap_timer+2)^(0+128)	;volatile
  4262  0B07  3000               	movlw	0
  4263  0B08  00CA               	movwf	(_tap_timer+1)^(0+128)	;volatile
  4264  0B09  3000               	movlw	0
  4265  0B0A  00C9               	movwf	_tap_timer^(0+128)	;volatile
  4266                           
  4267                           ;main.c: 249: tap_iteration = 1;
  4268  0B0B  3001               	movlw	1
  4269  0B0C  00ED               	movwf	_tap_iteration^(0+128)
  4270  0B0D  3000               	movlw	0
  4271  0B0E  00EE               	movwf	(_tap_iteration^(0+128)+1)
  4272                           
  4273                           ;main.c: 250: tap_total = 0;
  4274  0B0F  3000               	movlw	0
  4275  0B10  0022               	movlb	2	; select bank2
  4276  0B11  00CB               	movwf	(_tap_total+3)^(0+256)
  4277  0B12  3000               	movlw	0
  4278  0B13  00CA               	movwf	(_tap_total+2)^(0+256)
  4279  0B14  3000               	movlw	0
  4280  0B15  00C9               	movwf	(_tap_total+1)^(0+256)
  4281  0B16  3000               	movlw	0
  4282  0B17  00C8               	movwf	_tap_total^(0+256)
  4283                           
  4284                           ;main.c: 251: delay_time_changed = 0;
  4285  0B18  01E0               	clrf	_delay_time_changed^(0+256)
  4286  0B19  01E1               	clrf	(_delay_time_changed+1)^(0+256)
  4287                           
  4288                           ;main.c: 254: for (iCnt = 1; iCnt <= num_taps; iCnt++) {
  4289  0B1A  3001               	movlw	1
  4290  0B1B  0021               	movlb	1	; select bank1
  4291  0B1C  00D3               	movwf	_iCnt^(0+128)
  4292  0B1D  3000               	movlw	0
  4293  0B1E  00D4               	movwf	(_iCnt^(0+128)+1)
  4294  0B1F                     l2812:	
  4295  0B1F  086C               	movf	(_num_taps+1)^(0+128),w
  4296  0B20  3A80               	xorlw	128
  4297  0B21  00AA               	movwf	??_main^(0+128)
  4298  0B22  0854               	movf	(_iCnt+1)^(0+128),w
  4299  0B23  3A80               	xorlw	128
  4300  0B24  022A               	subwf	??_main^(0+128),w
  4301  0B25  1D03               	skipz
  4302  0B26  2B29               	goto	u3035
  4303  0B27  0853               	movf	_iCnt^(0+128),w
  4304  0B28  026B               	subwf	_num_taps^(0+128),w
  4305  0B29                     u3035:	
  4306  0B29  1C03               	btfss	3,0
  4307  0B2A  2B43               	goto	l223
  4308                           
  4309                           ;main.c: 255: tap_history[iCnt] = 0;
  4310  0B2B  0021               	movlb	1	; select bank1
  4311  0B2C  0853               	movf	_iCnt^(0+128),w
  4312  0B2D  00AA               	movwf	??_main^(0+128)
  4313  0B2E  3001               	movlw	1
  4314  0B2F                     u3025:	
  4315  0B2F  35AA               	lslf	??_main^(0+128),f
  4316  0B30  3EFF               	addlw	-1
  4317  0B31  1D03               	skipz
  4318  0B32  2B2F               	goto	u3025
  4319  0B33  352A               	lslf	??_main^(0+128),w
  4320  0B34  3E20               	addlw	(low (_tap_history| (0+256)))& (0+255)
  4321  0B35  0086               	movwf	6
  4322  0B36  3001               	movlw	1	; select bank2/3
  4323  0B37  0087               	movwf	7
  4324  0B38  3000               	movlw	0
  4325  0B39  3FC0               	movwi [0]fsr1
  4326  0B3A  3000               	movlw	0
  4327  0B3B  3FC1               	movwi [1]fsr1
  4328  0B3C  3FC2               	movwi [2]fsr1
  4329  0B3D  3FC3               	movwi [3]fsr1
  4330  0B3E  3001               	movlw	1
  4331  0B3F  07D3               	addwf	_iCnt^(0+128),f
  4332  0B40  3000               	movlw	0
  4333  0B41  3DD4               	addwfc	(_iCnt+1)^(0+128),f
  4334  0B42  2B1F               	goto	l2812
  4335  0B43                     l223:	
  4336                           ;main.c: 256: }
  4337                           ;main.c: 257: while (PORTEbits.RE0 == 0) {
  4338                           
  4339  0B43  0020               	movlb	0	; select bank0
  4340  0B44  1810               	btfsc	16,0	;volatile
  4341  0B45  2C7E               	goto	l2850
  4342  0B46  2B43               	goto	l223
  4343  0B47                     l2814:	
  4344                           ;main.c: 258: }
  4345                           ;main.c: 259: } else if (tap_timer < 1563) {
  4346                           
  4347  0B47  0021               	movlb	1	; select bank1
  4348  0B48  1BCC               	btfsc	(_tap_timer+3)^(0+128),7	;volatile
  4349  0B49  2B56               	goto	l2816
  4350  0B4A  084C               	movf	(_tap_timer+3)^(0+128),w	;volatile
  4351  0B4B  1D03               	btfss	3,2
  4352  0B4C  2C7E               	goto	l2850
  4353  0B4D  084B               	movf	(_tap_timer+2)^(0+128),w	;volatile
  4354  0B4E  1D03               	btfss	3,2
  4355  0B4F  2C7E               	goto	l2850
  4356  0B50  301B               	movlw	27
  4357  0B51  0249               	subwf	_tap_timer^(0+128),w	;volatile
  4358  0B52  3006               	movlw	6
  4359  0B53  3B4A               	subwfb	(_tap_timer+1)^(0+128),w	;volatile
  4360  0B54  1803               	btfsc	3,0
  4361  0B55  2C7E               	goto	l2850
  4362  0B56                     l2816:	
  4363                           
  4364                           ;main.c: 260: if (tap_iteration <= 4) {
  4365  0B56  086E               	movf	(_tap_iteration+1)^(0+128),w
  4366  0B57  3A80               	xorlw	128
  4367  0B58  00AA               	movwf	??_main^(0+128)
  4368  0B59  3080               	movlw	128
  4369  0B5A  022A               	subwf	??_main^(0+128),w
  4370  0B5B  1D03               	skipz
  4371  0B5C  2B5F               	goto	u3065
  4372  0B5D  3005               	movlw	5
  4373  0B5E  026D               	subwf	_tap_iteration^(0+128),w
  4374  0B5F                     u3065:	
  4375  0B5F  1803               	skipnc
  4376  0B60  2C77               	goto	l235
  4377                           
  4378                           ;main.c: 261: if (tap_timer >= 1172) {
  4379  0B61  0021               	movlb	1	; select bank1
  4380  0B62  1BCC               	btfsc	(_tap_timer+3)^(0+128),7	;volatile
  4381  0B63  2B78               	goto	l229
  4382  0B64  084C               	movf	(_tap_timer+3)^(0+128),w	;volatile
  4383  0B65  1D03               	btfss	3,2
  4384  0B66  2B70               	goto	l2820
  4385  0B67  084B               	movf	(_tap_timer+2)^(0+128),w	;volatile
  4386  0B68  1D03               	btfss	3,2
  4387  0B69  2B70               	goto	l2820
  4388  0B6A  3094               	movlw	148
  4389  0B6B  0249               	subwf	_tap_timer^(0+128),w	;volatile
  4390  0B6C  3004               	movlw	4
  4391  0B6D  3B4A               	subwfb	(_tap_timer+1)^(0+128),w	;volatile
  4392  0B6E  1C03               	btfss	3,0
  4393  0B6F  2B78               	goto	l229
  4394  0B70                     l2820:	
  4395                           
  4396                           ;main.c: 262: tap_timer = 1172;
  4397  0B70  3000               	movlw	0
  4398  0B71  00CC               	movwf	(_tap_timer+3)^(0+128)	;volatile
  4399  0B72  3000               	movlw	0
  4400  0B73  00CB               	movwf	(_tap_timer+2)^(0+128)	;volatile
  4401  0B74  3004               	movlw	4
  4402  0B75  00CA               	movwf	(_tap_timer+1)^(0+128)	;volatile
  4403  0B76  3094               	movlw	148
  4404  0B77  00C9               	movwf	_tap_timer^(0+128)	;volatile
  4405  0B78                     l229:	
  4406                           
  4407                           ;main.c: 263: }
  4408                           ;main.c: 264: int tapCntDivisor = num_taps;
  4409  0B78  086C               	movf	(_num_taps+1)^(0+128),w
  4410  0B79  00BC               	movwf	(main@tapCntDivisor+1)^(0+128)
  4411  0B7A  086B               	movf	_num_taps^(0+128),w
  4412  0B7B  00BB               	movwf	main@tapCntDivisor^(0+128)
  4413                           
  4414                           ;main.c: 265: if (tap_iteration <= num_taps) {
  4415  0B7C  086C               	movf	(_num_taps+1)^(0+128),w
  4416  0B7D  3A80               	xorlw	128
  4417  0B7E  00AA               	movwf	??_main^(0+128)
  4418  0B7F  086E               	movf	(_tap_iteration+1)^(0+128),w
  4419  0B80  3A80               	xorlw	128
  4420  0B81  022A               	subwf	??_main^(0+128),w
  4421  0B82  1D03               	skipz
  4422  0B83  2B86               	goto	u3085
  4423  0B84  086D               	movf	_tap_iteration^(0+128),w
  4424  0B85  026B               	subwf	_num_taps^(0+128),w
  4425  0B86                     u3085:	
  4426  0B86  1C03               	skipc
  4427  0B87  2BB2               	goto	l2828
  4428                           
  4429                           ;main.c: 266: tap_total += tap_timer;
  4430  0B88  0021               	movlb	1	; select bank1
  4431  0B89  0849               	movf	_tap_timer^(0+128),w	;volatile
  4432  0B8A  0022               	movlb	2	; select bank2
  4433  0B8B  07C8               	addwf	_tap_total^(0+256),f
  4434  0B8C  0021               	movlb	1	; select bank1
  4435  0B8D  084A               	movf	(_tap_timer+1)^(0+128),w	;volatile
  4436  0B8E  0022               	movlb	2	; select bank2
  4437  0B8F  3DC9               	addwfc	(_tap_total+1)^(0+256),f
  4438  0B90  0021               	movlb	1	; select bank1
  4439  0B91  084B               	movf	(_tap_timer+2)^(0+128),w	;volatile
  4440  0B92  0022               	movlb	2	; select bank2
  4441  0B93  3DCA               	addwfc	(_tap_total+2)^(0+256),f
  4442  0B94  0021               	movlb	1	; select bank1
  4443  0B95  084C               	movf	(_tap_timer+3)^(0+128),w	;volatile
  4444  0B96  0022               	movlb	2	; select bank2
  4445  0B97  3DCB               	addwfc	(_tap_total+3)^(0+256),f
  4446                           
  4447                           ;main.c: 267: tap_history[tap_iteration] = tap_timer;
  4448  0B98  0021               	movlb	1	; select bank1
  4449  0B99  086D               	movf	_tap_iteration^(0+128),w
  4450  0B9A  00AA               	movwf	??_main^(0+128)
  4451  0B9B  3001               	movlw	1
  4452  0B9C                     u3095:	
  4453  0B9C  35AA               	lslf	??_main^(0+128),f
  4454  0B9D  3EFF               	addlw	-1
  4455  0B9E  1D03               	skipz
  4456  0B9F  2B9C               	goto	u3095
  4457  0BA0  352A               	lslf	??_main^(0+128),w
  4458  0BA1  3E20               	addlw	(low (_tap_history| (0+256)))& (0+255)
  4459  0BA2  0086               	movwf	6
  4460  0BA3  3001               	movlw	1	; select bank2/3
  4461  0BA4  0087               	movwf	7
  4462  0BA5  0849               	movf	_tap_timer^(0+128),w	;volatile
  4463  0BA6  3FC0               	movwi [0]fsr1
  4464  0BA7  084A               	movf	(_tap_timer+1)^(0+128),w	;volatile
  4465  0BA8  3FC1               	movwi [1]fsr1
  4466  0BA9  084B               	movf	(_tap_timer+2)^(0+128),w	;volatile
  4467  0BAA  3FC2               	movwi [2]fsr1
  4468  0BAB  084C               	movf	(_tap_timer+3)^(0+128),w	;volatile
  4469  0BAC  3FC3               	movwi [3]fsr1
  4470                           
  4471                           ;main.c: 268: tapCntDivisor = tap_iteration;
  4472  0BAD  086E               	movf	(_tap_iteration+1)^(0+128),w
  4473  0BAE  00BC               	movwf	(main@tapCntDivisor+1)^(0+128)
  4474  0BAF  086D               	movf	_tap_iteration^(0+128),w
  4475  0BB0  00BB               	movwf	main@tapCntDivisor^(0+128)
  4476                           
  4477                           ;main.c: 269: } else {
  4478  0BB1  2C35               	goto	l2840
  4479  0BB2                     l2828:	
  4480                           
  4481                           ;main.c: 270: tap_total = 0;
  4482  0BB2  3000               	movlw	0
  4483  0BB3  0022               	movlb	2	; select bank2
  4484  0BB4  00CB               	movwf	(_tap_total+3)^(0+256)
  4485  0BB5  3000               	movlw	0
  4486  0BB6  00CA               	movwf	(_tap_total+2)^(0+256)
  4487  0BB7  3000               	movlw	0
  4488  0BB8  00C9               	movwf	(_tap_total+1)^(0+256)
  4489  0BB9  3000               	movlw	0
  4490  0BBA  00C8               	movwf	_tap_total^(0+256)
  4491                           
  4492                           ;main.c: 271: for (iCnt = 1; iCnt < num_taps; iCnt++) {
  4493  0BBB  3001               	movlw	1
  4494  0BBC  0021               	movlb	1	; select bank1
  4495  0BBD  00D3               	movwf	_iCnt^(0+128)
  4496  0BBE  3000               	movlw	0
  4497  0BBF  00D4               	movwf	(_iCnt^(0+128)+1)
  4498  0BC0                     l2834:	
  4499  0BC0  0854               	movf	(_iCnt+1)^(0+128),w
  4500  0BC1  3A80               	xorlw	128
  4501  0BC2  00AA               	movwf	??_main^(0+128)
  4502  0BC3  086C               	movf	(_num_taps+1)^(0+128),w
  4503  0BC4  3A80               	xorlw	128
  4504  0BC5  022A               	subwf	??_main^(0+128),w
  4505  0BC6  1D03               	skipz
  4506  0BC7  2BCA               	goto	u3135
  4507  0BC8  086B               	movf	_num_taps^(0+128),w
  4508  0BC9  0253               	subwf	_iCnt^(0+128),w
  4509  0BCA                     u3135:	
  4510  0BCA  1803               	btfsc	3,0
  4511  0BCB  2C11               	goto	l2836
  4512                           
  4513                           ;main.c: 272: tap_history[iCnt] = tap_history[iCnt + 1];
  4514  0BCC  0021               	movlb	1	; select bank1
  4515  0BCD  0853               	movf	_iCnt^(0+128),w
  4516  0BCE  00AA               	movwf	??_main^(0+128)
  4517  0BCF  3001               	movlw	1
  4518  0BD0                     u3105:	
  4519  0BD0  35AA               	lslf	??_main^(0+128),f
  4520  0BD1  3EFF               	addlw	-1
  4521  0BD2  1D03               	skipz
  4522  0BD3  2BD0               	goto	u3105
  4523  0BD4  352A               	lslf	??_main^(0+128),w
  4524  0BD5  3E04               	addlw	4
  4525  0BD6  3E20               	addlw	(low (_tap_history| (0+256)))& (0+255)
  4526  0BD7  0086               	movwf	6
  4527  0BD8  3001               	movlw	1	; select bank2/3
  4528  0BD9  0087               	movwf	7
  4529  0BDA  3F40               	moviw [0]fsr1
  4530  0BDB  00AB               	movwf	(??_main+1)^(0+128)
  4531  0BDC  3F41               	moviw [1]fsr1
  4532  0BDD  00AC               	movwf	((??_main+1)^(0+128)+1)
  4533  0BDE  3F42               	moviw [2]fsr1
  4534  0BDF  00AD               	movwf	((??_main+1)^(0+128)+2)
  4535  0BE0  3F43               	moviw [3]fsr1
  4536  0BE1  00AE               	movwf	((??_main+1)^(0+128)+3)
  4537  0BE2  0853               	movf	_iCnt^(0+128),w
  4538  0BE3  00AF               	movwf	(??_main+5)^(0+128)
  4539  0BE4  3001               	movlw	1
  4540  0BE5                     u3115:	
  4541  0BE5  35AF               	lslf	(??_main+5)^(0+128),f
  4542  0BE6  3EFF               	addlw	-1
  4543  0BE7  1D03               	skipz
  4544  0BE8  2BE5               	goto	u3115
  4545  0BE9  352F               	lslf	(??_main+5)^(0+128),w
  4546  0BEA  3E20               	addlw	(low (_tap_history| (0+256)))& (0+255)
  4547  0BEB  0086               	movwf	6
  4548  0BEC  3001               	movlw	1	; select bank2/3
  4549  0BED  0087               	movwf	7
  4550  0BEE  082B               	movf	(??_main+1)^(0+128),w
  4551  0BEF  3FC0               	movwi [0]fsr1
  4552  0BF0  082C               	movf	(??_main+2)^(0+128),w
  4553  0BF1  3FC1               	movwi [1]fsr1
  4554  0BF2  082D               	movf	(??_main+3)^(0+128),w
  4555  0BF3  3FC2               	movwi [2]fsr1
  4556  0BF4  082E               	movf	(??_main+4)^(0+128),w
  4557  0BF5  3FC3               	movwi [3]fsr1
  4558                           
  4559                           ;main.c: 273: tap_total += tap_history[iCnt];
  4560  0BF6  0853               	movf	_iCnt^(0+128),w
  4561  0BF7  00AA               	movwf	??_main^(0+128)
  4562  0BF8  3001               	movlw	1
  4563  0BF9                     u3125:	
  4564  0BF9  35AA               	lslf	??_main^(0+128),f
  4565  0BFA  3EFF               	addlw	-1
  4566  0BFB  1D03               	skipz
  4567  0BFC  2BF9               	goto	u3125
  4568  0BFD  352A               	lslf	??_main^(0+128),w
  4569  0BFE  3E20               	addlw	(low (_tap_history| (0+256)))& (0+255)
  4570  0BFF  0086               	movwf	6
  4571  0C00  3001               	movlw	1	; select bank2/3
  4572  0C01  0087               	movwf	7
  4573  0C02  3F40               	moviw [0]fsr1
  4574  0C03  0022               	movlb	2	; select bank2
  4575  0C04  07C8               	addwf	_tap_total^(0+256),f
  4576  0C05  3F41               	moviw [1]fsr1
  4577  0C06  3DC9               	addwfc	(_tap_total+1)^(0+256),f
  4578  0C07  3F42               	moviw [2]fsr1
  4579  0C08  3DCA               	addwfc	(_tap_total+2)^(0+256),f
  4580  0C09  3F43               	moviw [3]fsr1
  4581  0C0A  3DCB               	addwfc	(_tap_total+3)^(0+256),f
  4582  0C0B  3001               	movlw	1
  4583  0C0C  0021               	movlb	1	; select bank1
  4584  0C0D  07D3               	addwf	_iCnt^(0+128),f
  4585  0C0E  3000               	movlw	0
  4586  0C0F  3DD4               	addwfc	(_iCnt+1)^(0+128),f
  4587  0C10  2BC0               	goto	l2834
  4588  0C11                     l2836:	
  4589                           
  4590                           ;main.c: 274: }
  4591                           ;main.c: 275: tap_history[num_taps] = tap_timer;
  4592  0C11  0021               	movlb	1	; select bank1
  4593  0C12  086B               	movf	_num_taps^(0+128),w
  4594  0C13  00AA               	movwf	??_main^(0+128)
  4595  0C14  3001               	movlw	1
  4596  0C15                     u3145:	
  4597  0C15  35AA               	lslf	??_main^(0+128),f
  4598  0C16  3EFF               	addlw	-1
  4599  0C17  1D03               	skipz
  4600  0C18  2C15               	goto	u3145
  4601  0C19  352A               	lslf	??_main^(0+128),w
  4602  0C1A  3E20               	addlw	(low (_tap_history| (0+256)))& (0+255)
  4603  0C1B  0086               	movwf	6
  4604  0C1C  3001               	movlw	1	; select bank2/3
  4605  0C1D  0087               	movwf	7
  4606  0C1E  0849               	movf	_tap_timer^(0+128),w	;volatile
  4607  0C1F  3FC0               	movwi [0]fsr1
  4608  0C20  084A               	movf	(_tap_timer+1)^(0+128),w	;volatile
  4609  0C21  3FC1               	movwi [1]fsr1
  4610  0C22  084B               	movf	(_tap_timer+2)^(0+128),w	;volatile
  4611  0C23  3FC2               	movwi [2]fsr1
  4612  0C24  084C               	movf	(_tap_timer+3)^(0+128),w	;volatile
  4613  0C25  3FC3               	movwi [3]fsr1
  4614                           
  4615                           ;main.c: 276: tap_total += tap_timer;
  4616  0C26  0849               	movf	_tap_timer^(0+128),w	;volatile
  4617  0C27  0022               	movlb	2	; select bank2
  4618  0C28  07C8               	addwf	_tap_total^(0+256),f
  4619  0C29  0021               	movlb	1	; select bank1
  4620  0C2A  084A               	movf	(_tap_timer+1)^(0+128),w	;volatile
  4621  0C2B  0022               	movlb	2	; select bank2
  4622  0C2C  3DC9               	addwfc	(_tap_total+1)^(0+256),f
  4623  0C2D  0021               	movlb	1	; select bank1
  4624  0C2E  084B               	movf	(_tap_timer+2)^(0+128),w	;volatile
  4625  0C2F  0022               	movlb	2	; select bank2
  4626  0C30  3DCA               	addwfc	(_tap_total+2)^(0+256),f
  4627  0C31  0021               	movlb	1	; select bank1
  4628  0C32  084C               	movf	(_tap_timer+3)^(0+128),w	;volatile
  4629  0C33  0022               	movlb	2	; select bank2
  4630  0C34  3DCB               	addwfc	(_tap_total+3)^(0+256),f
  4631  0C35                     l2840:	
  4632                           
  4633                           ;main.c: 277: }
  4634                           ;main.c: 280: baseline_delay_time = tap_total / tapCntDivisor;
  4635  0C35  0021               	movlb	1	; select bank1
  4636  0C36  083B               	movf	main@tapCntDivisor^(0+128),w
  4637  0C37  0020               	movlb	0	; select bank0
  4638  0C38  00A6               	movwf	___aldiv@divisor
  4639  0C39  0021               	movlb	1	; select bank1
  4640  0C3A  083C               	movf	(main@tapCntDivisor+1)^(0+128),w
  4641  0C3B  0020               	movlb	0	; select bank0
  4642  0C3C  00A7               	movwf	___aldiv@divisor+1
  4643  0C3D  0D89               	rlf	9,f
  4644  0C3E  3B89               	subwfb	9,f
  4645  0C3F  0989               	comf	9,f
  4646  0C40  00A8               	movwf	___aldiv@divisor+2
  4647  0C41  00A9               	movwf	___aldiv@divisor+3
  4648  0C42  0022               	movlb	2	; select bank2
  4649  0C43  084B               	movf	(_tap_total+3)^(0+256),w
  4650  0C44  0020               	movlb	0	; select bank0
  4651  0C45  00AD               	movwf	___aldiv@dividend+3
  4652  0C46  0022               	movlb	2	; select bank2
  4653  0C47  084A               	movf	(_tap_total+2)^(0+256),w
  4654  0C48  0020               	movlb	0	; select bank0
  4655  0C49  00AC               	movwf	___aldiv@dividend+2
  4656  0C4A  0022               	movlb	2	; select bank2
  4657  0C4B  0849               	movf	(_tap_total+1)^(0+256),w
  4658  0C4C  0020               	movlb	0	; select bank0
  4659  0C4D  00AB               	movwf	___aldiv@dividend+1
  4660  0C4E  0022               	movlb	2	; select bank2
  4661  0C4F  0848               	movf	_tap_total^(0+256),w
  4662  0C50  0020               	movlb	0	; select bank0
  4663  0C51  00AA               	movwf	___aldiv@dividend
  4664  0C52  3196  2636  3188   	fcall	___aldiv
  4665  0C55  0020               	movlb	0	; select bank0
  4666  0C56  0829               	movf	?___aldiv+3,w
  4667  0C57  0021               	movlb	1	; select bank1
  4668  0C58  00E2               	movwf	(_baseline_delay_time+3)^(0+128)	;volatile
  4669  0C59  0020               	movlb	0	; select bank0
  4670  0C5A  0828               	movf	?___aldiv+2,w
  4671  0C5B  0021               	movlb	1	; select bank1
  4672  0C5C  00E1               	movwf	(_baseline_delay_time+2)^(0+128)	;volatile
  4673  0C5D  0020               	movlb	0	; select bank0
  4674  0C5E  0827               	movf	?___aldiv+1,w
  4675  0C5F  0021               	movlb	1	; select bank1
  4676  0C60  00E0               	movwf	(_baseline_delay_time+1)^(0+128)	;volatile
  4677  0C61  0020               	movlb	0	; select bank0
  4678  0C62  0826               	movf	?___aldiv,w
  4679  0C63  0021               	movlb	1	; select bank1
  4680  0C64  00DF               	movwf	_baseline_delay_time^(0+128)	;volatile
  4681                           
  4682                           ;main.c: 281: delay_time_changed = 1;
  4683  0C65  3001               	movlw	1
  4684  0C66  0022               	movlb	2	; select bank2
  4685  0C67  00E0               	movwf	_delay_time_changed^(0+256)
  4686  0C68  3000               	movlw	0
  4687  0C69  00E1               	movwf	(_delay_time_changed^(0+256)+1)
  4688                           
  4689                           ;main.c: 282: tap_timer = 0;
  4690  0C6A  3000               	movlw	0
  4691  0C6B  0021               	movlb	1	; select bank1
  4692  0C6C  00CC               	movwf	(_tap_timer+3)^(0+128)	;volatile
  4693  0C6D  3000               	movlw	0
  4694  0C6E  00CB               	movwf	(_tap_timer+2)^(0+128)	;volatile
  4695  0C6F  3000               	movlw	0
  4696  0C70  00CA               	movwf	(_tap_timer+1)^(0+128)	;volatile
  4697  0C71  3000               	movlw	0
  4698  0C72  00C9               	movwf	_tap_timer^(0+128)	;volatile
  4699                           
  4700                           ;main.c: 291: tap_iteration++;
  4701  0C73  3001               	movlw	1
  4702  0C74  07ED               	addwf	_tap_iteration^(0+128),f
  4703  0C75  3000               	movlw	0
  4704  0C76  3DEE               	addwfc	(_tap_iteration+1)^(0+128),f
  4705  0C77                     l235:	
  4706                           ;main.c: 292: }
  4707                           ;main.c: 293: while (PORTEbits.RE0 == 0) {
  4708                           
  4709  0C77  0020               	movlb	0	; select bank0
  4710  0C78  1810               	btfsc	16,0	;volatile
  4711  0C79  2C7E               	goto	l2850
  4712  0C7A  2C77               	goto	l235
  4713  0C7B                     l2848:	
  4714                           ;main.c: 294: }
  4715                           ;main.c: 295: }
  4716                           ;main.c: 296: }
  4717                           ;main.c: 297: } else {
  4718                           
  4719                           
  4720                           ;main.c: 298: debounce_count = 0;
  4721  0C7B  0022               	movlb	2	; select bank2
  4722  0C7C  01D4               	clrf	_debounce_count^(0+256)
  4723  0C7D  01D5               	clrf	(_debounce_count+1)^(0+256)
  4724  0C7E                     l2850:	
  4725                           
  4726                           ;main.c: 299: }
  4727                           ;main.c: 304: knob_1_pos = adc_convert(0);
  4728  0C7E  3000               	movlw	0
  4729  0C7F  3190  2083  3188   	fcall	_adc_convert
  4730  0C82  0020               	movlb	0	; select bank0
  4731  0C83  0821               	movf	?_adc_convert+1,w
  4732  0C84  0021               	movlb	1	; select bank1
  4733  0C85  00D6               	movwf	(_knob_1_pos+1)^(0+128)
  4734  0C86  0020               	movlb	0	; select bank0
  4735  0C87  0820               	movf	?_adc_convert,w
  4736  0C88  0021               	movlb	1	; select bank1
  4737  0C89  00D5               	movwf	_knob_1_pos^(0+128)
  4738                           
  4739                           ;main.c: 305: knob_2_pos = adc_convert(1);
  4740  0C8A  3001               	movlw	1
  4741  0C8B  3190  2083  3188   	fcall	_adc_convert
  4742  0C8E  0020               	movlb	0	; select bank0
  4743  0C8F  0821               	movf	?_adc_convert+1,w
  4744  0C90  0021               	movlb	1	; select bank1
  4745  0C91  00D8               	movwf	(_knob_2_pos+1)^(0+128)
  4746  0C92  0020               	movlb	0	; select bank0
  4747  0C93  0820               	movf	?_adc_convert,w
  4748  0C94  0021               	movlb	1	; select bank1
  4749  0C95  00D7               	movwf	_knob_2_pos^(0+128)
  4750                           
  4751                           ;main.c: 306: knob_3_pos = adc_convert(2);
  4752  0C96  3002               	movlw	2
  4753  0C97  3190  2083  3188   	fcall	_adc_convert
  4754  0C9A  0020               	movlb	0	; select bank0
  4755  0C9B  0821               	movf	?_adc_convert+1,w
  4756  0C9C  0021               	movlb	1	; select bank1
  4757  0C9D  00DA               	movwf	(_knob_3_pos+1)^(0+128)
  4758  0C9E  0020               	movlb	0	; select bank0
  4759  0C9F  0820               	movf	?_adc_convert,w
  4760  0CA0  0021               	movlb	1	; select bank1
  4761  0CA1  00D9               	movwf	_knob_3_pos^(0+128)
  4762                           
  4763                           ;main.c: 307: knob_4_pos = adc_convert(3);
  4764  0CA2  3003               	movlw	3
  4765  0CA3  3190  2083  3188   	fcall	_adc_convert
  4766  0CA6  0020               	movlb	0	; select bank0
  4767  0CA7  0821               	movf	?_adc_convert+1,w
  4768  0CA8  0021               	movlb	1	; select bank1
  4769  0CA9  00DC               	movwf	(_knob_4_pos+1)^(0+128)
  4770  0CAA  0020               	movlb	0	; select bank0
  4771  0CAB  0820               	movf	?_adc_convert,w
  4772  0CAC  0021               	movlb	1	; select bank1
  4773  0CAD  00DB               	movwf	_knob_4_pos^(0+128)
  4774                           
  4775                           ;main.c: 308: knob_5_pos = adc_convert(4);
  4776  0CAE  3004               	movlw	4
  4777  0CAF  3190  2083  3188   	fcall	_adc_convert
  4778  0CB2  0020               	movlb	0	; select bank0
  4779  0CB3  0821               	movf	?_adc_convert+1,w
  4780  0CB4  00FA               	movwf	_knob_5_pos+1
  4781  0CB5  0820               	movf	?_adc_convert,w
  4782  0CB6  00F9               	movwf	_knob_5_pos
  4783                           
  4784                           ;main.c: 321: if (knob_1_pos - knob1_prev >= 4 || knob_1_pos - knob1_prev <= -4) {
  4785  0CB7  0021               	movlb	1	; select bank1
  4786  0CB8  0969               	comf	_knob1_prev^(0+128),w
  4787  0CB9  00AA               	movwf	??_main^(0+128)
  4788  0CBA  096A               	comf	(_knob1_prev+1)^(0+128),w
  4789  0CBB  00AB               	movwf	(??_main^(0+128)+1)
  4790  0CBC  0AAA               	incf	??_main^(0+128),f
  4791  0CBD  1903               	skipnz
  4792  0CBE  0AAB               	incf	(??_main^(0+128)+1),f
  4793  0CBF  0855               	movf	_knob_1_pos^(0+128),w
  4794  0CC0  072A               	addwf	??_main^(0+128),w
  4795  0CC1  00AC               	movwf	(??_main+2)^(0+128)
  4796  0CC2  0856               	movf	(_knob_1_pos+1)^(0+128),w
  4797  0CC3  3D2B               	addwfc	(??_main+1)^(0+128),w
  4798  0CC4  00AD               	movwf	(??_main+3)^(0+128)
  4799  0CC5  082D               	movf	(??_main+3)^(0+128),w
  4800  0CC6  3A80               	xorlw	128
  4801  0CC7  00AE               	movwf	(??_main+4)^(0+128)
  4802  0CC8  3080               	movlw	128
  4803  0CC9  022E               	subwf	(??_main+4)^(0+128),w
  4804  0CCA  1D03               	skipz
  4805  0CCB  2CCE               	goto	u3165
  4806  0CCC  3004               	movlw	4
  4807  0CCD  022C               	subwf	(??_main+2)^(0+128),w
  4808  0CCE                     u3165:	
  4809  0CCE  1803               	skipnc
  4810  0CCF  2CE9               	goto	l2864
  4811  0CD0  0021               	movlb	1	; select bank1
  4812  0CD1  0969               	comf	_knob1_prev^(0+128),w
  4813  0CD2  00AA               	movwf	??_main^(0+128)
  4814  0CD3  096A               	comf	(_knob1_prev+1)^(0+128),w
  4815  0CD4  00AB               	movwf	(??_main^(0+128)+1)
  4816  0CD5  0AAA               	incf	??_main^(0+128),f
  4817  0CD6  1903               	skipnz
  4818  0CD7  0AAB               	incf	(??_main^(0+128)+1),f
  4819  0CD8  0855               	movf	_knob_1_pos^(0+128),w
  4820  0CD9  072A               	addwf	??_main^(0+128),w
  4821  0CDA  00AC               	movwf	(??_main+2)^(0+128)
  4822  0CDB  0856               	movf	(_knob_1_pos+1)^(0+128),w
  4823  0CDC  3D2B               	addwfc	(??_main+1)^(0+128),w
  4824  0CDD  00AD               	movwf	(??_main+3)^(0+128)
  4825  0CDE  082D               	movf	(??_main+3)^(0+128),w
  4826  0CDF  3A80               	xorlw	128
  4827  0CE0  00AE               	movwf	(??_main+4)^(0+128)
  4828  0CE1  307F               	movlw	127
  4829  0CE2  022E               	subwf	(??_main+4)^(0+128),w
  4830  0CE3  1D03               	skipz
  4831  0CE4  2CE7               	goto	u3175
  4832  0CE5  30FD               	movlw	253
  4833  0CE6  022C               	subwf	(??_main+2)^(0+128),w
  4834  0CE7                     u3175:	
  4835  0CE7  1803               	skipnc
  4836  0CE8  2D7B               	goto	l2870
  4837  0CE9                     l2864:	
  4838                           
  4839                           ;main.c: 322: knob1_prev = knob_1_pos;
  4840  0CE9  0021               	movlb	1	; select bank1
  4841  0CEA  0856               	movf	(_knob_1_pos+1)^(0+128),w
  4842  0CEB  00EA               	movwf	(_knob1_prev+1)^(0+128)
  4843  0CEC  0855               	movf	_knob_1_pos^(0+128),w
  4844  0CED  00E9               	movwf	_knob1_prev^(0+128)
  4845                           
  4846                           ;main.c: 323: int i = map(knob1_prev, 0, 1023, 0, 255);
  4847  0CEE  3000               	movlw	0
  4848  0CEF  0020               	movlb	0	; select bank0
  4849  0CF0  00E1               	movwf	map@out_max
  4850  0CF1  307F               	movlw	127
  4851  0CF2  00E2               	movwf	map@out_max+1
  4852  0CF3  3043               	movlw	67
  4853  0CF4  00E3               	movwf	map@out_max+2
  4854  0CF5  3000               	movlw	0
  4855  0CF6  00DE               	movwf	map@out_min
  4856  0CF7  3000               	movlw	0
  4857  0CF8  00DF               	movwf	map@out_min+1
  4858  0CF9  3000               	movlw	0
  4859  0CFA  00E0               	movwf	map@out_min+2
  4860  0CFB  30C0               	movlw	192
  4861  0CFC  00DB               	movwf	map@in_max
  4862  0CFD  307F               	movlw	127
  4863  0CFE  00DC               	movwf	map@in_max+1
  4864  0CFF  3044               	movlw	68
  4865  0D00  00DD               	movwf	map@in_max+2
  4866  0D01  3000               	movlw	0
  4867  0D02  00D8               	movwf	map@in_min
  4868  0D03  3000               	movlw	0
  4869  0D04  00D9               	movwf	map@in_min+1
  4870  0D05  3000               	movlw	0
  4871  0D06  00DA               	movwf	map@in_min+2
  4872  0D07  0021               	movlb	1	; select bank1
  4873  0D08  086A               	movf	(_knob1_prev+1)^(0+128),w
  4874  0D09  0020               	movlb	0	; select bank0
  4875  0D0A  00A9               	movwf	___awtoft@c+1
  4876  0D0B  0021               	movlb	1	; select bank1
  4877  0D0C  0869               	movf	_knob1_prev^(0+128),w
  4878  0D0D  0020               	movlb	0	; select bank0
  4879  0D0E  00A8               	movwf	___awtoft@c
  4880  0D0F  3188  2007  3188   	fcall	___awtoft
  4881  0D12  0020               	movlb	0	; select bank0
  4882  0D13  0828               	movf	?___awtoft,w
  4883  0D14  00D5               	movwf	map@x
  4884  0D15  0829               	movf	?___awtoft+1,w
  4885  0D16  00D6               	movwf	map@x+1
  4886  0D17  082A               	movf	?___awtoft+2,w
  4887  0D18  00D7               	movwf	map@x+2
  4888  0D19  3187  276F  3188   	fcall	_map
  4889  0D1C  0020               	movlb	0	; select bank0
  4890  0D1D  0855               	movf	?_map,w
  4891  0D1E  00E7               	movwf	___fttol@f1
  4892  0D1F  0856               	movf	?_map+1,w
  4893  0D20  00E8               	movwf	___fttol@f1+1
  4894  0D21  0857               	movf	?_map+2,w
  4895  0D22  00E9               	movwf	___fttol@f1+2
  4896  0D23  3196  26B8  3188   	fcall	___fttol
  4897  0D26  0020               	movlb	0	; select bank0
  4898  0D27  0868               	movf	?___fttol+1,w
  4899  0D28  0021               	movlb	1	; select bank1
  4900  0D29  00BA               	movwf	(main@i+1)^(0+128)
  4901  0D2A  0020               	movlb	0	; select bank0
  4902  0D2B  0867               	movf	?___fttol,w
  4903  0D2C  0021               	movlb	1	; select bank1
  4904  0D2D  00B9               	movwf	main@i^(0+128)
  4905                           
  4906                           ;main.c: 324: baseline_delay_time = map(knob1_prev, 0, 1023, 1172, 200);
  4907  0D2E  3000               	movlw	0
  4908  0D2F  0020               	movlb	0	; select bank0
  4909  0D30  00E1               	movwf	map@out_max
  4910  0D31  3048               	movlw	72
  4911  0D32  00E2               	movwf	map@out_max+1
  4912  0D33  3043               	movlw	67
  4913  0D34  00E3               	movwf	map@out_max+2
  4914  0D35  3080               	movlw	128
  4915  0D36  00DE               	movwf	map@out_min
  4916  0D37  3092               	movlw	146
  4917  0D38  00DF               	movwf	map@out_min+1
  4918  0D39  3044               	movlw	68
  4919  0D3A  00E0               	movwf	map@out_min+2
  4920  0D3B  30C0               	movlw	192
  4921  0D3C  00DB               	movwf	map@in_max
  4922  0D3D  307F               	movlw	127
  4923  0D3E  00DC               	movwf	map@in_max+1
  4924  0D3F  3044               	movlw	68
  4925  0D40  00DD               	movwf	map@in_max+2
  4926  0D41  3000               	movlw	0
  4927  0D42  00D8               	movwf	map@in_min
  4928  0D43  3000               	movlw	0
  4929  0D44  00D9               	movwf	map@in_min+1
  4930  0D45  3000               	movlw	0
  4931  0D46  00DA               	movwf	map@in_min+2
  4932  0D47  0021               	movlb	1	; select bank1
  4933  0D48  086A               	movf	(_knob1_prev+1)^(0+128),w
  4934  0D49  0020               	movlb	0	; select bank0
  4935  0D4A  00A9               	movwf	___awtoft@c+1
  4936  0D4B  0021               	movlb	1	; select bank1
  4937  0D4C  0869               	movf	_knob1_prev^(0+128),w
  4938  0D4D  0020               	movlb	0	; select bank0
  4939  0D4E  00A8               	movwf	___awtoft@c
  4940  0D4F  3188  2007  3188   	fcall	___awtoft
  4941  0D52  0020               	movlb	0	; select bank0
  4942  0D53  0828               	movf	?___awtoft,w
  4943  0D54  00D5               	movwf	map@x
  4944  0D55  0829               	movf	?___awtoft+1,w
  4945  0D56  00D6               	movwf	map@x+1
  4946  0D57  082A               	movf	?___awtoft+2,w
  4947  0D58  00D7               	movwf	map@x+2
  4948  0D59  3187  276F  3188   	fcall	_map
  4949  0D5C  0020               	movlb	0	; select bank0
  4950  0D5D  0855               	movf	?_map,w
  4951  0D5E  00E7               	movwf	___fttol@f1
  4952  0D5F  0856               	movf	?_map+1,w
  4953  0D60  00E8               	movwf	___fttol@f1+1
  4954  0D61  0857               	movf	?_map+2,w
  4955  0D62  00E9               	movwf	___fttol@f1+2
  4956  0D63  3196  26B8  3188   	fcall	___fttol
  4957  0D66  0020               	movlb	0	; select bank0
  4958  0D67  086A               	movf	?___fttol+3,w
  4959  0D68  0021               	movlb	1	; select bank1
  4960  0D69  00E2               	movwf	(_baseline_delay_time+3)^(0+128)	;volatile
  4961  0D6A  0020               	movlb	0	; select bank0
  4962  0D6B  0869               	movf	?___fttol+2,w
  4963  0D6C  0021               	movlb	1	; select bank1
  4964  0D6D  00E1               	movwf	(_baseline_delay_time+2)^(0+128)	;volatile
  4965  0D6E  0020               	movlb	0	; select bank0
  4966  0D6F  0868               	movf	?___fttol+1,w
  4967  0D70  0021               	movlb	1	; select bank1
  4968  0D71  00E0               	movwf	(_baseline_delay_time+1)^(0+128)	;volatile
  4969  0D72  0020               	movlb	0	; select bank0
  4970  0D73  0867               	movf	?___fttol,w
  4971  0D74  0021               	movlb	1	; select bank1
  4972  0D75  00DF               	movwf	_baseline_delay_time^(0+128)	;volatile
  4973                           
  4974                           ;main.c: 325: delay_time_changed = 1;
  4975  0D76  3001               	movlw	1
  4976  0D77  0022               	movlb	2	; select bank2
  4977  0D78  00E0               	movwf	_delay_time_changed^(0+256)
  4978  0D79  3000               	movlw	0
  4979  0D7A  00E1               	movwf	(_delay_time_changed^(0+256)+1)
  4980  0D7B                     l2870:	
  4981                           
  4982                           ;main.c: 326: }
  4983                           ;main.c: 335: if (knob_2_pos - knob2_prev >= 4 || knob_2_pos - knob2_prev <= -4) {
  4984  0D7B  0022               	movlb	2	; select bank2
  4985  0D7C  0964               	comf	_knob2_prev^(0+256),w
  4986  0D7D  0021               	movlb	1	; select bank1
  4987  0D7E  00AA               	movwf	??_main^(0+128)
  4988  0D7F  0022               	movlb	2	; select bank2
  4989  0D80  0965               	comf	(_knob2_prev+1)^(0+256),w
  4990  0D81  0021               	movlb	1	; select bank1
  4991  0D82  00AB               	movwf	(??_main^(0+128)+1)
  4992  0D83  0AAA               	incf	??_main^(0+128),f
  4993  0D84  1903               	skipnz
  4994  0D85  0AAB               	incf	(??_main^(0+128)+1),f
  4995  0D86  0857               	movf	_knob_2_pos^(0+128),w
  4996  0D87  072A               	addwf	??_main^(0+128),w
  4997  0D88  00AC               	movwf	(??_main+2)^(0+128)
  4998  0D89  0858               	movf	(_knob_2_pos+1)^(0+128),w
  4999  0D8A  3D2B               	addwfc	(??_main+1)^(0+128),w
  5000  0D8B  00AD               	movwf	(??_main+3)^(0+128)
  5001  0D8C  082D               	movf	(??_main+3)^(0+128),w
  5002  0D8D  3A80               	xorlw	128
  5003  0D8E  00AE               	movwf	(??_main+4)^(0+128)
  5004  0D8F  3080               	movlw	128
  5005  0D90  022E               	subwf	(??_main+4)^(0+128),w
  5006  0D91  1D03               	skipz
  5007  0D92  2D95               	goto	u3185
  5008  0D93  3004               	movlw	4
  5009  0D94  022C               	subwf	(??_main+2)^(0+128),w
  5010  0D95                     u3185:	
  5011  0D95  1803               	skipnc
  5012  0D96  2DB3               	goto	l2874
  5013  0D97  0022               	movlb	2	; select bank2
  5014  0D98  0964               	comf	_knob2_prev^(0+256),w
  5015  0D99  0021               	movlb	1	; select bank1
  5016  0D9A  00AA               	movwf	??_main^(0+128)
  5017  0D9B  0022               	movlb	2	; select bank2
  5018  0D9C  0965               	comf	(_knob2_prev+1)^(0+256),w
  5019  0D9D  0021               	movlb	1	; select bank1
  5020  0D9E  00AB               	movwf	(??_main^(0+128)+1)
  5021  0D9F  0AAA               	incf	??_main^(0+128),f
  5022  0DA0  1903               	skipnz
  5023  0DA1  0AAB               	incf	(??_main^(0+128)+1),f
  5024  0DA2  0857               	movf	_knob_2_pos^(0+128),w
  5025  0DA3  072A               	addwf	??_main^(0+128),w
  5026  0DA4  00AC               	movwf	(??_main+2)^(0+128)
  5027  0DA5  0858               	movf	(_knob_2_pos+1)^(0+128),w
  5028  0DA6  3D2B               	addwfc	(??_main+1)^(0+128),w
  5029  0DA7  00AD               	movwf	(??_main+3)^(0+128)
  5030  0DA8  082D               	movf	(??_main+3)^(0+128),w
  5031  0DA9  3A80               	xorlw	128
  5032  0DAA  00AE               	movwf	(??_main+4)^(0+128)
  5033  0DAB  307F               	movlw	127
  5034  0DAC  022E               	subwf	(??_main+4)^(0+128),w
  5035  0DAD  1D03               	skipz
  5036  0DAE  2DB1               	goto	u3195
  5037  0DAF  30FD               	movlw	253
  5038  0DB0  022C               	subwf	(??_main+2)^(0+128),w
  5039  0DB1                     u3195:	
  5040  0DB1  1803               	skipnc
  5041  0DB2  2E10               	goto	l2882
  5042  0DB3                     l2874:	
  5043                           
  5044                           ;main.c: 336: knob2_prev = knob_2_pos;
  5045  0DB3  0021               	movlb	1	; select bank1
  5046  0DB4  0858               	movf	(_knob_2_pos+1)^(0+128),w
  5047  0DB5  0022               	movlb	2	; select bank2
  5048  0DB6  00E5               	movwf	(_knob2_prev+1)^(0+256)
  5049  0DB7  0021               	movlb	1	; select bank1
  5050  0DB8  0857               	movf	_knob_2_pos^(0+128),w
  5051  0DB9  0022               	movlb	2	; select bank2
  5052  0DBA  00E4               	movwf	_knob2_prev^(0+256)
  5053                           
  5054                           ;main.c: 337: int i = map(knob2_prev, 0, 1023, 0, 39);
  5055  0DBB  3000               	movlw	0
  5056  0DBC  0020               	movlb	0	; select bank0
  5057  0DBD  00E1               	movwf	map@out_max
  5058  0DBE  301C               	movlw	28
  5059  0DBF  00E2               	movwf	map@out_max+1
  5060  0DC0  3042               	movlw	66
  5061  0DC1  00E3               	movwf	map@out_max+2
  5062  0DC2  3000               	movlw	0
  5063  0DC3  00DE               	movwf	map@out_min
  5064  0DC4  3000               	movlw	0
  5065  0DC5  00DF               	movwf	map@out_min+1
  5066  0DC6  3000               	movlw	0
  5067  0DC7  00E0               	movwf	map@out_min+2
  5068  0DC8  30C0               	movlw	192
  5069  0DC9  00DB               	movwf	map@in_max
  5070  0DCA  307F               	movlw	127
  5071  0DCB  00DC               	movwf	map@in_max+1
  5072  0DCC  3044               	movlw	68
  5073  0DCD  00DD               	movwf	map@in_max+2
  5074  0DCE  3000               	movlw	0
  5075  0DCF  00D8               	movwf	map@in_min
  5076  0DD0  3000               	movlw	0
  5077  0DD1  00D9               	movwf	map@in_min+1
  5078  0DD2  3000               	movlw	0
  5079  0DD3  00DA               	movwf	map@in_min+2
  5080  0DD4  0022               	movlb	2	; select bank2
  5081  0DD5  0865               	movf	(_knob2_prev+1)^(0+256),w
  5082  0DD6  0020               	movlb	0	; select bank0
  5083  0DD7  00A9               	movwf	___awtoft@c+1
  5084  0DD8  0022               	movlb	2	; select bank2
  5085  0DD9  0864               	movf	_knob2_prev^(0+256),w
  5086  0DDA  0020               	movlb	0	; select bank0
  5087  0DDB  00A8               	movwf	___awtoft@c
  5088  0DDC  3188  2007  3188   	fcall	___awtoft
  5089  0DDF  0020               	movlb	0	; select bank0
  5090  0DE0  0828               	movf	?___awtoft,w
  5091  0DE1  00D5               	movwf	map@x
  5092  0DE2  0829               	movf	?___awtoft+1,w
  5093  0DE3  00D6               	movwf	map@x+1
  5094  0DE4  082A               	movf	?___awtoft+2,w
  5095  0DE5  00D7               	movwf	map@x+2
  5096  0DE6  3187  276F  3188   	fcall	_map
  5097  0DE9  0020               	movlb	0	; select bank0
  5098  0DEA  0855               	movf	?_map,w
  5099  0DEB  00E7               	movwf	___fttol@f1
  5100  0DEC  0856               	movf	?_map+1,w
  5101  0DED  00E8               	movwf	___fttol@f1+1
  5102  0DEE  0857               	movf	?_map+2,w
  5103  0DEF  00E9               	movwf	___fttol@f1+2
  5104  0DF0  3196  26B8  3188   	fcall	___fttol
  5105  0DF3  0020               	movlb	0	; select bank0
  5106  0DF4  0868               	movf	?___fttol+1,w
  5107  0DF5  0021               	movlb	1	; select bank1
  5108  0DF6  00C0               	movwf	(main@i_395+1)^(0+128)
  5109  0DF7  0020               	movlb	0	; select bank0
  5110  0DF8  0867               	movf	?___fttol,w
  5111  0DF9  0021               	movlb	1	; select bank1
  5112  0DFA  00BF               	movwf	main@i_395^(0+128)
  5113                           
  5114                           ;main.c: 338: CCPR2 = iB25k[i];
  5115  0DFB  353F               	lslf	main@i_395^(0+128),w
  5116  0DFC  3EA0               	addlw	(low (_iB25k| (0+1024)))& (0+255)
  5117  0DFD  0086               	movwf	6
  5118  0DFE  3004               	movlw	4	; select bank9/10
  5119  0DFF  0087               	movwf	7
  5120  0E00  3F40               	moviw [0]fsr1
  5121  0E01  0025               	movlb	5	; select bank5
  5122  0E02  0098               	movwf	24	;volatile
  5123  0E03  3F41               	moviw [1]fsr1
  5124  0E04  0099               	movwf	25	;volatile
  5125                           
  5126                           ;main.c: 339: CCPR3 = B25k[i];
  5127  0E05  0021               	movlb	1	; select bank1
  5128  0E06  353F               	lslf	main@i_395^(0+128),w
  5129  0E07  3E20               	addlw	(low (_B25k| (0+1024)))& (0+255)
  5130  0E08  0086               	movwf	6
  5131  0E09  3004               	movlw	4	; select bank8/9
  5132  0E0A  0087               	movwf	7
  5133  0E0B  3F40               	moviw [0]fsr1
  5134  0E0C  0026               	movlb	6	; select bank6
  5135  0E0D  0091               	movwf	17	;volatile
  5136  0E0E  3F41               	moviw [1]fsr1
  5137  0E0F  0092               	movwf	18	;volatile
  5138  0E10                     l2882:	
  5139                           
  5140                           ;main.c: 340: }
  5141                           ;main.c: 350: if (knob_3_pos - knob3_prev >= 4 || knob_3_pos - knob3_prev <= -4) {
  5142  0E10  0022               	movlb	2	; select bank2
  5143  0E11  0966               	comf	_knob3_prev^(0+256),w
  5144  0E12  0021               	movlb	1	; select bank1
  5145  0E13  00AA               	movwf	??_main^(0+128)
  5146  0E14  0022               	movlb	2	; select bank2
  5147  0E15  0967               	comf	(_knob3_prev+1)^(0+256),w
  5148  0E16  0021               	movlb	1	; select bank1
  5149  0E17  00AB               	movwf	(??_main^(0+128)+1)
  5150  0E18  0AAA               	incf	??_main^(0+128),f
  5151  0E19  1903               	skipnz
  5152  0E1A  0AAB               	incf	(??_main^(0+128)+1),f
  5153  0E1B  0859               	movf	_knob_3_pos^(0+128),w
  5154  0E1C  072A               	addwf	??_main^(0+128),w
  5155  0E1D  00AC               	movwf	(??_main+2)^(0+128)
  5156  0E1E  085A               	movf	(_knob_3_pos+1)^(0+128),w
  5157  0E1F  3D2B               	addwfc	(??_main+1)^(0+128),w
  5158  0E20  00AD               	movwf	(??_main+3)^(0+128)
  5159  0E21  082D               	movf	(??_main+3)^(0+128),w
  5160  0E22  3A80               	xorlw	128
  5161  0E23  00AE               	movwf	(??_main+4)^(0+128)
  5162  0E24  3080               	movlw	128
  5163  0E25  022E               	subwf	(??_main+4)^(0+128),w
  5164  0E26  1D03               	skipz
  5165  0E27  2E2A               	goto	u3205
  5166  0E28  3004               	movlw	4
  5167  0E29  022C               	subwf	(??_main+2)^(0+128),w
  5168  0E2A                     u3205:	
  5169  0E2A  1803               	skipnc
  5170  0E2B  2E48               	goto	l2886
  5171  0E2C  0022               	movlb	2	; select bank2
  5172  0E2D  0966               	comf	_knob3_prev^(0+256),w
  5173  0E2E  0021               	movlb	1	; select bank1
  5174  0E2F  00AA               	movwf	??_main^(0+128)
  5175  0E30  0022               	movlb	2	; select bank2
  5176  0E31  0967               	comf	(_knob3_prev+1)^(0+256),w
  5177  0E32  0021               	movlb	1	; select bank1
  5178  0E33  00AB               	movwf	(??_main^(0+128)+1)
  5179  0E34  0AAA               	incf	??_main^(0+128),f
  5180  0E35  1903               	skipnz
  5181  0E36  0AAB               	incf	(??_main^(0+128)+1),f
  5182  0E37  0859               	movf	_knob_3_pos^(0+128),w
  5183  0E38  072A               	addwf	??_main^(0+128),w
  5184  0E39  00AC               	movwf	(??_main+2)^(0+128)
  5185  0E3A  085A               	movf	(_knob_3_pos+1)^(0+128),w
  5186  0E3B  3D2B               	addwfc	(??_main+1)^(0+128),w
  5187  0E3C  00AD               	movwf	(??_main+3)^(0+128)
  5188  0E3D  082D               	movf	(??_main+3)^(0+128),w
  5189  0E3E  3A80               	xorlw	128
  5190  0E3F  00AE               	movwf	(??_main+4)^(0+128)
  5191  0E40  307F               	movlw	127
  5192  0E41  022E               	subwf	(??_main+4)^(0+128),w
  5193  0E42  1D03               	skipz
  5194  0E43  2E46               	goto	u3215
  5195  0E44  30FD               	movlw	253
  5196  0E45  022C               	subwf	(??_main+2)^(0+128),w
  5197  0E46                     u3215:	
  5198  0E46  1803               	skipnc
  5199  0E47  2EA5               	goto	l2894
  5200  0E48                     l2886:	
  5201                           
  5202                           ;main.c: 351: knob3_prev = knob_3_pos;
  5203  0E48  0021               	movlb	1	; select bank1
  5204  0E49  085A               	movf	(_knob_3_pos+1)^(0+128),w
  5205  0E4A  0022               	movlb	2	; select bank2
  5206  0E4B  00E7               	movwf	(_knob3_prev+1)^(0+256)
  5207  0E4C  0021               	movlb	1	; select bank1
  5208  0E4D  0859               	movf	_knob_3_pos^(0+128),w
  5209  0E4E  0022               	movlb	2	; select bank2
  5210  0E4F  00E6               	movwf	_knob3_prev^(0+256)
  5211                           
  5212                           ;main.c: 352: int i = map(knob3_prev, 0, 1023, 16, 0);
  5213  0E50  3000               	movlw	0
  5214  0E51  0020               	movlb	0	; select bank0
  5215  0E52  00E1               	movwf	map@out_max
  5216  0E53  3000               	movlw	0
  5217  0E54  00E2               	movwf	map@out_max+1
  5218  0E55  3000               	movlw	0
  5219  0E56  00E3               	movwf	map@out_max+2
  5220  0E57  3000               	movlw	0
  5221  0E58  00DE               	movwf	map@out_min
  5222  0E59  3080               	movlw	128
  5223  0E5A  00DF               	movwf	map@out_min+1
  5224  0E5B  3041               	movlw	65
  5225  0E5C  00E0               	movwf	map@out_min+2
  5226  0E5D  30C0               	movlw	192
  5227  0E5E  00DB               	movwf	map@in_max
  5228  0E5F  307F               	movlw	127
  5229  0E60  00DC               	movwf	map@in_max+1
  5230  0E61  3044               	movlw	68
  5231  0E62  00DD               	movwf	map@in_max+2
  5232  0E63  3000               	movlw	0
  5233  0E64  00D8               	movwf	map@in_min
  5234  0E65  3000               	movlw	0
  5235  0E66  00D9               	movwf	map@in_min+1
  5236  0E67  3000               	movlw	0
  5237  0E68  00DA               	movwf	map@in_min+2
  5238  0E69  0022               	movlb	2	; select bank2
  5239  0E6A  0867               	movf	(_knob3_prev+1)^(0+256),w
  5240  0E6B  0020               	movlb	0	; select bank0
  5241  0E6C  00A9               	movwf	___awtoft@c+1
  5242  0E6D  0022               	movlb	2	; select bank2
  5243  0E6E  0866               	movf	_knob3_prev^(0+256),w
  5244  0E6F  0020               	movlb	0	; select bank0
  5245  0E70  00A8               	movwf	___awtoft@c
  5246  0E71  3188  2007  3188   	fcall	___awtoft
  5247  0E74  0020               	movlb	0	; select bank0
  5248  0E75  0828               	movf	?___awtoft,w
  5249  0E76  00D5               	movwf	map@x
  5250  0E77  0829               	movf	?___awtoft+1,w
  5251  0E78  00D6               	movwf	map@x+1
  5252  0E79  082A               	movf	?___awtoft+2,w
  5253  0E7A  00D7               	movwf	map@x+2
  5254  0E7B  3187  276F  3188   	fcall	_map
  5255  0E7E  0020               	movlb	0	; select bank0
  5256  0E7F  0855               	movf	?_map,w
  5257  0E80  00E7               	movwf	___fttol@f1
  5258  0E81  0856               	movf	?_map+1,w
  5259  0E82  00E8               	movwf	___fttol@f1+1
  5260  0E83  0857               	movf	?_map+2,w
  5261  0E84  00E9               	movwf	___fttol@f1+2
  5262  0E85  3196  26B8  3188   	fcall	___fttol
  5263  0E88  0020               	movlb	0	; select bank0
  5264  0E89  0868               	movf	?___fttol+1,w
  5265  0E8A  0021               	movlb	1	; select bank1
  5266  0E8B  00C2               	movwf	(main@i_396+1)^(0+128)
  5267  0E8C  0020               	movlb	0	; select bank0
  5268  0E8D  0867               	movf	?___fttol,w
  5269  0E8E  0021               	movlb	1	; select bank1
  5270  0E8F  00C1               	movwf	main@i_396^(0+128)
  5271                           
  5272                           ;main.c: 353: CCPR4 = iB25k[i];
  5273  0E90  3541               	lslf	main@i_396^(0+128),w
  5274  0E91  3EA0               	addlw	(low (_iB25k| (0+1024)))& (0+255)
  5275  0E92  0086               	movwf	6
  5276  0E93  3004               	movlw	4	; select bank9/10
  5277  0E94  0087               	movwf	7
  5278  0E95  3F40               	moviw [0]fsr1
  5279  0E96  0026               	movlb	6	; select bank6
  5280  0E97  0098               	movwf	24	;volatile
  5281  0E98  3F41               	moviw [1]fsr1
  5282  0E99  0099               	movwf	25	;volatile
  5283                           
  5284                           ;main.c: 354: CCPR5 = B25k[i];
  5285  0E9A  0021               	movlb	1	; select bank1
  5286  0E9B  3541               	lslf	main@i_396^(0+128),w
  5287  0E9C  3E20               	addlw	(low (_B25k| (0+1024)))& (0+255)
  5288  0E9D  0086               	movwf	6
  5289  0E9E  3004               	movlw	4	; select bank8/9
  5290  0E9F  0087               	movwf	7
  5291  0EA0  3F40               	moviw [0]fsr1
  5292  0EA1  0026               	movlb	6	; select bank6
  5293  0EA2  009C               	movwf	28	;volatile
  5294  0EA3  3F41               	moviw [1]fsr1
  5295  0EA4  009D               	movwf	29	;volatile
  5296  0EA5                     l2894:	
  5297                           
  5298                           ;main.c: 355: }
  5299                           ;main.c: 365: if (knob_4_pos - knob4_prev >= 4 || knob_4_pos - knob4_prev <= -4) {
  5300  0EA5  0022               	movlb	2	; select bank2
  5301  0EA6  0968               	comf	_knob4_prev^(0+256),w
  5302  0EA7  0021               	movlb	1	; select bank1
  5303  0EA8  00AA               	movwf	??_main^(0+128)
  5304  0EA9  0022               	movlb	2	; select bank2
  5305  0EAA  0969               	comf	(_knob4_prev+1)^(0+256),w
  5306  0EAB  0021               	movlb	1	; select bank1
  5307  0EAC  00AB               	movwf	(??_main^(0+128)+1)
  5308  0EAD  0AAA               	incf	??_main^(0+128),f
  5309  0EAE  1903               	skipnz
  5310  0EAF  0AAB               	incf	(??_main^(0+128)+1),f
  5311  0EB0  085B               	movf	_knob_4_pos^(0+128),w
  5312  0EB1  072A               	addwf	??_main^(0+128),w
  5313  0EB2  00AC               	movwf	(??_main+2)^(0+128)
  5314  0EB3  085C               	movf	(_knob_4_pos+1)^(0+128),w
  5315  0EB4  3D2B               	addwfc	(??_main+1)^(0+128),w
  5316  0EB5  00AD               	movwf	(??_main+3)^(0+128)
  5317  0EB6  082D               	movf	(??_main+3)^(0+128),w
  5318  0EB7  3A80               	xorlw	128
  5319  0EB8  00AE               	movwf	(??_main+4)^(0+128)
  5320  0EB9  3080               	movlw	128
  5321  0EBA  022E               	subwf	(??_main+4)^(0+128),w
  5322  0EBB  1D03               	skipz
  5323  0EBC  2EBF               	goto	u3225
  5324  0EBD  3004               	movlw	4
  5325  0EBE  022C               	subwf	(??_main+2)^(0+128),w
  5326  0EBF                     u3225:	
  5327  0EBF  1803               	skipnc
  5328  0EC0  2EDD               	goto	l2898
  5329  0EC1  0022               	movlb	2	; select bank2
  5330  0EC2  0968               	comf	_knob4_prev^(0+256),w
  5331  0EC3  0021               	movlb	1	; select bank1
  5332  0EC4  00AA               	movwf	??_main^(0+128)
  5333  0EC5  0022               	movlb	2	; select bank2
  5334  0EC6  0969               	comf	(_knob4_prev+1)^(0+256),w
  5335  0EC7  0021               	movlb	1	; select bank1
  5336  0EC8  00AB               	movwf	(??_main^(0+128)+1)
  5337  0EC9  0AAA               	incf	??_main^(0+128),f
  5338  0ECA  1903               	skipnz
  5339  0ECB  0AAB               	incf	(??_main^(0+128)+1),f
  5340  0ECC  085B               	movf	_knob_4_pos^(0+128),w
  5341  0ECD  072A               	addwf	??_main^(0+128),w
  5342  0ECE  00AC               	movwf	(??_main+2)^(0+128)
  5343  0ECF  085C               	movf	(_knob_4_pos+1)^(0+128),w
  5344  0ED0  3D2B               	addwfc	(??_main+1)^(0+128),w
  5345  0ED1  00AD               	movwf	(??_main+3)^(0+128)
  5346  0ED2  082D               	movf	(??_main+3)^(0+128),w
  5347  0ED3  3A80               	xorlw	128
  5348  0ED4  00AE               	movwf	(??_main+4)^(0+128)
  5349  0ED5  307F               	movlw	127
  5350  0ED6  022E               	subwf	(??_main+4)^(0+128),w
  5351  0ED7  1D03               	skipz
  5352  0ED8  2EDB               	goto	u3235
  5353  0ED9  30FD               	movlw	253
  5354  0EDA  022C               	subwf	(??_main+2)^(0+128),w
  5355  0EDB                     u3235:	
  5356  0EDB  1803               	skipnc
  5357  0EDC  2F25               	goto	l2902
  5358  0EDD                     l2898:	
  5359                           
  5360                           ;main.c: 366: knob4_prev = knob_4_pos;
  5361  0EDD  0021               	movlb	1	; select bank1
  5362  0EDE  085C               	movf	(_knob_4_pos+1)^(0+128),w
  5363  0EDF  0022               	movlb	2	; select bank2
  5364  0EE0  00E9               	movwf	(_knob4_prev+1)^(0+256)
  5365  0EE1  0021               	movlb	1	; select bank1
  5366  0EE2  085B               	movf	_knob_4_pos^(0+128),w
  5367  0EE3  0022               	movlb	2	; select bank2
  5368  0EE4  00E8               	movwf	_knob4_prev^(0+256)
  5369                           
  5370                           ;main.c: 367: mod_delay_time = map(knob4_prev, 0, 1023, 60, 1000);
  5371  0EE5  3000               	movlw	0
  5372  0EE6  0020               	movlb	0	; select bank0
  5373  0EE7  00E1               	movwf	map@out_max
  5374  0EE8  307A               	movlw	122
  5375  0EE9  00E2               	movwf	map@out_max+1
  5376  0EEA  3044               	movlw	68
  5377  0EEB  00E3               	movwf	map@out_max+2
  5378  0EEC  3000               	movlw	0
  5379  0EED  00DE               	movwf	map@out_min
  5380  0EEE  3070               	movlw	112
  5381  0EEF  00DF               	movwf	map@out_min+1
  5382  0EF0  3042               	movlw	66
  5383  0EF1  00E0               	movwf	map@out_min+2
  5384  0EF2  30C0               	movlw	192
  5385  0EF3  00DB               	movwf	map@in_max
  5386  0EF4  307F               	movlw	127
  5387  0EF5  00DC               	movwf	map@in_max+1
  5388  0EF6  3044               	movlw	68
  5389  0EF7  00DD               	movwf	map@in_max+2
  5390  0EF8  3000               	movlw	0
  5391  0EF9  00D8               	movwf	map@in_min
  5392  0EFA  3000               	movlw	0
  5393  0EFB  00D9               	movwf	map@in_min+1
  5394  0EFC  3000               	movlw	0
  5395  0EFD  00DA               	movwf	map@in_min+2
  5396  0EFE  0022               	movlb	2	; select bank2
  5397  0EFF  0869               	movf	(_knob4_prev+1)^(0+256),w
  5398  0F00  0020               	movlb	0	; select bank0
  5399  0F01  00A9               	movwf	___awtoft@c+1
  5400  0F02  0022               	movlb	2	; select bank2
  5401  0F03  0868               	movf	_knob4_prev^(0+256),w
  5402  0F04  0020               	movlb	0	; select bank0
  5403  0F05  00A8               	movwf	___awtoft@c
  5404  0F06  3188  2007  3188   	fcall	___awtoft
  5405  0F09  0020               	movlb	0	; select bank0
  5406  0F0A  0828               	movf	?___awtoft,w
  5407  0F0B  00D5               	movwf	map@x
  5408  0F0C  0829               	movf	?___awtoft+1,w
  5409  0F0D  00D6               	movwf	map@x+1
  5410  0F0E  082A               	movf	?___awtoft+2,w
  5411  0F0F  00D7               	movwf	map@x+2
  5412  0F10  3187  276F  3188   	fcall	_map
  5413  0F13  0020               	movlb	0	; select bank0
  5414  0F14  0855               	movf	?_map,w
  5415  0F15  00E7               	movwf	___fttol@f1
  5416  0F16  0856               	movf	?_map+1,w
  5417  0F17  00E8               	movwf	___fttol@f1+1
  5418  0F18  0857               	movf	?_map+2,w
  5419  0F19  00E9               	movwf	___fttol@f1+2
  5420  0F1A  3196  26B8  3188   	fcall	___fttol
  5421  0F1D  0020               	movlb	0	; select bank0
  5422  0F1E  0868               	movf	?___fttol+1,w
  5423  0F1F  0022               	movlb	2	; select bank2
  5424  0F20  00ED               	movwf	(_mod_delay_time+1)^(0+256)
  5425  0F21  0020               	movlb	0	; select bank0
  5426  0F22  0867               	movf	?___fttol,w
  5427  0F23  0022               	movlb	2	; select bank2
  5428  0F24  00EC               	movwf	_mod_delay_time^(0+256)
  5429  0F25                     l2902:	
  5430                           
  5431                           ;main.c: 368: }
  5432                           ;main.c: 376: if (knob_5_pos - knob5_prev >= 4 || knob_5_pos - knob5_prev <= -4) {
  5433  0F25  0022               	movlb	2	; select bank2
  5434  0F26  096A               	comf	_knob5_prev^(0+256),w
  5435  0F27  0021               	movlb	1	; select bank1
  5436  0F28  00AA               	movwf	??_main^(0+128)
  5437  0F29  0022               	movlb	2	; select bank2
  5438  0F2A  096B               	comf	(_knob5_prev+1)^(0+256),w
  5439  0F2B  0021               	movlb	1	; select bank1
  5440  0F2C  00AB               	movwf	(??_main^(0+128)+1)
  5441  0F2D  0AAA               	incf	??_main^(0+128),f
  5442  0F2E  1903               	skipnz
  5443  0F2F  0AAB               	incf	(??_main^(0+128)+1),f
  5444  0F30  0879               	movf	_knob_5_pos,w
  5445  0F31  072A               	addwf	??_main^(0+128),w
  5446  0F32  00AC               	movwf	(??_main+2)^(0+128)
  5447  0F33  087A               	movf	_knob_5_pos+1,w
  5448  0F34  3D2B               	addwfc	(??_main+1)^(0+128),w
  5449  0F35  00AD               	movwf	(??_main+3)^(0+128)
  5450  0F36  082D               	movf	(??_main+3)^(0+128),w
  5451  0F37  3A80               	xorlw	128
  5452  0F38  00AE               	movwf	(??_main+4)^(0+128)
  5453  0F39  3080               	movlw	128
  5454  0F3A  022E               	subwf	(??_main+4)^(0+128),w
  5455  0F3B  1D03               	skipz
  5456  0F3C  2F3F               	goto	u3245
  5457  0F3D  3004               	movlw	4
  5458  0F3E  022C               	subwf	(??_main+2)^(0+128),w
  5459  0F3F                     u3245:	
  5460  0F3F  1803               	skipnc
  5461  0F40  2F5D               	goto	l2906
  5462  0F41  0022               	movlb	2	; select bank2
  5463  0F42  096A               	comf	_knob5_prev^(0+256),w
  5464  0F43  0021               	movlb	1	; select bank1
  5465  0F44  00AA               	movwf	??_main^(0+128)
  5466  0F45  0022               	movlb	2	; select bank2
  5467  0F46  096B               	comf	(_knob5_prev+1)^(0+256),w
  5468  0F47  0021               	movlb	1	; select bank1
  5469  0F48  00AB               	movwf	(??_main^(0+128)+1)
  5470  0F49  0AAA               	incf	??_main^(0+128),f
  5471  0F4A  1903               	skipnz
  5472  0F4B  0AAB               	incf	(??_main^(0+128)+1),f
  5473  0F4C  0879               	movf	_knob_5_pos,w
  5474  0F4D  072A               	addwf	??_main^(0+128),w
  5475  0F4E  00AC               	movwf	(??_main+2)^(0+128)
  5476  0F4F  087A               	movf	_knob_5_pos+1,w
  5477  0F50  3D2B               	addwfc	(??_main+1)^(0+128),w
  5478  0F51  00AD               	movwf	(??_main+3)^(0+128)
  5479  0F52  082D               	movf	(??_main+3)^(0+128),w
  5480  0F53  3A80               	xorlw	128
  5481  0F54  00AE               	movwf	(??_main+4)^(0+128)
  5482  0F55  307F               	movlw	127
  5483  0F56  022E               	subwf	(??_main+4)^(0+128),w
  5484  0F57  1D03               	skipz
  5485  0F58  2F5B               	goto	u3255
  5486  0F59  30FD               	movlw	253
  5487  0F5A  022C               	subwf	(??_main+2)^(0+128),w
  5488  0F5B                     u3255:	
  5489  0F5B  1803               	skipnc
  5490  0F5C  2F62               	goto	l251
  5491  0F5D                     l2906:	
  5492                           
  5493                           ;main.c: 377: knob5_prev = knob_5_pos;
  5494  0F5D  087A               	movf	_knob_5_pos+1,w
  5495  0F5E  0022               	movlb	2	; select bank2
  5496  0F5F  00EB               	movwf	(_knob5_prev+1)^(0+256)
  5497  0F60  0879               	movf	_knob_5_pos,w
  5498  0F61  00EA               	movwf	_knob5_prev^(0+256)
  5499  0F62                     l251:	
  5500                           
  5501                           ;main.c: 378: }
  5502                           ;main.c: 391: if (mod_timer >= mod_delay_time) {
  5503  0F62  0022               	movlb	2	; select bank2
  5504  0F63  086C               	movf	_mod_delay_time^(0+256),w
  5505  0F64  0021               	movlb	1	; select bank1
  5506  0F65  00AA               	movwf	??_main^(0+128)
  5507  0F66  0022               	movlb	2	; select bank2
  5508  0F67  086D               	movf	(_mod_delay_time+1)^(0+256),w
  5509  0F68  0021               	movlb	1	; select bank1
  5510  0F69  00AB               	movwf	(??_main^(0+128)+1)
  5511  0F6A  3000               	movlw	0
  5512  0F6B  1BAB               	btfsc	(??_main^(0+128)+1),7
  5513  0F6C  30FF               	movlw	255
  5514  0F6D  00AC               	movwf	(??_main^(0+128)+2)
  5515  0F6E  00AD               	movwf	(??_main^(0+128)+3)
  5516  0F6F  0022               	movlb	2	; select bank2
  5517  0F70  0837               	movf	(_mod_timer+3)^(0+256),w	;volatile
  5518  0F71  3A80               	xorlw	128
  5519  0F72  0021               	movlb	1	; select bank1
  5520  0F73  00AE               	movwf	(??_main+4)^(0+128)
  5521  0F74  082D               	movf	(??_main+3)^(0+128),w
  5522  0F75  3A80               	xorlw	128
  5523  0F76  022E               	subwf	(??_main+4)^(0+128),w
  5524  0F77  0022               	movlb	2	; select bank2
  5525  0F78  1D03               	skipz
  5526  0F79  2F8A               	goto	u3263
  5527  0F7A  0021               	movlb	1	; select bank1
  5528  0F7B  082C               	movf	(??_main+2)^(0+128),w
  5529  0F7C  0022               	movlb	2	; select bank2
  5530  0F7D  0236               	subwf	(_mod_timer+2)^(0+256),w	;volatile
  5531  0F7E  1D03               	skipz
  5532  0F7F  2F8A               	goto	u3263
  5533  0F80  0021               	movlb	1	; select bank1
  5534  0F81  082B               	movf	(??_main+1)^(0+128),w
  5535  0F82  0022               	movlb	2	; select bank2
  5536  0F83  0235               	subwf	(_mod_timer+1)^(0+256),w	;volatile
  5537  0F84  1D03               	skipz
  5538  0F85  2F8A               	goto	u3263
  5539  0F86  0021               	movlb	1	; select bank1
  5540  0F87  082A               	movf	??_main^(0+128),w
  5541  0F88  0022               	movlb	2	; select bank2
  5542  0F89  0234               	subwf	_mod_timer^(0+256),w	;volatile
  5543  0F8A                     u3263:	
  5544  0F8A  1C03               	skipc
  5545  0F8B  2FFE               	goto	L6
  5546                           
  5547                           ;main.c: 393: mod_counter = mod_counter + 1;
  5548  0F8C  0021               	movlb	1	; select bank1
  5549  0F8D  085D               	movf	_mod_counter^(0+128),w
  5550  0F8E  3E01               	addlw	1
  5551  0F8F  00DD               	movwf	_mod_counter^(0+128)
  5552  0F90  3000               	movlw	0
  5553  0F91  3D5E               	addwfc	(_mod_counter+1)^(0+128),w
  5554  0F92  00DE               	movwf	(_mod_counter+1)^(0+128)
  5555                           
  5556                           ;main.c: 394: mod_timer = 0;
  5557  0F93  3000               	movlw	0
  5558  0F94  0022               	movlb	2	; select bank2
  5559  0F95  00B7               	movwf	(_mod_timer+3)^(0+256)	;volatile
  5560  0F96  3000               	movlw	0
  5561  0F97  00B6               	movwf	(_mod_timer+2)^(0+256)	;volatile
  5562  0F98  3000               	movlw	0
  5563  0F99  00B5               	movwf	(_mod_timer+1)^(0+256)	;volatile
  5564  0F9A  3000               	movlw	0
  5565  0F9B  00B4               	movwf	_mod_timer^(0+256)	;volatile
  5566                           
  5567                           ;main.c: 396: if (bottom_push_state == 1 || bottom_push_state == 5) {
  5568  0F9C  0021               	movlb	1	; select bank1
  5569  0F9D  0367               	decf	_bottom_push_state^(0+128),w
  5570  0F9E  0468               	iorwf	(_bottom_push_state+1)^(0+128),w
  5571  0F9F  1903               	btfsc	3,2
  5572  0FA0  2FA6               	goto	l2916
  5573  0FA1  3005               	movlw	5
  5574  0FA2  0667               	xorwf	_bottom_push_state^(0+128),w
  5575  0FA3  0468               	iorwf	(_bottom_push_state+1)^(0+128),w
  5576  0FA4  1D03               	btfss	3,2
  5577  0FA5  2FAF               	goto	l2920
  5578  0FA6                     l2916:	
  5579                           
  5580                           ;main.c: 397: if (mod_counter >= 61) {
  5581  0FA6  085E               	movf	(_mod_counter+1)^(0+128),w
  5582  0FA7  3A80               	xorlw	128
  5583  0FA8  00AA               	movwf	??_main^(0+128)
  5584  0FA9  3080               	movlw	128
  5585  0FAA  022A               	subwf	??_main^(0+128),w
  5586  0FAB  1D03               	skipz
  5587  0FAC  2FB8               	goto	u3305
  5588  0FAD  303D               	movlw	61
  5589  0FAE  2FB7               	goto	L1
  5590  0FAF                     l2920:	
  5591                           ;main.c: 399: }
  5592                           ;main.c: 400: } else {
  5593                           
  5594                           ;main.c: 398: mod_counter = 0;
  5595                           
  5596                           
  5597                           ;main.c: 401: if (mod_counter > 31) {
  5598  0FAF  085E               	movf	(_mod_counter+1)^(0+128),w
  5599  0FB0  3A80               	xorlw	128
  5600  0FB1  00AA               	movwf	??_main^(0+128)
  5601  0FB2  3080               	movlw	128
  5602  0FB3  022A               	subwf	??_main^(0+128),w
  5603  0FB4  1D03               	skipz
  5604  0FB5  2FB8               	goto	u3305
  5605  0FB6  3020               	movlw	32
  5606  0FB7                     L1:	
  5607  0FB7  025D               	subwf	_mod_counter^(0+128),w
  5608  0FB8                     u3305:	
  5609  0FB8  1C03               	skipc
  5610  0FB9  2FBD               	goto	l2924
  5611                           
  5612                           ;main.c: 402: mod_counter = 0;
  5613  0FBA  0021               	movlb	1	; select bank1
  5614  0FBB  01DD               	clrf	_mod_counter^(0+128)
  5615  0FBC  01DE               	clrf	(_mod_counter+1)^(0+128)
  5616  0FBD                     l2924:	
  5617                           
  5618                           ;main.c: 403: }
  5619                           ;main.c: 404: }
  5620                           ;main.c: 407: signed int adjusted_pot_value = map(knob5_prev, 0, 1023, 1275, 0);
  5621  0FBD  3000               	movlw	0
  5622  0FBE  0020               	movlb	0	; select bank0
  5623  0FBF  00E1               	movwf	map@out_max
  5624  0FC0  3000               	movlw	0
  5625  0FC1  00E2               	movwf	map@out_max+1
  5626  0FC2  3000               	movlw	0
  5627  0FC3  00E3               	movwf	map@out_max+2
  5628  0FC4  3060               	movlw	96
  5629  0FC5  00DE               	movwf	map@out_min
  5630  0FC6  309F               	movlw	159
  5631  0FC7  00DF               	movwf	map@out_min+1
  5632  0FC8  3044               	movlw	68
  5633  0FC9  00E0               	movwf	map@out_min+2
  5634  0FCA  30C0               	movlw	192
  5635  0FCB  00DB               	movwf	map@in_max
  5636  0FCC  307F               	movlw	127
  5637  0FCD  00DC               	movwf	map@in_max+1
  5638  0FCE  3044               	movlw	68
  5639  0FCF  00DD               	movwf	map@in_max+2
  5640  0FD0  3000               	movlw	0
  5641  0FD1  00D8               	movwf	map@in_min
  5642  0FD2  3000               	movlw	0
  5643  0FD3  00D9               	movwf	map@in_min+1
  5644  0FD4  3000               	movlw	0
  5645  0FD5  00DA               	movwf	map@in_min+2
  5646  0FD6  0022               	movlb	2	; select bank2
  5647  0FD7  086B               	movf	(_knob5_prev+1)^(0+256),w
  5648  0FD8  0020               	movlb	0	; select bank0
  5649  0FD9  00A9               	movwf	___awtoft@c+1
  5650  0FDA  0022               	movlb	2	; select bank2
  5651  0FDB  086A               	movf	_knob5_prev^(0+256),w
  5652  0FDC  0020               	movlb	0	; select bank0
  5653  0FDD  00A8               	movwf	___awtoft@c
  5654  0FDE  3188  2007  3188   	fcall	___awtoft
  5655  0FE1  0020               	movlb	0	; select bank0
  5656  0FE2  0828               	movf	?___awtoft,w
  5657  0FE3  00D5               	movwf	map@x
  5658  0FE4  0829               	movf	?___awtoft+1,w
  5659  0FE5  00D6               	movwf	map@x+1
  5660  0FE6  082A               	movf	?___awtoft+2,w
  5661  0FE7  00D7               	movwf	map@x+2
  5662  0FE8  3187  276F  3188   	fcall	_map
  5663  0FEB  0020               	movlb	0	; select bank0
  5664  0FEC  0855               	movf	?_map,w
  5665  0FED  00E7               	movwf	___fttol@f1
  5666  0FEE  0856               	movf	?_map+1,w
  5667  0FEF  00E8               	movwf	___fttol@f1+1
  5668  0FF0  0857               	movf	?_map+2,w
  5669  0FF1  00E9               	movwf	___fttol@f1+2
  5670  0FF2  3196  26B8         	fcall	___fttol
  5671  0FF4  0020               	movlb	0	; select bank0
  5672  0FF5  0868               	movf	?___fttol+1,w
  5673  0FF6  0021               	movlb	1	; select bank1
  5674  0FF7  00BE               	movwf	(main@adjusted_pot_value+1)^(0+128)
  5675  0FF8  0020               	movlb	0	; select bank0
  5676  0FF9  0867               	movf	?___fttol,w
  5677  0FFA  0021               	movlb	1	; select bank1
  5678  0FFB  00BD               	movwf	main@adjusted_pot_value^(0+128)
  5679                           
  5680                           ;main.c: 408: switch (bottom_push_state) {
  5681  0FFC  3184  2C70         	goto	l2954
  5682  0FFE                     L6:	
  5683  0FFE                     L5:	
  5684  0FFE  3184  2CC6         	ljmp	l2960
  5685                           
  5686                           	psect	text1
  5687  1158                     __ptext1:	
  5688 ;; *************** function _wait_ms *****************
  5689 ;; Defined at:
  5690 ;;		line 23 in file "system.c"
  5691 ;; Parameters:    Size  Location     Type
  5692 ;;  time            2   12[BANK0 ] unsigned int 
  5693 ;; Auto vars:     Size  Location     Type
  5694 ;;		None
  5695 ;; Return value:  Size  Location     Type
  5696 ;;                  1    wreg      void 
  5697 ;; Registers used:
  5698 ;;		wreg, status,2, status,0, pclath, cstack
  5699 ;; Tracked objects:
  5700 ;;		On entry : 0/0
  5701 ;;		On exit  : 0/0
  5702 ;;		Unchanged: 0/0
  5703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  5704 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5707 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5708 ;;Total ram usage:        2 bytes
  5709 ;; Hardware stack levels used:    1
  5710 ;; Hardware stack levels required when called:    3
  5711 ;; This function calls:
  5712 ;;		___lmul
  5713 ;; This function is called by:
  5714 ;;		_main
  5715 ;; This function uses a non-reentrant model
  5716 ;;
  5717                           
  5718                           
  5719                           ;psect for function _wait_ms
  5720  1158                     _wait_ms:	
  5721                           
  5722                           ;system.c: 25: static long timel = 0;
  5723                           ;system.c: 26: timel = time * 1000l;
  5724                           
  5725                           ;incstack = 0
  5726                           ; Regs used in _wait_ms: [wreg+status,2+status,0+pclath+cstack]
  5727  1158  0020               	movlb	0	; select bank0
  5728  1159  082C               	movf	wait_ms@time,w
  5729  115A  00A0               	movwf	___lmul@multiplier
  5730  115B  082D               	movf	wait_ms@time+1,w
  5731  115C  00A1               	movwf	___lmul@multiplier+1
  5732  115D  01A2               	clrf	___lmul@multiplier+2
  5733  115E  01A3               	clrf	___lmul@multiplier+3
  5734  115F  3000               	movlw	0
  5735  1160  00A7               	movwf	___lmul@multiplicand+3
  5736  1161  3000               	movlw	0
  5737  1162  00A6               	movwf	___lmul@multiplicand+2
  5738  1163  3003               	movlw	3
  5739  1164  00A5               	movwf	___lmul@multiplicand+1
  5740  1165  30E8               	movlw	232
  5741  1166  00A4               	movwf	___lmul@multiplicand
  5742  1167  3191  2128  3191   	fcall	___lmul
  5743  116A  0020               	movlb	0	; select bank0
  5744  116B  0823               	movf	?___lmul+3,w
  5745  116C  0022               	movlb	2	; select bank2
  5746  116D  00CF               	movwf	(wait_ms@timel+3)^(0+256)
  5747  116E  0020               	movlb	0	; select bank0
  5748  116F  0822               	movf	?___lmul+2,w
  5749  1170  0022               	movlb	2	; select bank2
  5750  1171  00CE               	movwf	(wait_ms@timel+2)^(0+256)
  5751  1172  0020               	movlb	0	; select bank0
  5752  1173  0821               	movf	?___lmul+1,w
  5753  1174  0022               	movlb	2	; select bank2
  5754  1175  00CD               	movwf	(wait_ms@timel+1)^(0+256)
  5755  1176  0020               	movlb	0	; select bank0
  5756  1177  0820               	movf	?___lmul,w
  5757  1178  0022               	movlb	2	; select bank2
  5758  1179  00CC               	movwf	wait_ms@timel^(0+256)
  5759  117A                     l287:	
  5760                           ;system.c: 27: for( ; timel; timel--);
  5761                           
  5762  117A  084F               	movf	(wait_ms@timel+3)^(0+256),w
  5763  117B  044E               	iorwf	(wait_ms@timel+2)^(0+256),w
  5764  117C  044D               	iorwf	(wait_ms@timel+1)^(0+256),w
  5765  117D  044C               	iorwf	wait_ms@timel^(0+256),w
  5766  117E  1903               	btfsc	3,2
  5767  117F  0008               	return
  5768  1180  30FF               	movlw	255
  5769  1181  07CC               	addwf	wait_ms@timel^(0+256),f
  5770  1182  30FF               	movlw	255
  5771  1183  3DCD               	addwfc	(wait_ms@timel+1)^(0+256),f
  5772  1184  30FF               	movlw	255
  5773  1185  3DCE               	addwfc	(wait_ms@timel+2)^(0+256),f
  5774  1186  30FF               	movlw	255
  5775  1187  3DCF               	addwfc	(wait_ms@timel+3)^(0+256),f
  5776  1188  297A               	goto	l287
  5777  1189                     __end_of_wait_ms:	
  5778                           
  5779                           	psect	text2
  5780  1128                     __ptext2:	
  5781 ;; *************** function ___lmul *****************
  5782 ;; Defined at:
  5783 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\Umul32.c"
  5784 ;; Parameters:    Size  Location     Type
  5785 ;;  multiplier      4    0[BANK0 ] unsigned long 
  5786 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  5787 ;; Auto vars:     Size  Location     Type
  5788 ;;  product         4    8[BANK0 ] unsigned long 
  5789 ;; Return value:  Size  Location     Type
  5790 ;;                  4    0[BANK0 ] unsigned long 
  5791 ;; Registers used:
  5792 ;;		wreg, status,2, status,0
  5793 ;; Tracked objects:
  5794 ;;		On entry : 0/0
  5795 ;;		On exit  : 0/0
  5796 ;;		Unchanged: 0/0
  5797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  5798 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5799 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5801 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5802 ;;Total ram usage:       12 bytes
  5803 ;; Hardware stack levels used:    1
  5804 ;; Hardware stack levels required when called:    2
  5805 ;; This function calls:
  5806 ;;		Nothing
  5807 ;; This function is called by:
  5808 ;;		_wait_ms
  5809 ;; This function uses a non-reentrant model
  5810 ;;
  5811                           
  5812                           
  5813                           ;psect for function ___lmul
  5814  1128                     ___lmul:	
  5815                           
  5816                           ;incstack = 0
  5817                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  5818  1128  3000               	movlw	0
  5819  1129  0020               	movlb	0	; select bank0
  5820  112A  00AB               	movwf	___lmul@product+3
  5821  112B  3000               	movlw	0
  5822  112C  00AA               	movwf	___lmul@product+2
  5823  112D  3000               	movlw	0
  5824  112E  00A9               	movwf	___lmul@product+1
  5825  112F  3000               	movlw	0
  5826  1130  00A8               	movwf	___lmul@product
  5827  1131                     l2156:	
  5828  1131  1C20               	btfss	___lmul@multiplier,0
  5829  1132  293B               	goto	l2160
  5830  1133  0824               	movf	___lmul@multiplicand,w
  5831  1134  07A8               	addwf	___lmul@product,f
  5832  1135  0825               	movf	___lmul@multiplicand+1,w
  5833  1136  3DA9               	addwfc	___lmul@product+1,f
  5834  1137  0826               	movf	___lmul@multiplicand+2,w
  5835  1138  3DAA               	addwfc	___lmul@product+2,f
  5836  1139  0827               	movf	___lmul@multiplicand+3,w
  5837  113A  3DAB               	addwfc	___lmul@product+3,f
  5838  113B                     l2160:	
  5839  113B  3001               	movlw	1
  5840  113C                     u1895:	
  5841  113C  35A4               	lslf	___lmul@multiplicand,f
  5842  113D  0DA5               	rlf	___lmul@multiplicand+1,f
  5843  113E  0DA6               	rlf	___lmul@multiplicand+2,f
  5844  113F  0DA7               	rlf	___lmul@multiplicand+3,f
  5845  1140  0B89               	decfsz	9,f
  5846  1141  293C               	goto	u1895
  5847  1142  3001               	movlw	1
  5848  1143                     u1905:	
  5849  1143  36A3               	lsrf	___lmul@multiplier+3,f
  5850  1144  0CA2               	rrf	___lmul@multiplier+2,f
  5851  1145  0CA1               	rrf	___lmul@multiplier+1,f
  5852  1146  0CA0               	rrf	___lmul@multiplier,f
  5853  1147  0B89               	decfsz	9,f
  5854  1148  2943               	goto	u1905
  5855  1149  0823               	movf	___lmul@multiplier+3,w
  5856  114A  0422               	iorwf	___lmul@multiplier+2,w
  5857  114B  0421               	iorwf	___lmul@multiplier+1,w
  5858  114C  0420               	iorwf	___lmul@multiplier,w
  5859  114D  1D03               	skipz
  5860  114E  2931               	goto	l2156
  5861  114F  082B               	movf	___lmul@product+3,w
  5862  1150  00A3               	movwf	?___lmul+3
  5863  1151  082A               	movf	___lmul@product+2,w
  5864  1152  00A2               	movwf	?___lmul+2
  5865  1153  0829               	movf	___lmul@product+1,w
  5866  1154  00A1               	movwf	?___lmul+1
  5867  1155  0828               	movf	___lmul@product,w
  5868  1156  00A0               	movwf	?___lmul
  5869  1157  0008               	return
  5870  1158                     __end_of___lmul:	
  5871                           
  5872                           	psect	text3
  5873  0580                     __ptext3:	
  5874 ;; *************** function _set_subdivision *****************
  5875 ;; Defined at:
  5876 ;;		line 116 in file "user.c"
  5877 ;; Parameters:    Size  Location     Type
  5878 ;;  x               2    6[BANK1 ] int 
  5879 ;;  y               2    8[BANK1 ] int 
  5880 ;; Auto vars:     Size  Location     Type
  5881 ;;		None
  5882 ;; Return value:  Size  Location     Type
  5883 ;;                  2    6[BANK1 ] int 
  5884 ;; Registers used:
  5885 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5886 ;; Tracked objects:
  5887 ;;		On entry : 0/0
  5888 ;;		On exit  : 0/0
  5889 ;;		Unchanged: 0/0
  5890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  5891 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5894 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5895 ;;Total ram usage:        4 bytes
  5896 ;; Hardware stack levels used:    1
  5897 ;; Hardware stack levels required when called:    4
  5898 ;; This function calls:
  5899 ;;		___awtoft
  5900 ;;		___ftmul
  5901 ;;		___fttol
  5902 ;; This function is called by:
  5903 ;;		_main
  5904 ;; This function uses a non-reentrant model
  5905 ;;
  5906                           
  5907                           
  5908                           ;psect for function _set_subdivision
  5909  0580                     _set_subdivision:	
  5910                           
  5911                           ;user.c: 119: switch (y) {
  5912                           
  5913                           ;incstack = 0
  5914                           ; Regs used in _set_subdivision: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5915  0580  2E5E               	goto	l2548
  5916  0581                     l2536:	
  5917                           ;user.c: 120: case 1:
  5918                           
  5919                           
  5920                           ;user.c: 121: x = x * .75;
  5921  0581  0021               	movlb	1	; select bank1
  5922  0582  0827               	movf	(set_subdivision@x+1)^(0+128),w
  5923  0583  0020               	movlb	0	; select bank0
  5924  0584  00A9               	movwf	___awtoft@c+1
  5925  0585  0021               	movlb	1	; select bank1
  5926  0586  0826               	movf	set_subdivision@x^(0+128),w
  5927  0587  0020               	movlb	0	; select bank0
  5928  0588  00A8               	movwf	___awtoft@c
  5929  0589  3188  2007  3185   	fcall	___awtoft
  5930  058C  0020               	movlb	0	; select bank0
  5931  058D  0828               	movf	?___awtoft,w
  5932  058E  00B8               	movwf	___ftmul@f2
  5933  058F  0829               	movf	?___awtoft+1,w
  5934  0590  00B9               	movwf	___ftmul@f2+1
  5935  0591  082A               	movf	?___awtoft+2,w
  5936  0592  00BA               	movwf	___ftmul@f2+2
  5937  0593  3000               	movlw	0
  5938  0594  00B5               	movwf	___ftmul@f1
  5939  0595  3040               	movlw	64
  5940  0596  00B6               	movwf	___ftmul@f1+1
  5941  0597  303F               	movlw	63
  5942  0598  00B7               	movwf	___ftmul@f1+2
  5943  0599  3188  2029  3185   	fcall	___ftmul
  5944  059C  0020               	movlb	0	; select bank0
  5945  059D  0835               	movf	?___ftmul,w
  5946  059E  00E7               	movwf	___fttol@f1
  5947  059F  0836               	movf	?___ftmul+1,w
  5948  05A0  00E8               	movwf	___fttol@f1+1
  5949  05A1  0837               	movf	?___ftmul+2,w
  5950  05A2  00E9               	movwf	___fttol@f1+2
  5951  05A3  3196  26B8         	fcall	___fttol
  5952  05A5  0020               	movlb	0	; select bank0
  5953  05A6  0868               	movf	?___fttol+1,w
  5954  05A7  0021               	movlb	1	; select bank1
  5955  05A8  00A7               	movwf	(set_subdivision@x+1)^(0+128)
  5956  05A9  0020               	movlb	0	; select bank0
  5957  05AA  0867               	movf	?___fttol,w
  5958  05AB  0021               	movlb	1	; select bank1
  5959  05AC  00A6               	movwf	set_subdivision@x^(0+128)
  5960                           
  5961                           ;user.c: 122: break;
  5962  05AD  0008               	return
  5963  05AE                     l2538:	
  5964                           ;user.c: 123: case 2:
  5965                           
  5966                           
  5967                           ;user.c: 124: x = x * .66666;
  5968  05AE  0827               	movf	(set_subdivision@x+1)^(0+128),w
  5969  05AF  0020               	movlb	0	; select bank0
  5970  05B0  00A9               	movwf	___awtoft@c+1
  5971  05B1  0021               	movlb	1	; select bank1
  5972  05B2  0826               	movf	set_subdivision@x^(0+128),w
  5973  05B3  0020               	movlb	0	; select bank0
  5974  05B4  00A8               	movwf	___awtoft@c
  5975  05B5  3188  2007  3185   	fcall	___awtoft
  5976  05B8  0020               	movlb	0	; select bank0
  5977  05B9  0828               	movf	?___awtoft,w
  5978  05BA  00B8               	movwf	___ftmul@f2
  5979  05BB  0829               	movf	?___awtoft+1,w
  5980  05BC  00B9               	movwf	___ftmul@f2+1
  5981  05BD  082A               	movf	?___awtoft+2,w
  5982  05BE  00BA               	movwf	___ftmul@f2+2
  5983  05BF  30AA               	movlw	170
  5984  05C0  00B5               	movwf	___ftmul@f1
  5985  05C1  302A               	movlw	42
  5986  05C2  00B6               	movwf	___ftmul@f1+1
  5987  05C3  303F               	movlw	63
  5988  05C4  00B7               	movwf	___ftmul@f1+2
  5989  05C5  3188  2029  3185   	fcall	___ftmul
  5990  05C8  0020               	movlb	0	; select bank0
  5991  05C9  0835               	movf	?___ftmul,w
  5992  05CA  00E7               	movwf	___fttol@f1
  5993  05CB  0836               	movf	?___ftmul+1,w
  5994  05CC  00E8               	movwf	___fttol@f1+1
  5995  05CD  0837               	movf	?___ftmul+2,w
  5996  05CE  00E9               	movwf	___fttol@f1+2
  5997  05CF  3196  26B8         	fcall	___fttol
  5998  05D1  0020               	movlb	0	; select bank0
  5999  05D2  0868               	movf	?___fttol+1,w
  6000  05D3  0021               	movlb	1	; select bank1
  6001  05D4  00A7               	movwf	(set_subdivision@x+1)^(0+128)
  6002  05D5  0020               	movlb	0	; select bank0
  6003  05D6  0867               	movf	?___fttol,w
  6004  05D7  0021               	movlb	1	; select bank1
  6005  05D8  00A6               	movwf	set_subdivision@x^(0+128)
  6006                           
  6007                           ;user.c: 125: break;
  6008  05D9  0008               	return
  6009  05DA                     l2540:	
  6010                           ;user.c: 126: case 3:
  6011                           
  6012                           
  6013                           ;user.c: 127: x = x * .5;
  6014  05DA  0827               	movf	(set_subdivision@x+1)^(0+128),w
  6015  05DB  0020               	movlb	0	; select bank0
  6016  05DC  00A9               	movwf	___awtoft@c+1
  6017  05DD  0021               	movlb	1	; select bank1
  6018  05DE  0826               	movf	set_subdivision@x^(0+128),w
  6019  05DF  0020               	movlb	0	; select bank0
  6020  05E0  00A8               	movwf	___awtoft@c
  6021  05E1  3188  2007  3185   	fcall	___awtoft
  6022  05E4  0020               	movlb	0	; select bank0
  6023  05E5  0828               	movf	?___awtoft,w
  6024  05E6  00B8               	movwf	___ftmul@f2
  6025  05E7  0829               	movf	?___awtoft+1,w
  6026  05E8  00B9               	movwf	___ftmul@f2+1
  6027  05E9  082A               	movf	?___awtoft+2,w
  6028  05EA  00BA               	movwf	___ftmul@f2+2
  6029  05EB  3000               	movlw	0
  6030  05EC  00B5               	movwf	___ftmul@f1
  6031  05ED  3000               	movlw	0
  6032  05EE  00B6               	movwf	___ftmul@f1+1
  6033  05EF  303F               	movlw	63
  6034  05F0  00B7               	movwf	___ftmul@f1+2
  6035  05F1  3188  2029  3185   	fcall	___ftmul
  6036  05F4  0020               	movlb	0	; select bank0
  6037  05F5  0835               	movf	?___ftmul,w
  6038  05F6  00E7               	movwf	___fttol@f1
  6039  05F7  0836               	movf	?___ftmul+1,w
  6040  05F8  00E8               	movwf	___fttol@f1+1
  6041  05F9  0837               	movf	?___ftmul+2,w
  6042  05FA  00E9               	movwf	___fttol@f1+2
  6043  05FB  3196  26B8         	fcall	___fttol
  6044  05FD  0020               	movlb	0	; select bank0
  6045  05FE  0868               	movf	?___fttol+1,w
  6046  05FF  0021               	movlb	1	; select bank1
  6047  0600  00A7               	movwf	(set_subdivision@x+1)^(0+128)
  6048  0601  0020               	movlb	0	; select bank0
  6049  0602  0867               	movf	?___fttol,w
  6050  0603  0021               	movlb	1	; select bank1
  6051  0604  00A6               	movwf	set_subdivision@x^(0+128)
  6052                           
  6053                           ;user.c: 128: break;
  6054  0605  0008               	return
  6055  0606                     l2542:	
  6056                           ;user.c: 129: case 4:
  6057                           
  6058                           
  6059                           ;user.c: 130: x = x * .3333;
  6060  0606  0827               	movf	(set_subdivision@x+1)^(0+128),w
  6061  0607  0020               	movlb	0	; select bank0
  6062  0608  00A9               	movwf	___awtoft@c+1
  6063  0609  0021               	movlb	1	; select bank1
  6064  060A  0826               	movf	set_subdivision@x^(0+128),w
  6065  060B  0020               	movlb	0	; select bank0
  6066  060C  00A8               	movwf	___awtoft@c
  6067  060D  3188  2007  3185   	fcall	___awtoft
  6068  0610  0020               	movlb	0	; select bank0
  6069  0611  0828               	movf	?___awtoft,w
  6070  0612  00B8               	movwf	___ftmul@f2
  6071  0613  0829               	movf	?___awtoft+1,w
  6072  0614  00B9               	movwf	___ftmul@f2+1
  6073  0615  082A               	movf	?___awtoft+2,w
  6074  0616  00BA               	movwf	___ftmul@f2+2
  6075  0617  30A6               	movlw	166
  6076  0618  00B5               	movwf	___ftmul@f1
  6077  0619  30AA               	movlw	170
  6078  061A  00B6               	movwf	___ftmul@f1+1
  6079  061B  303E               	movlw	62
  6080  061C  00B7               	movwf	___ftmul@f1+2
  6081  061D  3188  2029  3185   	fcall	___ftmul
  6082  0620  0020               	movlb	0	; select bank0
  6083  0621  0835               	movf	?___ftmul,w
  6084  0622  00E7               	movwf	___fttol@f1
  6085  0623  0836               	movf	?___ftmul+1,w
  6086  0624  00E8               	movwf	___fttol@f1+1
  6087  0625  0837               	movf	?___ftmul+2,w
  6088  0626  00E9               	movwf	___fttol@f1+2
  6089  0627  3196  26B8         	fcall	___fttol
  6090  0629  0020               	movlb	0	; select bank0
  6091  062A  0868               	movf	?___fttol+1,w
  6092  062B  0021               	movlb	1	; select bank1
  6093  062C  00A7               	movwf	(set_subdivision@x+1)^(0+128)
  6094  062D  0020               	movlb	0	; select bank0
  6095  062E  0867               	movf	?___fttol,w
  6096  062F  0021               	movlb	1	; select bank1
  6097  0630  00A6               	movwf	set_subdivision@x^(0+128)
  6098                           
  6099                           ;user.c: 131: break;
  6100  0631  0008               	return
  6101  0632                     l2544:	
  6102                           ;user.c: 132: case 5:
  6103                           
  6104                           
  6105                           ;user.c: 133: x = x * .25;
  6106  0632  0827               	movf	(set_subdivision@x+1)^(0+128),w
  6107  0633  0020               	movlb	0	; select bank0
  6108  0634  00A9               	movwf	___awtoft@c+1
  6109  0635  0021               	movlb	1	; select bank1
  6110  0636  0826               	movf	set_subdivision@x^(0+128),w
  6111  0637  0020               	movlb	0	; select bank0
  6112  0638  00A8               	movwf	___awtoft@c
  6113  0639  3188  2007  3185   	fcall	___awtoft
  6114  063C  0020               	movlb	0	; select bank0
  6115  063D  0828               	movf	?___awtoft,w
  6116  063E  00B8               	movwf	___ftmul@f2
  6117  063F  0829               	movf	?___awtoft+1,w
  6118  0640  00B9               	movwf	___ftmul@f2+1
  6119  0641  082A               	movf	?___awtoft+2,w
  6120  0642  00BA               	movwf	___ftmul@f2+2
  6121  0643  3000               	movlw	0
  6122  0644  00B5               	movwf	___ftmul@f1
  6123  0645  3080               	movlw	128
  6124  0646  00B6               	movwf	___ftmul@f1+1
  6125  0647  303E               	movlw	62
  6126  0648  00B7               	movwf	___ftmul@f1+2
  6127  0649  3188  2029  3185   	fcall	___ftmul
  6128  064C  0020               	movlb	0	; select bank0
  6129  064D  0835               	movf	?___ftmul,w
  6130  064E  00E7               	movwf	___fttol@f1
  6131  064F  0836               	movf	?___ftmul+1,w
  6132  0650  00E8               	movwf	___fttol@f1+1
  6133  0651  0837               	movf	?___ftmul+2,w
  6134  0652  00E9               	movwf	___fttol@f1+2
  6135  0653  3196  26B8         	fcall	___fttol
  6136  0655  0020               	movlb	0	; select bank0
  6137  0656  0868               	movf	?___fttol+1,w
  6138  0657  0021               	movlb	1	; select bank1
  6139  0658  00A7               	movwf	(set_subdivision@x+1)^(0+128)
  6140  0659  0020               	movlb	0	; select bank0
  6141  065A  0867               	movf	?___fttol,w
  6142  065B  0021               	movlb	1	; select bank1
  6143  065C  00A6               	movwf	set_subdivision@x^(0+128)
  6144                           
  6145                           ;user.c: 138: }
  6146                           
  6147                           ;user.c: 137: break;
  6148                           
  6149                           ;user.c: 135: case 6:
  6150                           
  6151                           ;user.c: 134: break;
  6152  065D  0008               	return
  6153  065E                     l2548:	
  6154                           
  6155                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6156                           ; Switch size 1, requested type "space"
  6157                           ; Number of cases is 1, Range of values is 0 to 0
  6158                           ; switch strategies available:
  6159                           ; Name         Instructions Cycles
  6160                           ; simple_byte            4     3 (average)
  6161                           ; direct_byte            8     6 (fixed)
  6162                           ; jumptable            260     6 (fixed)
  6163                           ;	Chosen strategy is simple_byte
  6164  065E  0021               	movlb	1	; select bank1
  6165  065F  0829               	movf	(set_subdivision@y+1)^(0+128),w
  6166  0660  3A00               	xorlw	0	; case 0
  6167  0661  1903               	skipnz
  6168  0662  2E64               	goto	l3088
  6169  0663  2E78               	goto	l391
  6170  0664                     l3088:	
  6171                           
  6172                           ; Switch size 1, requested type "space"
  6173                           ; Number of cases is 6, Range of values is 1 to 6
  6174                           ; switch strategies available:
  6175                           ; Name         Instructions Cycles
  6176                           ; simple_byte           19    10 (average)
  6177                           ; direct_byte           21     9 (fixed)
  6178                           ; jumptable            263     9 (fixed)
  6179                           ;	Chosen strategy is simple_byte
  6180  0664  0828               	movf	set_subdivision@y^(0+128),w
  6181  0665  3A01               	xorlw	1	; case 1
  6182  0666  1903               	skipnz
  6183  0667  2D81               	goto	l2536
  6184  0668  3A03               	xorlw	3	; case 2
  6185  0669  1903               	skipnz
  6186  066A  2DAE               	goto	l2538
  6187  066B  3A01               	xorlw	1	; case 3
  6188  066C  1903               	skipnz
  6189  066D  2DDA               	goto	l2540
  6190  066E  3A07               	xorlw	7	; case 4
  6191  066F  1903               	skipnz
  6192  0670  2E06               	goto	l2542
  6193  0671  3A01               	xorlw	1	; case 5
  6194  0672  1903               	skipnz
  6195  0673  2E32               	goto	l2544
  6196  0674  3A03               	xorlw	3	; case 6
  6197  0675  1903               	skipnz
  6198  0676  2E78               	goto	l391
  6199  0677  2E78               	goto	l391
  6200  0678                     l391:	
  6201                           
  6202                           ;user.c: 139: return x;
  6203  0678  0008               	return
  6204  0679                     __end_of_set_subdivision:	
  6205                           
  6206                           	psect	text4
  6207  16B8                     __ptext4:	
  6208 ;; *************** function ___fttol *****************
  6209 ;; Defined at:
  6210 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\fttol.c"
  6211 ;; Parameters:    Size  Location     Type
  6212 ;;  f1              3   71[BANK0 ] float 
  6213 ;; Auto vars:     Size  Location     Type
  6214 ;;  lval            4    1[BANK1 ] unsigned long 
  6215 ;;  exp1            1    5[BANK1 ] unsigned char 
  6216 ;;  sign1           1    0[BANK1 ] unsigned char 
  6217 ;; Return value:  Size  Location     Type
  6218 ;;                  4   71[BANK0 ] long 
  6219 ;; Registers used:
  6220 ;;		wreg, status,2, status,0
  6221 ;; Tracked objects:
  6222 ;;		On entry : 0/0
  6223 ;;		On exit  : 0/0
  6224 ;;		Unchanged: 0/0
  6225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6226 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6227 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6228 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6229 ;;      Totals:         0       8       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6230 ;;Total ram usage:       14 bytes
  6231 ;; Hardware stack levels used:    1
  6232 ;; Hardware stack levels required when called:    2
  6233 ;; This function calls:
  6234 ;;		Nothing
  6235 ;; This function is called by:
  6236 ;;		_main
  6237 ;;		_set_subdivision
  6238 ;; This function uses a non-reentrant model
  6239 ;;
  6240                           
  6241                           
  6242                           ;psect for function ___fttol
  6243  16B8                     ___fttol:	
  6244                           
  6245                           ;incstack = 0
  6246                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  6247  16B8  0020               	movlb	0	; select bank0
  6248  16B9  0867               	movf	___fttol@f1,w
  6249  16BA  00EB               	movwf	??___fttol
  6250  16BB  0868               	movf	___fttol@f1+1,w
  6251  16BC  00EC               	movwf	??___fttol+1
  6252  16BD  0869               	movf	___fttol@f1+2,w
  6253  16BE  00ED               	movwf	??___fttol+2
  6254  16BF  1003               	clrc
  6255  16C0  0D6C               	rlf	??___fttol+1,w
  6256  16C1  0D6D               	rlf	??___fttol+2,w
  6257  16C2  00EE               	movwf	??___fttol+3
  6258  16C3  086E               	movf	??___fttol+3,w
  6259  16C4  0021               	movlb	1	; select bank1
  6260  16C5  00A5               	movwf	___fttol@exp1^(0+128)
  6261  16C6  0825               	movf	___fttol@exp1^(0+128),w
  6262  16C7  1D03               	btfss	3,2
  6263  16C8  2ED3               	goto	l2396
  6264  16C9  3000               	movlw	0
  6265  16CA  0020               	movlb	0	; select bank0
  6266  16CB  00EA               	movwf	?___fttol+3
  6267  16CC  3000               	movlw	0
  6268  16CD  00E9               	movwf	?___fttol+2
  6269  16CE  3000               	movlw	0
  6270  16CF  00E8               	movwf	?___fttol+1
  6271  16D0  3000               	movlw	0
  6272  16D1  00E7               	movwf	?___fttol
  6273  16D2  0008               	return
  6274  16D3                     l2396:	
  6275  16D3  0020               	movlb	0	; select bank0
  6276  16D4  0867               	movf	___fttol@f1,w
  6277  16D5  00EB               	movwf	??___fttol
  6278  16D6  0868               	movf	___fttol@f1+1,w
  6279  16D7  00EC               	movwf	??___fttol+1
  6280  16D8  0869               	movf	___fttol@f1+2,w
  6281  16D9  00ED               	movwf	??___fttol+2
  6282  16DA  3017               	movlw	23
  6283  16DB                     u2485:	
  6284  16DB  36ED               	lsrf	??___fttol+2,f
  6285  16DC  0CEC               	rrf	??___fttol+1,f
  6286  16DD  0CEB               	rrf	??___fttol,f
  6287  16DE  0B89               	decfsz	9,f
  6288  16DF  2EDB               	goto	u2485
  6289  16E0  086B               	movf	??___fttol,w
  6290  16E1  00EE               	movwf	??___fttol+3
  6291  16E2  086E               	movf	??___fttol+3,w
  6292  16E3  0021               	movlb	1	; select bank1
  6293  16E4  00A0               	movwf	___fttol@sign1^(0+128)
  6294  16E5  0020               	movlb	0	; select bank0
  6295  16E6  17E8               	bsf	___fttol@f1+1,7
  6296  16E7  30FF               	movlw	255
  6297  16E8  05E7               	andwf	___fttol@f1,f
  6298  16E9  30FF               	movlw	255
  6299  16EA  05E8               	andwf	___fttol@f1+1,f
  6300  16EB  3000               	movlw	0
  6301  16EC  05E9               	andwf	___fttol@f1+2,f
  6302  16ED  0867               	movf	___fttol@f1,w
  6303  16EE  0021               	movlb	1	; select bank1
  6304  16EF  00A1               	movwf	___fttol@lval^(0+128)
  6305  16F0  0020               	movlb	0	; select bank0
  6306  16F1  0868               	movf	___fttol@f1+1,w
  6307  16F2  0021               	movlb	1	; select bank1
  6308  16F3  00A2               	movwf	(___fttol@lval^(0+128)+1)
  6309  16F4  0020               	movlb	0	; select bank0
  6310  16F5  0869               	movf	___fttol@f1+2,w
  6311  16F6  0021               	movlb	1	; select bank1
  6312  16F7  00A3               	movwf	(___fttol@lval^(0+128)+2)
  6313  16F8  01A4               	clrf	(___fttol@lval^(0+128)+3)
  6314  16F9  308E               	movlw	142
  6315  16FA  02A5               	subwf	___fttol@exp1^(0+128),f
  6316  16FB  1FA5               	btfss	___fttol@exp1^(0+128),7
  6317  16FC  2F1D               	goto	l2416
  6318  16FD  0825               	movf	___fttol@exp1^(0+128),w
  6319  16FE  3A80               	xorlw	128
  6320  16FF  3E8F               	addlw	143
  6321  1700  1803               	skipnc
  6322  1701  2F0C               	goto	l2414
  6323  1702  3000               	movlw	0
  6324  1703  0020               	movlb	0	; select bank0
  6325  1704  00EA               	movwf	?___fttol+3
  6326  1705  3000               	movlw	0
  6327  1706  00E9               	movwf	?___fttol+2
  6328  1707  3000               	movlw	0
  6329  1708  00E8               	movwf	?___fttol+1
  6330  1709  3000               	movlw	0
  6331  170A  00E7               	movwf	?___fttol
  6332  170B  0008               	return
  6333  170C                     l2414:	
  6334  170C  3001               	movlw	1
  6335  170D                     u2515:	
  6336  170D  0021               	movlb	1	; select bank1
  6337  170E  36A4               	lsrf	(___fttol@lval+3)^(0+128),f
  6338  170F  0CA3               	rrf	(___fttol@lval+2)^(0+128),f
  6339  1710  0CA2               	rrf	(___fttol@lval+1)^(0+128),f
  6340  1711  0CA1               	rrf	___fttol@lval^(0+128),f
  6341  1712  0B89               	decfsz	9,f
  6342  1713  2F0D               	goto	u2515
  6343  1714  3001               	movlw	1
  6344  1715  0020               	movlb	0	; select bank0
  6345  1716  00EB               	movwf	??___fttol
  6346  1717  086B               	movf	??___fttol,w
  6347  1718  0021               	movlb	1	; select bank1
  6348  1719  07A5               	addwf	___fttol@exp1^(0+128),f
  6349  171A  1903               	btfsc	3,2
  6350  171B  2F39               	goto	l2424
  6351  171C  2F0C               	goto	l2414
  6352  171D                     l2416:	
  6353  171D  3018               	movlw	24
  6354  171E  0225               	subwf	___fttol@exp1^(0+128),w
  6355  171F  1C03               	skipc
  6356  1720  2F35               	goto	l726
  6357  1721  3000               	movlw	0
  6358  1722  0020               	movlb	0	; select bank0
  6359  1723  00EA               	movwf	?___fttol+3
  6360  1724  3000               	movlw	0
  6361  1725  00E9               	movwf	?___fttol+2
  6362  1726  3000               	movlw	0
  6363  1727  00E8               	movwf	?___fttol+1
  6364  1728  3000               	movlw	0
  6365  1729  00E7               	movwf	?___fttol
  6366  172A  0008               	return
  6367  172B                     l2422:	
  6368  172B  3001               	movlw	1
  6369  172C                     u2545:	
  6370  172C  0021               	movlb	1	; select bank1
  6371  172D  35A1               	lslf	___fttol@lval^(0+128),f
  6372  172E  0DA2               	rlf	(___fttol@lval+1)^(0+128),f
  6373  172F  0DA3               	rlf	(___fttol@lval+2)^(0+128),f
  6374  1730  0DA4               	rlf	(___fttol@lval+3)^(0+128),f
  6375  1731  0B89               	decfsz	9,f
  6376  1732  2F2C               	goto	u2545
  6377  1733  3001               	movlw	1
  6378  1734  02A5               	subwf	___fttol@exp1^(0+128),f
  6379  1735                     l726:	
  6380  1735  0021               	movlb	1	; select bank1
  6381  1736  0825               	movf	___fttol@exp1^(0+128),w
  6382  1737  1D03               	btfss	3,2
  6383  1738  2F2B               	goto	l2422
  6384  1739                     l2424:	
  6385  1739  0820               	movf	___fttol@sign1^(0+128),w
  6386  173A  1903               	btfsc	3,2
  6387  173B  2F47               	goto	l2428
  6388  173C  09A1               	comf	___fttol@lval^(0+128),f
  6389  173D  09A2               	comf	(___fttol@lval+1)^(0+128),f
  6390  173E  09A3               	comf	(___fttol@lval+2)^(0+128),f
  6391  173F  09A4               	comf	(___fttol@lval+3)^(0+128),f
  6392  1740  0AA1               	incf	___fttol@lval^(0+128),f
  6393  1741  1903               	skipnz
  6394  1742  0AA2               	incf	(___fttol@lval+1)^(0+128),f
  6395  1743  1903               	skipnz
  6396  1744  0AA3               	incf	(___fttol@lval+2)^(0+128),f
  6397  1745  1903               	skipnz
  6398  1746  0AA4               	incf	(___fttol@lval+3)^(0+128),f
  6399  1747                     l2428:	
  6400  1747  0824               	movf	(___fttol@lval+3)^(0+128),w
  6401  1748  0020               	movlb	0	; select bank0
  6402  1749  00EA               	movwf	?___fttol+3
  6403  174A  0021               	movlb	1	; select bank1
  6404  174B  0823               	movf	(___fttol@lval+2)^(0+128),w
  6405  174C  0020               	movlb	0	; select bank0
  6406  174D  00E9               	movwf	?___fttol+2
  6407  174E  0021               	movlb	1	; select bank1
  6408  174F  0822               	movf	(___fttol@lval+1)^(0+128),w
  6409  1750  0020               	movlb	0	; select bank0
  6410  1751  00E8               	movwf	?___fttol+1
  6411  1752  0021               	movlb	1	; select bank1
  6412  1753  0821               	movf	___fttol@lval^(0+128),w
  6413  1754  0020               	movlb	0	; select bank0
  6414  1755  00E7               	movwf	?___fttol
  6415  1756  0008               	return
  6416  1757                     __end_of___fttol:	
  6417                           
  6418                           	psect	text5
  6419  0807                     __ptext5:	
  6420 ;; *************** function ___awtoft *****************
  6421 ;; Defined at:
  6422 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awtoft.c"
  6423 ;; Parameters:    Size  Location     Type
  6424 ;;  c               2    8[BANK0 ] int 
  6425 ;; Auto vars:     Size  Location     Type
  6426 ;;  sign            1   13[BANK0 ] unsigned char 
  6427 ;; Return value:  Size  Location     Type
  6428 ;;                  3    8[BANK0 ] float 
  6429 ;; Registers used:
  6430 ;;		wreg, status,2, status,0, pclath, cstack
  6431 ;; Tracked objects:
  6432 ;;		On entry : 0/0
  6433 ;;		On exit  : 0/0
  6434 ;;		Unchanged: 0/0
  6435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6436 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6437 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6438 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6439 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6440 ;;Total ram usage:        6 bytes
  6441 ;; Hardware stack levels used:    1
  6442 ;; Hardware stack levels required when called:    3
  6443 ;; This function calls:
  6444 ;;		___ftpack
  6445 ;; This function is called by:
  6446 ;;		_main
  6447 ;;		_set_subdivision
  6448 ;; This function uses a non-reentrant model
  6449 ;;
  6450                           
  6451                           
  6452                           ;psect for function ___awtoft
  6453  0807                     ___awtoft:	
  6454                           
  6455                           ;incstack = 0
  6456                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  6457  0807  0020               	movlb	0	; select bank0
  6458  0808  01AD               	clrf	___awtoft@sign
  6459  0809  1FA9               	btfss	___awtoft@c+1,7
  6460  080A  2812               	goto	l2216
  6461  080B  09A8               	comf	___awtoft@c,f
  6462  080C  09A9               	comf	___awtoft@c+1,f
  6463  080D  0AA8               	incf	___awtoft@c,f
  6464  080E  1903               	skipnz
  6465  080F  0AA9               	incf	___awtoft@c+1,f
  6466  0810  01AD               	clrf	___awtoft@sign
  6467  0811  0AAD               	incf	___awtoft@sign,f
  6468  0812                     l2216:	
  6469  0812  0828               	movf	___awtoft@c,w
  6470  0813  00A0               	movwf	___ftpack@arg
  6471  0814  0829               	movf	___awtoft@c+1,w
  6472  0815  00A1               	movwf	___ftpack@arg+1
  6473  0816  01A2               	clrf	___ftpack@arg+2
  6474  0817  308E               	movlw	142
  6475  0818  00AB               	movwf	??___awtoft
  6476  0819  082B               	movf	??___awtoft,w
  6477  081A  00A3               	movwf	___ftpack@exp
  6478  081B  082D               	movf	___awtoft@sign,w
  6479  081C  00AC               	movwf	??___awtoft+1
  6480  081D  082C               	movf	??___awtoft+1,w
  6481  081E  00A4               	movwf	___ftpack@sign
  6482  081F  3195  2566         	fcall	___ftpack
  6483  0821  0020               	movlb	0	; select bank0
  6484  0822  0820               	movf	?___ftpack,w
  6485  0823  00A8               	movwf	?___awtoft
  6486  0824  0821               	movf	?___ftpack+1,w
  6487  0825  00A9               	movwf	?___awtoft+1
  6488  0826  0822               	movf	?___ftpack+2,w
  6489  0827  00AA               	movwf	?___awtoft+2
  6490  0828  0008               	return
  6491  0829                     __end_of___awtoft:	
  6492                           
  6493                           	psect	text6
  6494  1503                     __ptext6:	
  6495 ;; *************** function _set_leds_top *****************
  6496 ;; Defined at:
  6497 ;;		line 142 in file "user.c"
  6498 ;; Parameters:    Size  Location     Type
  6499 ;;  x               2    0[BANK0 ] int 
  6500 ;;  ledState        2    2[BANK0 ] int 
  6501 ;; Auto vars:     Size  Location     Type
  6502 ;;		None
  6503 ;; Return value:  Size  Location     Type
  6504 ;;                  1    wreg      void 
  6505 ;; Registers used:
  6506 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6507 ;; Tracked objects:
  6508 ;;		On entry : 0/0
  6509 ;;		On exit  : 0/0
  6510 ;;		Unchanged: 0/0
  6511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6512 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6515 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6516 ;;Total ram usage:        4 bytes
  6517 ;; Hardware stack levels used:    1
  6518 ;; Hardware stack levels required when called:    2
  6519 ;; This function calls:
  6520 ;;		Nothing
  6521 ;; This function is called by:
  6522 ;;		_main
  6523 ;; This function uses a non-reentrant model
  6524 ;;
  6525                           
  6526                           
  6527                           ;psect for function _set_leds_top
  6528  1503                     _set_leds_top:	
  6529                           
  6530                           ;user.c: 143: switch (x) {
  6531                           
  6532                           ;incstack = 0
  6533                           ; Regs used in _set_leds_top: [wreg-fsr0h+status,2+status,0]
  6534  1503  2D4B               	goto	l2466
  6535  1504                     l2434:	
  6536                           ;user.c: 144: case 1:
  6537                           
  6538                           
  6539                           ;user.c: 145: LATFbits.LATF0 = ledState;
  6540  1504  0020               	movlb	0	; select bank0
  6541  1505  0C22               	rrf	set_leds_top@ledState,w
  6542  1506  0027               	movlb	7	; select bank7
  6543  1507  1C03               	skipc
  6544  1508  100C               	bcf	12,0	;volatile
  6545  1509  1803               	skipnc
  6546  150A  140C               	bsf	12,0	;volatile
  6547                           
  6548                           ;user.c: 146: LATFbits.LATF1 = 0;
  6549  150B  108C               	bcf	12,1	;volatile
  6550                           
  6551                           ;user.c: 147: LATFbits.LATF2 = 0;
  6552  150C  110C               	bcf	12,2	;volatile
  6553                           
  6554                           ;user.c: 148: LATFbits.LATF3 = 0;
  6555  150D  118C               	bcf	12,3	;volatile
  6556                           
  6557                           ;user.c: 149: LATFbits.LATF4 = 0;
  6558  150E  120C               	bcf	12,4	;volatile
  6559                           
  6560                           ;user.c: 150: break;
  6561  150F  0008               	return
  6562  1510                     l403:	
  6563                           ;user.c: 151: case 2:
  6564                           
  6565                           
  6566                           ;user.c: 152: LATFbits.LATF0 = 0;
  6567  1510  0027               	movlb	7	; select bank7
  6568  1511  100C               	bcf	12,0	;volatile
  6569                           
  6570                           ;user.c: 153: LATFbits.LATF1 = ledState;
  6571  1512  0020               	movlb	0	; select bank0
  6572  1513  0C22               	rrf	set_leds_top@ledState,w
  6573  1514  0027               	movlb	7	; select bank7
  6574  1515  1C03               	skipc
  6575  1516  108C               	bcf	12,1	;volatile
  6576  1517  1803               	skipnc
  6577  1518  148C               	bsf	12,1	;volatile
  6578                           
  6579                           ;user.c: 154: LATFbits.LATF2 = 0;
  6580  1519  110C               	bcf	12,2	;volatile
  6581                           
  6582                           ;user.c: 155: LATFbits.LATF3 = 0;
  6583  151A  118C               	bcf	12,3	;volatile
  6584                           
  6585                           ;user.c: 156: LATFbits.LATF4 = 0;
  6586  151B  120C               	bcf	12,4	;volatile
  6587                           
  6588                           ;user.c: 157: break;
  6589  151C  0008               	return
  6590  151D                     l404:	
  6591                           ;user.c: 158: case 3:
  6592                           
  6593                           
  6594                           ;user.c: 159: LATFbits.LATF0 = 0;
  6595  151D  0027               	movlb	7	; select bank7
  6596  151E  100C               	bcf	12,0	;volatile
  6597                           
  6598                           ;user.c: 160: LATFbits.LATF1 = 0;
  6599  151F  108C               	bcf	12,1	;volatile
  6600                           
  6601                           ;user.c: 161: LATFbits.LATF2 = ledState;
  6602  1520  0020               	movlb	0	; select bank0
  6603  1521  0C22               	rrf	set_leds_top@ledState,w
  6604  1522  0027               	movlb	7	; select bank7
  6605  1523  1C03               	skipc
  6606  1524  110C               	bcf	12,2	;volatile
  6607  1525  1803               	skipnc
  6608  1526  150C               	bsf	12,2	;volatile
  6609                           
  6610                           ;user.c: 162: LATFbits.LATF3 = 0;
  6611  1527  118C               	bcf	12,3	;volatile
  6612                           
  6613                           ;user.c: 163: LATFbits.LATF4 = 0;
  6614  1528  120C               	bcf	12,4	;volatile
  6615                           
  6616                           ;user.c: 164: break;
  6617  1529  0008               	return
  6618  152A                     l405:	
  6619                           ;user.c: 165: case 4:
  6620                           
  6621                           
  6622                           ;user.c: 166: LATFbits.LATF0 = 0;
  6623  152A  0027               	movlb	7	; select bank7
  6624  152B  100C               	bcf	12,0	;volatile
  6625                           
  6626                           ;user.c: 167: LATFbits.LATF1 = 0;
  6627  152C  108C               	bcf	12,1	;volatile
  6628                           
  6629                           ;user.c: 168: LATFbits.LATF2 = 0;
  6630  152D  110C               	bcf	12,2	;volatile
  6631                           
  6632                           ;user.c: 169: LATFbits.LATF3 = ledState;
  6633  152E  0020               	movlb	0	; select bank0
  6634  152F  0C22               	rrf	set_leds_top@ledState,w
  6635  1530  0027               	movlb	7	; select bank7
  6636  1531  1C03               	skipc
  6637  1532  118C               	bcf	12,3	;volatile
  6638  1533  1803               	skipnc
  6639  1534  158C               	bsf	12,3	;volatile
  6640                           
  6641                           ;user.c: 170: LATFbits.LATF4 = 0;
  6642  1535  120C               	bcf	12,4	;volatile
  6643                           
  6644                           ;user.c: 171: break;
  6645  1536  0008               	return
  6646  1537                     l406:	
  6647                           ;user.c: 172: case 5:
  6648                           
  6649                           
  6650                           ;user.c: 173: LATFbits.LATF0 = 0;
  6651  1537  0027               	movlb	7	; select bank7
  6652  1538  100C               	bcf	12,0	;volatile
  6653                           
  6654                           ;user.c: 174: LATFbits.LATF1 = 0;
  6655  1539  108C               	bcf	12,1	;volatile
  6656                           
  6657                           ;user.c: 175: LATFbits.LATF2 = 0;
  6658  153A  110C               	bcf	12,2	;volatile
  6659                           
  6660                           ;user.c: 176: LATFbits.LATF3 = 0;
  6661  153B  118C               	bcf	12,3	;volatile
  6662                           
  6663                           ;user.c: 177: LATFbits.LATF4 = ledState;
  6664  153C  0020               	movlb	0	; select bank0
  6665  153D  0C22               	rrf	set_leds_top@ledState,w
  6666  153E  0027               	movlb	7	; select bank7
  6667  153F  1C03               	skipc
  6668  1540  120C               	bcf	12,4	;volatile
  6669  1541  1803               	skipnc
  6670  1542  160C               	bsf	12,4	;volatile
  6671                           
  6672                           ;user.c: 178: break;
  6673  1543  0008               	return
  6674  1544                     l407:	
  6675                           ;user.c: 179: case 6:
  6676                           
  6677                           
  6678                           ;user.c: 180: LATFbits.LATF0 = 0;
  6679  1544  0027               	movlb	7	; select bank7
  6680  1545  100C               	bcf	12,0	;volatile
  6681                           
  6682                           ;user.c: 181: LATFbits.LATF1 = 0;
  6683  1546  108C               	bcf	12,1	;volatile
  6684                           
  6685                           ;user.c: 182: LATFbits.LATF2 = 0;
  6686  1547  110C               	bcf	12,2	;volatile
  6687                           
  6688                           ;user.c: 183: LATFbits.LATF3 = 0;
  6689  1548  118C               	bcf	12,3	;volatile
  6690                           
  6691                           ;user.c: 184: LATFbits.LATF4 = 0;
  6692  1549  120C               	bcf	12,4	;volatile
  6693                           
  6694                           ;user.c: 186: }
  6695                           
  6696                           ;user.c: 185: break;
  6697  154A  0008               	return
  6698  154B                     l2466:	
  6699                           
  6700                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6701                           ; Switch size 1, requested type "space"
  6702                           ; Number of cases is 1, Range of values is 0 to 0
  6703                           ; switch strategies available:
  6704                           ; Name         Instructions Cycles
  6705                           ; simple_byte            4     3 (average)
  6706                           ; direct_byte            8     6 (fixed)
  6707                           ; jumptable            260     6 (fixed)
  6708                           ;	Chosen strategy is simple_byte
  6709  154B  0020               	movlb	0	; select bank0
  6710  154C  0821               	movf	set_leds_top@x+1,w
  6711  154D  3A00               	xorlw	0	; case 0
  6712  154E  1903               	skipnz
  6713  154F  2D51               	goto	l3090
  6714  1550  2D65               	goto	l408
  6715  1551                     l3090:	
  6716                           
  6717                           ; Switch size 1, requested type "space"
  6718                           ; Number of cases is 6, Range of values is 1 to 6
  6719                           ; switch strategies available:
  6720                           ; Name         Instructions Cycles
  6721                           ; simple_byte           19    10 (average)
  6722                           ; direct_byte           21     9 (fixed)
  6723                           ; jumptable            263     9 (fixed)
  6724                           ;	Chosen strategy is simple_byte
  6725  1551  0820               	movf	set_leds_top@x,w
  6726  1552  3A01               	xorlw	1	; case 1
  6727  1553  1903               	skipnz
  6728  1554  2D04               	goto	l2434
  6729  1555  3A03               	xorlw	3	; case 2
  6730  1556  1903               	skipnz
  6731  1557  2D10               	goto	l403
  6732  1558  3A01               	xorlw	1	; case 3
  6733  1559  1903               	skipnz
  6734  155A  2D1D               	goto	l404
  6735  155B  3A07               	xorlw	7	; case 4
  6736  155C  1903               	skipnz
  6737  155D  2D2A               	goto	l405
  6738  155E  3A01               	xorlw	1	; case 5
  6739  155F  1903               	skipnz
  6740  1560  2D37               	goto	l406
  6741  1561  3A03               	xorlw	3	; case 6
  6742  1562  1903               	skipnz
  6743  1563  2D44               	goto	l407
  6744  1564  2D65               	goto	l408
  6745  1565                     l408:	
  6746  1565  0008               	return
  6747  1566                     __end_of_set_leds_top:	
  6748                           
  6749                           	psect	text7
  6750  1372                     __ptext7:	
  6751 ;; *************** function _set_leds_bottom *****************
  6752 ;; Defined at:
  6753 ;;		line 69 in file "user.c"
  6754 ;; Parameters:    Size  Location     Type
  6755 ;;  x               2    0[BANK0 ] int 
  6756 ;; Auto vars:     Size  Location     Type
  6757 ;;		None
  6758 ;; Return value:  Size  Location     Type
  6759 ;;                  1    wreg      void 
  6760 ;; Registers used:
  6761 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6762 ;; Tracked objects:
  6763 ;;		On entry : 0/0
  6764 ;;		On exit  : 0/0
  6765 ;;		Unchanged: 0/0
  6766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6767 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6770 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6771 ;;Total ram usage:        2 bytes
  6772 ;; Hardware stack levels used:    1
  6773 ;; Hardware stack levels required when called:    2
  6774 ;; This function calls:
  6775 ;;		Nothing
  6776 ;; This function is called by:
  6777 ;;		_main
  6778 ;; This function uses a non-reentrant model
  6779 ;;
  6780                           
  6781                           
  6782                           ;psect for function _set_leds_bottom
  6783  1372                     _set_leds_bottom:	
  6784                           
  6785                           ;user.c: 70: switch (x) {
  6786                           
  6787                           ;incstack = 0
  6788                           ; Regs used in _set_leds_bottom: [wreg-fsr0h+status,2+status,0]
  6789  1372  2B9D               	goto	l2488
  6790  1373                     l379:	
  6791                           ;user.c: 71: case 1:
  6792                           
  6793                           
  6794                           ;user.c: 72: LATDbits.LATD0 = 1;
  6795  1373  0022               	movlb	2	; select bank2
  6796  1374  140F               	bsf	15,0	;volatile
  6797                           
  6798                           ;user.c: 73: LATDbits.LATD1 = 0;
  6799  1375  108F               	bcf	15,1	;volatile
  6800                           
  6801                           ;user.c: 74: LATDbits.LATD2 = 0;
  6802  1376  110F               	bcf	15,2	;volatile
  6803                           
  6804                           ;user.c: 75: LATDbits.LATD3 = 0;
  6805  1377  118F               	bcf	15,3	;volatile
  6806                           
  6807                           ;user.c: 76: LATDbits.LATD4 = 0;
  6808  1378  120F               	bcf	15,4	;volatile
  6809                           
  6810                           ;user.c: 77: break;
  6811  1379  0008               	return
  6812  137A                     l381:	
  6813                           ;user.c: 78: case 2:
  6814                           
  6815                           
  6816                           ;user.c: 79: LATDbits.LATD0 = 0;
  6817  137A  0022               	movlb	2	; select bank2
  6818  137B  100F               	bcf	15,0	;volatile
  6819                           
  6820                           ;user.c: 80: LATDbits.LATD1 = 1;
  6821  137C  148F               	bsf	15,1	;volatile
  6822                           
  6823                           ;user.c: 81: LATDbits.LATD2 = 0;
  6824  137D  110F               	bcf	15,2	;volatile
  6825                           
  6826                           ;user.c: 82: LATDbits.LATD3 = 0;
  6827  137E  118F               	bcf	15,3	;volatile
  6828                           
  6829                           ;user.c: 83: LATDbits.LATD4 = 0;
  6830  137F  120F               	bcf	15,4	;volatile
  6831                           
  6832                           ;user.c: 84: break;
  6833  1380  0008               	return
  6834  1381                     l382:	
  6835                           ;user.c: 85: case 3:
  6836                           
  6837                           
  6838                           ;user.c: 86: LATDbits.LATD0 = 0;
  6839  1381  0022               	movlb	2	; select bank2
  6840  1382  100F               	bcf	15,0	;volatile
  6841                           
  6842                           ;user.c: 87: LATDbits.LATD1 = 0;
  6843  1383  108F               	bcf	15,1	;volatile
  6844                           
  6845                           ;user.c: 88: LATDbits.LATD2 = 1;
  6846  1384  150F               	bsf	15,2	;volatile
  6847                           
  6848                           ;user.c: 89: LATDbits.LATD3 = 0;
  6849  1385  118F               	bcf	15,3	;volatile
  6850                           
  6851                           ;user.c: 90: LATDbits.LATD4 = 0;
  6852  1386  120F               	bcf	15,4	;volatile
  6853                           
  6854                           ;user.c: 91: break;
  6855  1387  0008               	return
  6856  1388                     l383:	
  6857                           ;user.c: 92: case 4:
  6858                           
  6859                           
  6860                           ;user.c: 93: LATDbits.LATD0 = 0;
  6861  1388  0022               	movlb	2	; select bank2
  6862  1389  100F               	bcf	15,0	;volatile
  6863                           
  6864                           ;user.c: 94: LATDbits.LATD1 = 0;
  6865  138A  108F               	bcf	15,1	;volatile
  6866                           
  6867                           ;user.c: 95: LATDbits.LATD2 = 0;
  6868  138B  110F               	bcf	15,2	;volatile
  6869                           
  6870                           ;user.c: 96: LATDbits.LATD3 = 1;
  6871  138C  158F               	bsf	15,3	;volatile
  6872                           
  6873                           ;user.c: 97: LATDbits.LATD4 = 0;
  6874  138D  120F               	bcf	15,4	;volatile
  6875                           
  6876                           ;user.c: 98: break;
  6877  138E  0008               	return
  6878  138F                     l384:	
  6879                           ;user.c: 99: case 5:
  6880                           
  6881                           
  6882                           ;user.c: 100: LATDbits.LATD0 = 0;
  6883  138F  0022               	movlb	2	; select bank2
  6884  1390  100F               	bcf	15,0	;volatile
  6885                           
  6886                           ;user.c: 101: LATDbits.LATD1 = 0;
  6887  1391  108F               	bcf	15,1	;volatile
  6888                           
  6889                           ;user.c: 102: LATDbits.LATD2 = 0;
  6890  1392  110F               	bcf	15,2	;volatile
  6891                           
  6892                           ;user.c: 103: LATDbits.LATD3 = 0;
  6893  1393  118F               	bcf	15,3	;volatile
  6894                           
  6895                           ;user.c: 104: LATDbits.LATD4 = 1;
  6896  1394  160F               	bsf	15,4	;volatile
  6897                           
  6898                           ;user.c: 105: break;
  6899  1395  0008               	return
  6900  1396                     l385:	
  6901                           ;user.c: 106: case 6:
  6902                           
  6903                           
  6904                           ;user.c: 107: LATDbits.LATD0 = 0;
  6905  1396  0022               	movlb	2	; select bank2
  6906  1397  100F               	bcf	15,0	;volatile
  6907                           
  6908                           ;user.c: 108: LATDbits.LATD1 = 0;
  6909  1398  108F               	bcf	15,1	;volatile
  6910                           
  6911                           ;user.c: 109: LATDbits.LATD2 = 0;
  6912  1399  110F               	bcf	15,2	;volatile
  6913                           
  6914                           ;user.c: 110: LATDbits.LATD3 = 0;
  6915  139A  118F               	bcf	15,3	;volatile
  6916                           
  6917                           ;user.c: 111: LATDbits.LATD4 = 0;
  6918  139B  120F               	bcf	15,4	;volatile
  6919                           
  6920                           ;user.c: 113: }
  6921                           
  6922                           ;user.c: 112: break;
  6923  139C  0008               	return
  6924  139D                     l2488:	
  6925                           
  6926                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6927                           ; Switch size 1, requested type "space"
  6928                           ; Number of cases is 1, Range of values is 0 to 0
  6929                           ; switch strategies available:
  6930                           ; Name         Instructions Cycles
  6931                           ; simple_byte            4     3 (average)
  6932                           ; direct_byte            8     6 (fixed)
  6933                           ; jumptable            260     6 (fixed)
  6934                           ;	Chosen strategy is simple_byte
  6935  139D  0020               	movlb	0	; select bank0
  6936  139E  0821               	movf	set_leds_bottom@x+1,w
  6937  139F  3A00               	xorlw	0	; case 0
  6938  13A0  1903               	skipnz
  6939  13A1  2BA3               	goto	l3092
  6940  13A2  2BB7               	goto	l386
  6941  13A3                     l3092:	
  6942                           
  6943                           ; Switch size 1, requested type "space"
  6944                           ; Number of cases is 6, Range of values is 1 to 6
  6945                           ; switch strategies available:
  6946                           ; Name         Instructions Cycles
  6947                           ; simple_byte           19    10 (average)
  6948                           ; direct_byte           21     9 (fixed)
  6949                           ; jumptable            263     9 (fixed)
  6950                           ;	Chosen strategy is simple_byte
  6951  13A3  0820               	movf	set_leds_bottom@x,w
  6952  13A4  3A01               	xorlw	1	; case 1
  6953  13A5  1903               	skipnz
  6954  13A6  2B73               	goto	l379
  6955  13A7  3A03               	xorlw	3	; case 2
  6956  13A8  1903               	skipnz
  6957  13A9  2B7A               	goto	l381
  6958  13AA  3A01               	xorlw	1	; case 3
  6959  13AB  1903               	skipnz
  6960  13AC  2B81               	goto	l382
  6961  13AD  3A07               	xorlw	7	; case 4
  6962  13AE  1903               	skipnz
  6963  13AF  2B88               	goto	l383
  6964  13B0  3A01               	xorlw	1	; case 5
  6965  13B1  1903               	skipnz
  6966  13B2  2B8F               	goto	l384
  6967  13B3  3A03               	xorlw	3	; case 6
  6968  13B4  1903               	skipnz
  6969  13B5  2B96               	goto	l385
  6970  13B6  2BB7               	goto	l386
  6971  13B7                     l386:	
  6972  13B7  0008               	return
  6973  13B8                     __end_of_set_leds_bottom:	
  6974                           
  6975                           	psect	text8
  6976  12AE                     __ptext8:	
  6977 ;; *************** function _modulation *****************
  6978 ;; Defined at:
  6979 ;;		line 255 in file "user.c"
  6980 ;; Parameters:    Size  Location     Type
  6981 ;;  x               2   21[BANK0 ] int 
  6982 ;;  y               2   23[BANK0 ] int 
  6983 ;; Auto vars:     Size  Location     Type
  6984 ;;		None
  6985 ;; Return value:  Size  Location     Type
  6986 ;;                  2   21[BANK0 ] int 
  6987 ;; Registers used:
  6988 ;;		wreg, status,2, status,0, pclath, cstack
  6989 ;; Tracked objects:
  6990 ;;		On entry : 0/0
  6991 ;;		On exit  : 0/0
  6992 ;;		Unchanged: 0/0
  6993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6994 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6996 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6997 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6998 ;;Total ram usage:       12 bytes
  6999 ;; Hardware stack levels used:    1
  7000 ;; Hardware stack levels required when called:    3
  7001 ;; This function calls:
  7002 ;;		___aldiv
  7003 ;;		___wmul
  7004 ;; This function is called by:
  7005 ;;		_main
  7006 ;; This function uses a non-reentrant model
  7007 ;;
  7008                           
  7009                           
  7010                           ;psect for function _modulation
  7011  12AE                     _modulation:	
  7012                           
  7013                           ;user.c: 257: x = (127500 + (y * x)) / 1000;
  7014                           
  7015                           ;incstack = 0
  7016                           ; Regs used in _modulation: [wreg+status,2+status,0+pclath+cstack]
  7017  12AE  3000               	movlw	0
  7018  12AF  0020               	movlb	0	; select bank0
  7019  12B0  00A9               	movwf	___aldiv@divisor+3
  7020  12B1  3000               	movlw	0
  7021  12B2  00A8               	movwf	___aldiv@divisor+2
  7022  12B3  3003               	movlw	3
  7023  12B4  00A7               	movwf	___aldiv@divisor+1
  7024  12B5  30E8               	movlw	232
  7025  12B6  00A6               	movwf	___aldiv@divisor
  7026  12B7  300C               	movlw	12
  7027  12B8  00B9               	movwf	??_modulation
  7028  12B9  30F2               	movlw	242
  7029  12BA  00BA               	movwf	??_modulation+1
  7030  12BB  3001               	movlw	1
  7031  12BC  00BB               	movwf	??_modulation+2
  7032  12BD  3000               	movlw	0
  7033  12BE  00BC               	movwf	??_modulation+3
  7034  12BF  0838               	movf	modulation@y+1,w
  7035  12C0  00A1               	movwf	___wmul@multiplier+1
  7036  12C1  0837               	movf	modulation@y,w
  7037  12C2  00A0               	movwf	___wmul@multiplier
  7038  12C3  0836               	movf	modulation@x+1,w
  7039  12C4  00A3               	movwf	___wmul@multiplicand+1
  7040  12C5  0835               	movf	modulation@x,w
  7041  12C6  00A2               	movwf	___wmul@multiplicand
  7042  12C7  3190  209C  3192   	fcall	___wmul
  7043  12CA  0020               	movlb	0	; select bank0
  7044  12CB  0820               	movf	?___wmul,w
  7045  12CC  00BD               	movwf	??_modulation+4
  7046  12CD  0821               	movf	?___wmul+1,w
  7047  12CE  00BE               	movwf	??_modulation+5
  7048  12CF  3000               	movlw	0
  7049  12D0  1BBE               	btfsc	??_modulation+5,7
  7050  12D1  30FF               	movlw	255
  7051  12D2  00BF               	movwf	??_modulation+6
  7052  12D3  00C0               	movwf	??_modulation+7
  7053  12D4  083D               	movf	??_modulation+4,w
  7054  12D5  07B9               	addwf	??_modulation,f
  7055  12D6  083E               	movf	??_modulation+5,w
  7056  12D7  3DBA               	addwfc	??_modulation+1,f
  7057  12D8  083F               	movf	??_modulation+6,w
  7058  12D9  3DBB               	addwfc	??_modulation+2,f
  7059  12DA  0840               	movf	??_modulation+7,w
  7060  12DB  3DBC               	addwfc	??_modulation+3,f
  7061  12DC  083C               	movf	??_modulation+3,w
  7062  12DD  00AD               	movwf	___aldiv@dividend+3
  7063  12DE  083B               	movf	??_modulation+2,w
  7064  12DF  00AC               	movwf	___aldiv@dividend+2
  7065  12E0  083A               	movf	??_modulation+1,w
  7066  12E1  00AB               	movwf	___aldiv@dividend+1
  7067  12E2  0839               	movf	??_modulation,w
  7068  12E3  00AA               	movwf	___aldiv@dividend
  7069  12E4  3196  2636         	fcall	___aldiv
  7070  12E6  0020               	movlb	0	; select bank0
  7071  12E7  0827               	movf	?___aldiv+1,w
  7072  12E8  00B6               	movwf	modulation@x+1
  7073  12E9  0826               	movf	?___aldiv,w
  7074  12EA  00B5               	movwf	modulation@x
  7075                           
  7076                           ;user.c: 258: return x;
  7077  12EB  0008               	return
  7078  12EC                     __end_of_modulation:	
  7079                           
  7080                           	psect	text9
  7081  109C                     __ptext9:	
  7082 ;; *************** function ___wmul *****************
  7083 ;; Defined at:
  7084 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\Umul16.c"
  7085 ;; Parameters:    Size  Location     Type
  7086 ;;  multiplier      2    0[BANK0 ] unsigned int 
  7087 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  7088 ;; Auto vars:     Size  Location     Type
  7089 ;;  product         2    4[BANK0 ] unsigned int 
  7090 ;; Return value:  Size  Location     Type
  7091 ;;                  2    0[BANK0 ] unsigned int 
  7092 ;; Registers used:
  7093 ;;		wreg, status,2, status,0
  7094 ;; Tracked objects:
  7095 ;;		On entry : 0/0
  7096 ;;		On exit  : 0/0
  7097 ;;		Unchanged: 0/0
  7098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  7099 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7100 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7102 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7103 ;;Total ram usage:        6 bytes
  7104 ;; Hardware stack levels used:    1
  7105 ;; Hardware stack levels required when called:    2
  7106 ;; This function calls:
  7107 ;;		Nothing
  7108 ;; This function is called by:
  7109 ;;		_modulation
  7110 ;; This function uses a non-reentrant model
  7111 ;;
  7112                           
  7113                           
  7114                           ;psect for function ___wmul
  7115  109C                     ___wmul:	
  7116                           
  7117                           ;incstack = 0
  7118                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7119  109C  0020               	movlb	0	; select bank0
  7120  109D  01A4               	clrf	___wmul@product
  7121  109E  01A5               	clrf	___wmul@product+1
  7122  109F                     l2142:	
  7123  109F  1C20               	btfss	___wmul@multiplier,0
  7124  10A0  28A5               	goto	l474
  7125  10A1  0822               	movf	___wmul@multiplicand,w
  7126  10A2  07A4               	addwf	___wmul@product,f
  7127  10A3  0823               	movf	___wmul@multiplicand+1,w
  7128  10A4  3DA5               	addwfc	___wmul@product+1,f
  7129  10A5                     l474:	
  7130  10A5  3001               	movlw	1
  7131  10A6                     u1855:	
  7132  10A6  35A2               	lslf	___wmul@multiplicand,f
  7133  10A7  0DA3               	rlf	___wmul@multiplicand+1,f
  7134  10A8  0B89               	decfsz	9,f
  7135  10A9  28A6               	goto	u1855
  7136  10AA  3001               	movlw	1
  7137  10AB                     u1865:	
  7138  10AB  36A1               	lsrf	___wmul@multiplier+1,f
  7139  10AC  0CA0               	rrf	___wmul@multiplier,f
  7140  10AD  0B89               	decfsz	9,f
  7141  10AE  28AB               	goto	u1865
  7142  10AF  0820               	movf	___wmul@multiplier,w
  7143  10B0  0421               	iorwf	___wmul@multiplier+1,w
  7144  10B1  1D03               	btfss	3,2
  7145  10B2  289F               	goto	l2142
  7146  10B3  0825               	movf	___wmul@product+1,w
  7147  10B4  00A1               	movwf	?___wmul+1
  7148  10B5  0824               	movf	___wmul@product,w
  7149  10B6  00A0               	movwf	?___wmul
  7150  10B7  0008               	return
  7151  10B8                     __end_of___wmul:	
  7152                           
  7153                           	psect	text10
  7154  1636                     __ptext10:	
  7155 ;; *************** function ___aldiv *****************
  7156 ;; Defined at:
  7157 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\aldiv.c"
  7158 ;; Parameters:    Size  Location     Type
  7159 ;;  divisor         4    6[BANK0 ] long 
  7160 ;;  dividend        4   10[BANK0 ] long 
  7161 ;; Auto vars:     Size  Location     Type
  7162 ;;  quotient        4   17[BANK0 ] long 
  7163 ;;  sign            1   16[BANK0 ] unsigned char 
  7164 ;;  counter         1   15[BANK0 ] unsigned char 
  7165 ;; Return value:  Size  Location     Type
  7166 ;;                  4    6[BANK0 ] long 
  7167 ;; Registers used:
  7168 ;;		wreg, status,2, status,0
  7169 ;; Tracked objects:
  7170 ;;		On entry : 0/0
  7171 ;;		On exit  : 0/0
  7172 ;;		Unchanged: 0/0
  7173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  7174 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7175 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7176 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7177 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7178 ;;Total ram usage:       15 bytes
  7179 ;; Hardware stack levels used:    1
  7180 ;; Hardware stack levels required when called:    2
  7181 ;; This function calls:
  7182 ;;		Nothing
  7183 ;; This function is called by:
  7184 ;;		_main
  7185 ;;		_modulation
  7186 ;; This function uses a non-reentrant model
  7187 ;;
  7188                           
  7189                           
  7190                           ;psect for function ___aldiv
  7191  1636                     ___aldiv:	
  7192                           
  7193                           ;incstack = 0
  7194                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  7195  1636  0020               	movlb	0	; select bank0
  7196  1637  01B0               	clrf	___aldiv@sign
  7197  1638  1FA9               	btfss	___aldiv@divisor+3,7
  7198  1639  2E47               	goto	l529
  7199  163A  09A6               	comf	___aldiv@divisor,f
  7200  163B  09A7               	comf	___aldiv@divisor+1,f
  7201  163C  09A8               	comf	___aldiv@divisor+2,f
  7202  163D  09A9               	comf	___aldiv@divisor+3,f
  7203  163E  0AA6               	incf	___aldiv@divisor,f
  7204  163F  1903               	skipnz
  7205  1640  0AA7               	incf	___aldiv@divisor+1,f
  7206  1641  1903               	skipnz
  7207  1642  0AA8               	incf	___aldiv@divisor+2,f
  7208  1643  1903               	skipnz
  7209  1644  0AA9               	incf	___aldiv@divisor+3,f
  7210  1645  01B0               	clrf	___aldiv@sign
  7211  1646  0AB0               	incf	___aldiv@sign,f
  7212  1647                     l529:	
  7213  1647  1FAD               	btfss	___aldiv@dividend+3,7
  7214  1648  2E58               	goto	l2178
  7215  1649  09AA               	comf	___aldiv@dividend,f
  7216  164A  09AB               	comf	___aldiv@dividend+1,f
  7217  164B  09AC               	comf	___aldiv@dividend+2,f
  7218  164C  09AD               	comf	___aldiv@dividend+3,f
  7219  164D  0AAA               	incf	___aldiv@dividend,f
  7220  164E  1903               	skipnz
  7221  164F  0AAB               	incf	___aldiv@dividend+1,f
  7222  1650  1903               	skipnz
  7223  1651  0AAC               	incf	___aldiv@dividend+2,f
  7224  1652  1903               	skipnz
  7225  1653  0AAD               	incf	___aldiv@dividend+3,f
  7226  1654  3001               	movlw	1
  7227  1655  00AE               	movwf	??___aldiv
  7228  1656  082E               	movf	??___aldiv,w
  7229  1657  06B0               	xorwf	___aldiv@sign,f
  7230  1658                     l2178:	
  7231  1658  3000               	movlw	0
  7232  1659  00B4               	movwf	___aldiv@quotient+3
  7233  165A  3000               	movlw	0
  7234  165B  00B3               	movwf	___aldiv@quotient+2
  7235  165C  3000               	movlw	0
  7236  165D  00B2               	movwf	___aldiv@quotient+1
  7237  165E  3000               	movlw	0
  7238  165F  00B1               	movwf	___aldiv@quotient
  7239  1660  0829               	movf	___aldiv@divisor+3,w
  7240  1661  0428               	iorwf	___aldiv@divisor+2,w
  7241  1662  0427               	iorwf	___aldiv@divisor+1,w
  7242  1663  0426               	iorwf	___aldiv@divisor,w
  7243  1664  1903               	skipnz
  7244  1665  2EA1               	goto	l2200
  7245  1666  01AF               	clrf	___aldiv@counter
  7246  1667  0AAF               	incf	___aldiv@counter,f
  7247  1668                     l2186:	
  7248  1668  1BA9               	btfsc	___aldiv@divisor+3,7
  7249  1669  2E76               	goto	l2188
  7250  166A  3001               	movlw	1
  7251  166B                     u1955:	
  7252  166B  35A6               	lslf	___aldiv@divisor,f
  7253  166C  0DA7               	rlf	___aldiv@divisor+1,f
  7254  166D  0DA8               	rlf	___aldiv@divisor+2,f
  7255  166E  0DA9               	rlf	___aldiv@divisor+3,f
  7256  166F  0B89               	decfsz	9,f
  7257  1670  2E6B               	goto	u1955
  7258  1671  3001               	movlw	1
  7259  1672  00AE               	movwf	??___aldiv
  7260  1673  082E               	movf	??___aldiv,w
  7261  1674  07AF               	addwf	___aldiv@counter,f
  7262  1675  2E68               	goto	l2186
  7263  1676                     l2188:	
  7264  1676  3001               	movlw	1
  7265  1677                     u1975:	
  7266  1677  35B1               	lslf	___aldiv@quotient,f
  7267  1678  0DB2               	rlf	___aldiv@quotient+1,f
  7268  1679  0DB3               	rlf	___aldiv@quotient+2,f
  7269  167A  0DB4               	rlf	___aldiv@quotient+3,f
  7270  167B  0B89               	decfsz	9,f
  7271  167C  2E77               	goto	u1975
  7272  167D  0829               	movf	___aldiv@divisor+3,w
  7273  167E  022D               	subwf	___aldiv@dividend+3,w
  7274  167F  1D03               	skipz
  7275  1680  2E8B               	goto	u1985
  7276  1681  0828               	movf	___aldiv@divisor+2,w
  7277  1682  022C               	subwf	___aldiv@dividend+2,w
  7278  1683  1D03               	skipz
  7279  1684  2E8B               	goto	u1985
  7280  1685  0827               	movf	___aldiv@divisor+1,w
  7281  1686  022B               	subwf	___aldiv@dividend+1,w
  7282  1687  1D03               	skipz
  7283  1688  2E8B               	goto	u1985
  7284  1689  0826               	movf	___aldiv@divisor,w
  7285  168A  022A               	subwf	___aldiv@dividend,w
  7286  168B                     u1985:	
  7287  168B  1C03               	skipc
  7288  168C  2E96               	goto	l2196
  7289  168D  0826               	movf	___aldiv@divisor,w
  7290  168E  02AA               	subwf	___aldiv@dividend,f
  7291  168F  0827               	movf	___aldiv@divisor+1,w
  7292  1690  3BAB               	subwfb	___aldiv@dividend+1,f
  7293  1691  0828               	movf	___aldiv@divisor+2,w
  7294  1692  3BAC               	subwfb	___aldiv@dividend+2,f
  7295  1693  0829               	movf	___aldiv@divisor+3,w
  7296  1694  3BAD               	subwfb	___aldiv@dividend+3,f
  7297  1695  1431               	bsf	___aldiv@quotient,0
  7298  1696                     l2196:	
  7299  1696  3001               	movlw	1
  7300  1697                     u1995:	
  7301  1697  36A9               	lsrf	___aldiv@divisor+3,f
  7302  1698  0CA8               	rrf	___aldiv@divisor+2,f
  7303  1699  0CA7               	rrf	___aldiv@divisor+1,f
  7304  169A  0CA6               	rrf	___aldiv@divisor,f
  7305  169B  0B89               	decfsz	9,f
  7306  169C  2E97               	goto	u1995
  7307  169D  3001               	movlw	1
  7308  169E  02AF               	subwf	___aldiv@counter,f
  7309  169F  1D03               	btfss	3,2
  7310  16A0  2E76               	goto	l2188
  7311  16A1                     l2200:	
  7312  16A1  0830               	movf	___aldiv@sign,w
  7313  16A2  1903               	btfsc	3,2
  7314  16A3  2EAF               	goto	l2204
  7315  16A4  09B1               	comf	___aldiv@quotient,f
  7316  16A5  09B2               	comf	___aldiv@quotient+1,f
  7317  16A6  09B3               	comf	___aldiv@quotient+2,f
  7318  16A7  09B4               	comf	___aldiv@quotient+3,f
  7319  16A8  0AB1               	incf	___aldiv@quotient,f
  7320  16A9  1903               	skipnz
  7321  16AA  0AB2               	incf	___aldiv@quotient+1,f
  7322  16AB  1903               	skipnz
  7323  16AC  0AB3               	incf	___aldiv@quotient+2,f
  7324  16AD  1903               	skipnz
  7325  16AE  0AB4               	incf	___aldiv@quotient+3,f
  7326  16AF                     l2204:	
  7327  16AF  0834               	movf	___aldiv@quotient+3,w
  7328  16B0  00A9               	movwf	?___aldiv+3
  7329  16B1  0833               	movf	___aldiv@quotient+2,w
  7330  16B2  00A8               	movwf	?___aldiv+2
  7331  16B3  0832               	movf	___aldiv@quotient+1,w
  7332  16B4  00A7               	movwf	?___aldiv+1
  7333  16B5  0831               	movf	___aldiv@quotient,w
  7334  16B6  00A6               	movwf	?___aldiv
  7335  16B7  0008               	return
  7336  16B8                     __end_of___aldiv:	
  7337                           
  7338                           	psect	text11
  7339  076F                     __ptext11:	
  7340 ;; *************** function _map *****************
  7341 ;; Defined at:
  7342 ;;		line 251 in file "user.c"
  7343 ;; Parameters:    Size  Location     Type
  7344 ;;  x               3   53[BANK0 ] float 
  7345 ;;  in_min          3   56[BANK0 ] float 
  7346 ;;  in_max          3   59[BANK0 ] float 
  7347 ;;  out_min         3   62[BANK0 ] float 
  7348 ;;  out_max         3   65[BANK0 ] float 
  7349 ;; Auto vars:     Size  Location     Type
  7350 ;;		None
  7351 ;; Return value:  Size  Location     Type
  7352 ;;                  3   53[BANK0 ] float 
  7353 ;; Registers used:
  7354 ;;		wreg, status,2, status,0, pclath, cstack
  7355 ;; Tracked objects:
  7356 ;;		On entry : 0/0
  7357 ;;		On exit  : 0/0
  7358 ;;		Unchanged: 0/0
  7359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  7360 ;;      Params:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7361 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7363 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7364 ;;Total ram usage:       18 bytes
  7365 ;; Hardware stack levels used:    1
  7366 ;; Hardware stack levels required when called:    4
  7367 ;; This function calls:
  7368 ;;		___ftadd
  7369 ;;		___ftdiv
  7370 ;;		___ftmul
  7371 ;;		___ftneg
  7372 ;; This function is called by:
  7373 ;;		_main
  7374 ;; This function uses a non-reentrant model
  7375 ;;
  7376                           
  7377                           
  7378                           ;psect for function _map
  7379  076F                     _map:	
  7380                           
  7381                           ;user.c: 252: return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
  7382                           
  7383                           ;incstack = 0
  7384                           ; Regs used in _map: [wreg+status,2+status,0+pclath+cstack]
  7385  076F  0020               	movlb	0	; select bank0
  7386  0770  085B               	movf	map@in_max,w
  7387  0771  00A8               	movwf	___ftadd@f1
  7388  0772  085C               	movf	map@in_max+1,w
  7389  0773  00A9               	movwf	___ftadd@f1+1
  7390  0774  085D               	movf	map@in_max+2,w
  7391  0775  00AA               	movwf	___ftadd@f1+2
  7392  0776  0858               	movf	map@in_min,w
  7393  0777  00A0               	movwf	___ftneg@f1
  7394  0778  0859               	movf	map@in_min+1,w
  7395  0779  00A1               	movwf	___ftneg@f1+1
  7396  077A  085A               	movf	map@in_min+2,w
  7397  077B  00A2               	movwf	___ftneg@f1+2
  7398  077C  3190  2038  3187   	fcall	___ftneg
  7399  077F  0020               	movlb	0	; select bank0
  7400  0780  0820               	movf	?___ftneg,w
  7401  0781  00AB               	movwf	___ftadd@f2
  7402  0782  0821               	movf	?___ftneg+1,w
  7403  0783  00AC               	movwf	___ftadd@f2+1
  7404  0784  0822               	movf	?___ftneg+2,w
  7405  0785  00AD               	movwf	___ftadd@f2+2
  7406  0786  3186  2679  3187   	fcall	___ftadd
  7407  0789  0020               	movlb	0	; select bank0
  7408  078A  0828               	movf	?___ftadd,w
  7409  078B  00C5               	movwf	___ftdiv@f2
  7410  078C  0829               	movf	?___ftadd+1,w
  7411  078D  00C6               	movwf	___ftdiv@f2+1
  7412  078E  082A               	movf	?___ftadd+2,w
  7413  078F  00C7               	movwf	___ftdiv@f2+2
  7414  0790  0861               	movf	map@out_max,w
  7415  0791  00A8               	movwf	___ftadd@f1
  7416  0792  0862               	movf	map@out_max+1,w
  7417  0793  00A9               	movwf	___ftadd@f1+1
  7418  0794  0863               	movf	map@out_max+2,w
  7419  0795  00AA               	movwf	___ftadd@f1+2
  7420  0796  085E               	movf	map@out_min,w
  7421  0797  00A0               	movwf	___ftneg@f1
  7422  0798  085F               	movf	map@out_min+1,w
  7423  0799  00A1               	movwf	___ftneg@f1+1
  7424  079A  0860               	movf	map@out_min+2,w
  7425  079B  00A2               	movwf	___ftneg@f1+2
  7426  079C  3190  2038  3187   	fcall	___ftneg
  7427  079F  0020               	movlb	0	; select bank0
  7428  07A0  0820               	movf	?___ftneg,w
  7429  07A1  00AB               	movwf	___ftadd@f2
  7430  07A2  0821               	movf	?___ftneg+1,w
  7431  07A3  00AC               	movwf	___ftadd@f2+1
  7432  07A4  0822               	movf	?___ftneg+2,w
  7433  07A5  00AD               	movwf	___ftadd@f2+2
  7434  07A6  3186  2679  3187   	fcall	___ftadd
  7435  07A9  0020               	movlb	0	; select bank0
  7436  07AA  0828               	movf	?___ftadd,w
  7437  07AB  00B5               	movwf	___ftmul@f1
  7438  07AC  0829               	movf	?___ftadd+1,w
  7439  07AD  00B6               	movwf	___ftmul@f1+1
  7440  07AE  082A               	movf	?___ftadd+2,w
  7441  07AF  00B7               	movwf	___ftmul@f1+2
  7442  07B0  0855               	movf	map@x,w
  7443  07B1  00A8               	movwf	___ftadd@f1
  7444  07B2  0856               	movf	map@x+1,w
  7445  07B3  00A9               	movwf	___ftadd@f1+1
  7446  07B4  0857               	movf	map@x+2,w
  7447  07B5  00AA               	movwf	___ftadd@f1+2
  7448  07B6  0858               	movf	map@in_min,w
  7449  07B7  00A0               	movwf	___ftneg@f1
  7450  07B8  0859               	movf	map@in_min+1,w
  7451  07B9  00A1               	movwf	___ftneg@f1+1
  7452  07BA  085A               	movf	map@in_min+2,w
  7453  07BB  00A2               	movwf	___ftneg@f1+2
  7454  07BC  3190  2038  3187   	fcall	___ftneg
  7455  07BF  0020               	movlb	0	; select bank0
  7456  07C0  0820               	movf	?___ftneg,w
  7457  07C1  00AB               	movwf	___ftadd@f2
  7458  07C2  0821               	movf	?___ftneg+1,w
  7459  07C3  00AC               	movwf	___ftadd@f2+1
  7460  07C4  0822               	movf	?___ftneg+2,w
  7461  07C5  00AD               	movwf	___ftadd@f2+2
  7462  07C6  3186  2679  3187   	fcall	___ftadd
  7463  07C9  0020               	movlb	0	; select bank0
  7464  07CA  0828               	movf	?___ftadd,w
  7465  07CB  00B8               	movwf	___ftmul@f2
  7466  07CC  0829               	movf	?___ftadd+1,w
  7467  07CD  00B9               	movwf	___ftmul@f2+1
  7468  07CE  082A               	movf	?___ftadd+2,w
  7469  07CF  00BA               	movwf	___ftmul@f2+2
  7470  07D0  3188  2029  3187   	fcall	___ftmul
  7471  07D3  0020               	movlb	0	; select bank0
  7472  07D4  0835               	movf	?___ftmul,w
  7473  07D5  00C8               	movwf	___ftdiv@f1
  7474  07D6  0836               	movf	?___ftmul+1,w
  7475  07D7  00C9               	movwf	___ftdiv@f1+1
  7476  07D8  0837               	movf	?___ftmul+2,w
  7477  07D9  00CA               	movwf	___ftdiv@f1+2
  7478  07DA  3197  2757  3187   	fcall	___ftdiv
  7479  07DD  0020               	movlb	0	; select bank0
  7480  07DE  0845               	movf	?___ftdiv,w
  7481  07DF  00E4               	movwf	_map$1566
  7482  07E0  0846               	movf	?___ftdiv+1,w
  7483  07E1  00E5               	movwf	_map$1566+1
  7484  07E2  0847               	movf	?___ftdiv+2,w
  7485  07E3  00E6               	movwf	_map$1566+2
  7486                           
  7487                           ;user.c: 252: return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
  7488  07E4  085E               	movf	map@out_min,w
  7489  07E5  00A8               	movwf	___ftadd@f1
  7490  07E6  085F               	movf	map@out_min+1,w
  7491  07E7  00A9               	movwf	___ftadd@f1+1
  7492  07E8  0860               	movf	map@out_min+2,w
  7493  07E9  00AA               	movwf	___ftadd@f1+2
  7494  07EA  0864               	movf	_map$1566,w
  7495  07EB  00AB               	movwf	___ftadd@f2
  7496  07EC  0865               	movf	_map$1566+1,w
  7497  07ED  00AC               	movwf	___ftadd@f2+1
  7498  07EE  0866               	movf	_map$1566+2,w
  7499  07EF  00AD               	movwf	___ftadd@f2+2
  7500  07F0  3186  2679         	fcall	___ftadd
  7501  07F2  0020               	movlb	0	; select bank0
  7502  07F3  0828               	movf	?___ftadd,w
  7503  07F4  00D5               	movwf	?_map
  7504  07F5  0829               	movf	?___ftadd+1,w
  7505  07F6  00D6               	movwf	?_map+1
  7506  07F7  082A               	movf	?___ftadd+2,w
  7507  07F8  00D7               	movwf	?_map+2
  7508  07F9  0008               	return
  7509  07FA                     __end_of_map:	
  7510                           
  7511                           	psect	text12
  7512  1038                     __ptext12:	
  7513 ;; *************** function ___ftneg *****************
  7514 ;; Defined at:
  7515 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftneg.c"
  7516 ;; Parameters:    Size  Location     Type
  7517 ;;  f1              3    0[BANK0 ] float 
  7518 ;; Auto vars:     Size  Location     Type
  7519 ;;		None
  7520 ;; Return value:  Size  Location     Type
  7521 ;;                  3    0[BANK0 ] float 
  7522 ;; Registers used:
  7523 ;;		wreg
  7524 ;; Tracked objects:
  7525 ;;		On entry : 0/0
  7526 ;;		On exit  : 0/0
  7527 ;;		Unchanged: 0/0
  7528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  7529 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7532 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7533 ;;Total ram usage:        3 bytes
  7534 ;; Hardware stack levels used:    1
  7535 ;; Hardware stack levels required when called:    2
  7536 ;; This function calls:
  7537 ;;		Nothing
  7538 ;; This function is called by:
  7539 ;;		_map
  7540 ;; This function uses a non-reentrant model
  7541 ;;
  7542                           
  7543                           
  7544                           ;psect for function ___ftneg
  7545  1038                     ___ftneg:	
  7546                           
  7547                           ;incstack = 0
  7548                           ; Regs used in ___ftneg: [wreg]
  7549  1038  0020               	movlb	0	; select bank0
  7550  1039  0822               	movf	___ftneg@f1+2,w
  7551  103A  0421               	iorwf	___ftneg@f1+1,w
  7552  103B  0420               	iorwf	___ftneg@f1,w
  7553  103C  1903               	skipnz
  7554  103D  0008               	return
  7555  103E  3080               	movlw	128
  7556  103F  06A2               	xorwf	___ftneg@f1+2,f
  7557  1040  0008               	return
  7558  1041                     __end_of___ftneg:	
  7559                           
  7560                           	psect	text13
  7561  0829                     __ptext13:	
  7562 ;; *************** function ___ftmul *****************
  7563 ;; Defined at:
  7564 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftmul.c"
  7565 ;; Parameters:    Size  Location     Type
  7566 ;;  f1              3   21[BANK0 ] float 
  7567 ;;  f2              3   24[BANK0 ] float 
  7568 ;; Auto vars:     Size  Location     Type
  7569 ;;  f3_as_produc    3   32[BANK0 ] unsigned um
  7570 ;;  sign            1   36[BANK0 ] unsigned char 
  7571 ;;  cntr            1   35[BANK0 ] unsigned char 
  7572 ;;  exp             1   31[BANK0 ] unsigned char 
  7573 ;; Return value:  Size  Location     Type
  7574 ;;                  3   21[BANK0 ] float 
  7575 ;; Registers used:
  7576 ;;		wreg, status,2, status,0, pclath, cstack
  7577 ;; Tracked objects:
  7578 ;;		On entry : 0/0
  7579 ;;		On exit  : 0/0
  7580 ;;		Unchanged: 0/0
  7581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  7582 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7583 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7584 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7585 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7586 ;;Total ram usage:       16 bytes
  7587 ;; Hardware stack levels used:    1
  7588 ;; Hardware stack levels required when called:    3
  7589 ;; This function calls:
  7590 ;;		___ftpack
  7591 ;; This function is called by:
  7592 ;;		_set_subdivision
  7593 ;;		_map
  7594 ;; This function uses a non-reentrant model
  7595 ;;
  7596                           
  7597                           
  7598                           ;psect for function ___ftmul
  7599  0829                     ___ftmul:	
  7600                           
  7601                           ;incstack = 0
  7602                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  7603  0829  0020               	movlb	0	; select bank0
  7604  082A  0835               	movf	___ftmul@f1,w
  7605  082B  00BB               	movwf	??___ftmul
  7606  082C  0836               	movf	___ftmul@f1+1,w
  7607  082D  00BC               	movwf	??___ftmul+1
  7608  082E  0837               	movf	___ftmul@f1+2,w
  7609  082F  00BD               	movwf	??___ftmul+2
  7610  0830  1003               	clrc
  7611  0831  0D3C               	rlf	??___ftmul+1,w
  7612  0832  0D3D               	rlf	??___ftmul+2,w
  7613  0833  00BE               	movwf	??___ftmul+3
  7614  0834  083E               	movf	??___ftmul+3,w
  7615  0835  00BF               	movwf	___ftmul@exp
  7616  0836  083F               	movf	___ftmul@exp,w
  7617  0837  1D03               	btfss	3,2
  7618  0838  2840               	goto	l2338
  7619  0839  3000               	movlw	0
  7620  083A  00B5               	movwf	?___ftmul
  7621  083B  3000               	movlw	0
  7622  083C  00B6               	movwf	?___ftmul+1
  7623  083D  3000               	movlw	0
  7624  083E  00B7               	movwf	?___ftmul+2
  7625  083F  0008               	return
  7626  0840                     l2338:	
  7627  0840  0838               	movf	___ftmul@f2,w
  7628  0841  00BB               	movwf	??___ftmul
  7629  0842  0839               	movf	___ftmul@f2+1,w
  7630  0843  00BC               	movwf	??___ftmul+1
  7631  0844  083A               	movf	___ftmul@f2+2,w
  7632  0845  00BD               	movwf	??___ftmul+2
  7633  0846  1003               	clrc
  7634  0847  0D3C               	rlf	??___ftmul+1,w
  7635  0848  0D3D               	rlf	??___ftmul+2,w
  7636  0849  00BE               	movwf	??___ftmul+3
  7637  084A  083E               	movf	??___ftmul+3,w
  7638  084B  00C4               	movwf	___ftmul@sign
  7639  084C  0844               	movf	___ftmul@sign,w
  7640  084D  1D03               	btfss	3,2
  7641  084E  2856               	goto	l2344
  7642  084F  3000               	movlw	0
  7643  0850  00B5               	movwf	?___ftmul
  7644  0851  3000               	movlw	0
  7645  0852  00B6               	movwf	?___ftmul+1
  7646  0853  3000               	movlw	0
  7647  0854  00B7               	movwf	?___ftmul+2
  7648  0855  0008               	return
  7649  0856                     l2344:	
  7650  0856  0844               	movf	___ftmul@sign,w
  7651  0857  3E7B               	addlw	123
  7652  0858  00BB               	movwf	??___ftmul
  7653  0859  083B               	movf	??___ftmul,w
  7654  085A  07BF               	addwf	___ftmul@exp,f
  7655  085B  0835               	movf	___ftmul@f1,w
  7656  085C  00BB               	movwf	??___ftmul
  7657  085D  0836               	movf	___ftmul@f1+1,w
  7658  085E  00BC               	movwf	??___ftmul+1
  7659  085F  0837               	movf	___ftmul@f1+2,w
  7660  0860  00BD               	movwf	??___ftmul+2
  7661  0861  3010               	movlw	16
  7662  0862                     u2365:	
  7663  0862  36BD               	lsrf	??___ftmul+2,f
  7664  0863  0CBC               	rrf	??___ftmul+1,f
  7665  0864  0CBB               	rrf	??___ftmul,f
  7666  0865  0B89               	decfsz	9,f
  7667  0866  2862               	goto	u2365
  7668  0867  083B               	movf	??___ftmul,w
  7669  0868  00BE               	movwf	??___ftmul+3
  7670  0869  083E               	movf	??___ftmul+3,w
  7671  086A  00C4               	movwf	___ftmul@sign
  7672  086B  0838               	movf	___ftmul@f2,w
  7673  086C  00BB               	movwf	??___ftmul
  7674  086D  0839               	movf	___ftmul@f2+1,w
  7675  086E  00BC               	movwf	??___ftmul+1
  7676  086F  083A               	movf	___ftmul@f2+2,w
  7677  0870  00BD               	movwf	??___ftmul+2
  7678  0871  3010               	movlw	16
  7679  0872                     u2375:	
  7680  0872  36BD               	lsrf	??___ftmul+2,f
  7681  0873  0CBC               	rrf	??___ftmul+1,f
  7682  0874  0CBB               	rrf	??___ftmul,f
  7683  0875  0B89               	decfsz	9,f
  7684  0876  2872               	goto	u2375
  7685  0877  083B               	movf	??___ftmul,w
  7686  0878  00BE               	movwf	??___ftmul+3
  7687  0879  083E               	movf	??___ftmul+3,w
  7688  087A  06C4               	xorwf	___ftmul@sign,f
  7689  087B  3080               	movlw	128
  7690  087C  00BB               	movwf	??___ftmul
  7691  087D  083B               	movf	??___ftmul,w
  7692  087E  05C4               	andwf	___ftmul@sign,f
  7693  087F  17B6               	bsf	___ftmul@f1+1,7
  7694  0880  17B9               	bsf	___ftmul@f2+1,7
  7695  0881  30FF               	movlw	255
  7696  0882  05B8               	andwf	___ftmul@f2,f
  7697  0883  30FF               	movlw	255
  7698  0884  05B9               	andwf	___ftmul@f2+1,f
  7699  0885  3000               	movlw	0
  7700  0886  05BA               	andwf	___ftmul@f2+2,f
  7701  0887  3000               	movlw	0
  7702  0888  00C0               	movwf	___ftmul@f3_as_product
  7703  0889  3000               	movlw	0
  7704  088A  00C1               	movwf	___ftmul@f3_as_product+1
  7705  088B  3000               	movlw	0
  7706  088C  00C2               	movwf	___ftmul@f3_as_product+2
  7707  088D  3007               	movlw	7
  7708  088E  00BB               	movwf	??___ftmul
  7709  088F  083B               	movf	??___ftmul,w
  7710  0890  00C3               	movwf	___ftmul@cntr
  7711  0891                     l2356:	
  7712  0891  1C35               	btfss	___ftmul@f1,0
  7713  0892  2899               	goto	l2360
  7714  0893  0838               	movf	___ftmul@f2,w
  7715  0894  07C0               	addwf	___ftmul@f3_as_product,f
  7716  0895  0839               	movf	___ftmul@f2+1,w
  7717  0896  3DC1               	addwfc	___ftmul@f3_as_product+1,f
  7718  0897  083A               	movf	___ftmul@f2+2,w
  7719  0898  3DC2               	addwfc	___ftmul@f3_as_product+2,f
  7720  0899                     l2360:	
  7721  0899  3001               	movlw	1
  7722  089A                     u2395:	
  7723  089A  36B7               	lsrf	___ftmul@f1+2,f
  7724  089B  0CB6               	rrf	___ftmul@f1+1,f
  7725  089C  0CB5               	rrf	___ftmul@f1,f
  7726  089D  0B89               	decfsz	9,f
  7727  089E  289A               	goto	u2395
  7728  089F  3001               	movlw	1
  7729  08A0                     u2405:	
  7730  08A0  35B8               	lslf	___ftmul@f2,f
  7731  08A1  0DB9               	rlf	___ftmul@f2+1,f
  7732  08A2  0DBA               	rlf	___ftmul@f2+2,f
  7733  08A3  0B89               	decfsz	9,f
  7734  08A4  28A0               	goto	u2405
  7735  08A5  3001               	movlw	1
  7736  08A6  02C3               	subwf	___ftmul@cntr,f
  7737  08A7  1D03               	btfss	3,2
  7738  08A8  2891               	goto	l2356
  7739  08A9  3009               	movlw	9
  7740  08AA  00BB               	movwf	??___ftmul
  7741  08AB  083B               	movf	??___ftmul,w
  7742  08AC  00C3               	movwf	___ftmul@cntr
  7743  08AD                     l2368:	
  7744  08AD  1C35               	btfss	___ftmul@f1,0
  7745  08AE  28B5               	goto	l2372
  7746  08AF  0838               	movf	___ftmul@f2,w
  7747  08B0  07C0               	addwf	___ftmul@f3_as_product,f
  7748  08B1  0839               	movf	___ftmul@f2+1,w
  7749  08B2  3DC1               	addwfc	___ftmul@f3_as_product+1,f
  7750  08B3  083A               	movf	___ftmul@f2+2,w
  7751  08B4  3DC2               	addwfc	___ftmul@f3_as_product+2,f
  7752  08B5                     l2372:	
  7753  08B5  3001               	movlw	1
  7754  08B6                     u2435:	
  7755  08B6  36B7               	lsrf	___ftmul@f1+2,f
  7756  08B7  0CB6               	rrf	___ftmul@f1+1,f
  7757  08B8  0CB5               	rrf	___ftmul@f1,f
  7758  08B9  0B89               	decfsz	9,f
  7759  08BA  28B6               	goto	u2435
  7760  08BB  3001               	movlw	1
  7761  08BC                     u2445:	
  7762  08BC  36C2               	lsrf	___ftmul@f3_as_product+2,f
  7763  08BD  0CC1               	rrf	___ftmul@f3_as_product+1,f
  7764  08BE  0CC0               	rrf	___ftmul@f3_as_product,f
  7765  08BF  0B89               	decfsz	9,f
  7766  08C0  28BC               	goto	u2445
  7767  08C1  3001               	movlw	1
  7768  08C2  02C3               	subwf	___ftmul@cntr,f
  7769  08C3  1D03               	btfss	3,2
  7770  08C4  28AD               	goto	l2368
  7771  08C5  0840               	movf	___ftmul@f3_as_product,w
  7772  08C6  00A0               	movwf	___ftpack@arg
  7773  08C7  0841               	movf	___ftmul@f3_as_product+1,w
  7774  08C8  00A1               	movwf	___ftpack@arg+1
  7775  08C9  0842               	movf	___ftmul@f3_as_product+2,w
  7776  08CA  00A2               	movwf	___ftpack@arg+2
  7777  08CB  083F               	movf	___ftmul@exp,w
  7778  08CC  00BB               	movwf	??___ftmul
  7779  08CD  083B               	movf	??___ftmul,w
  7780  08CE  00A3               	movwf	___ftpack@exp
  7781  08CF  0844               	movf	___ftmul@sign,w
  7782  08D0  00BC               	movwf	??___ftmul+1
  7783  08D1  083C               	movf	??___ftmul+1,w
  7784  08D2  00A4               	movwf	___ftpack@sign
  7785  08D3  3195  2566         	fcall	___ftpack
  7786  08D5  0020               	movlb	0	; select bank0
  7787  08D6  0820               	movf	?___ftpack,w
  7788  08D7  00B5               	movwf	?___ftmul
  7789  08D8  0821               	movf	?___ftpack+1,w
  7790  08D9  00B6               	movwf	?___ftmul+1
  7791  08DA  0822               	movf	?___ftpack+2,w
  7792  08DB  00B7               	movwf	?___ftmul+2
  7793  08DC  0008               	return
  7794  08DD                     __end_of___ftmul:	
  7795                           
  7796                           	psect	text14
  7797  1757                     __ptext14:	
  7798 ;; *************** function ___ftdiv *****************
  7799 ;; Defined at:
  7800 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftdiv.c"
  7801 ;; Parameters:    Size  Location     Type
  7802 ;;  f2              3   37[BANK0 ] float 
  7803 ;;  f1              3   40[BANK0 ] float 
  7804 ;; Auto vars:     Size  Location     Type
  7805 ;;  f3              3   48[BANK0 ] float 
  7806 ;;  sign            1   52[BANK0 ] unsigned char 
  7807 ;;  exp             1   51[BANK0 ] unsigned char 
  7808 ;;  cntr            1   47[BANK0 ] unsigned char 
  7809 ;; Return value:  Size  Location     Type
  7810 ;;                  3   37[BANK0 ] float 
  7811 ;; Registers used:
  7812 ;;		wreg, status,2, status,0, pclath, cstack
  7813 ;; Tracked objects:
  7814 ;;		On entry : 0/0
  7815 ;;		On exit  : 0/0
  7816 ;;		Unchanged: 0/0
  7817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  7818 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7819 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7820 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7821 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7822 ;;Total ram usage:       16 bytes
  7823 ;; Hardware stack levels used:    1
  7824 ;; Hardware stack levels required when called:    3
  7825 ;; This function calls:
  7826 ;;		___ftpack
  7827 ;; This function is called by:
  7828 ;;		_main
  7829 ;;		_map
  7830 ;; This function uses a non-reentrant model
  7831 ;;
  7832                           
  7833                           
  7834                           ;psect for function ___ftdiv
  7835  1757                     ___ftdiv:	
  7836                           
  7837                           ;incstack = 0
  7838                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  7839  1757  0020               	movlb	0	; select bank0
  7840  1758  0848               	movf	___ftdiv@f1,w
  7841  1759  00CB               	movwf	??___ftdiv
  7842  175A  0849               	movf	___ftdiv@f1+1,w
  7843  175B  00CC               	movwf	??___ftdiv+1
  7844  175C  084A               	movf	___ftdiv@f1+2,w
  7845  175D  00CD               	movwf	??___ftdiv+2
  7846  175E  1003               	clrc
  7847  175F  0D4C               	rlf	??___ftdiv+1,w
  7848  1760  0D4D               	rlf	??___ftdiv+2,w
  7849  1761  00CE               	movwf	??___ftdiv+3
  7850  1762  084E               	movf	??___ftdiv+3,w
  7851  1763  00D3               	movwf	___ftdiv@exp
  7852  1764  0853               	movf	___ftdiv@exp,w
  7853  1765  1D03               	btfss	3,2
  7854  1766  2F6E               	goto	l2296
  7855  1767  3000               	movlw	0
  7856  1768  00C5               	movwf	?___ftdiv
  7857  1769  3000               	movlw	0
  7858  176A  00C6               	movwf	?___ftdiv+1
  7859  176B  3000               	movlw	0
  7860  176C  00C7               	movwf	?___ftdiv+2
  7861  176D  0008               	return
  7862  176E                     l2296:	
  7863  176E  0845               	movf	___ftdiv@f2,w
  7864  176F  00CB               	movwf	??___ftdiv
  7865  1770  0846               	movf	___ftdiv@f2+1,w
  7866  1771  00CC               	movwf	??___ftdiv+1
  7867  1772  0847               	movf	___ftdiv@f2+2,w
  7868  1773  00CD               	movwf	??___ftdiv+2
  7869  1774  1003               	clrc
  7870  1775  0D4C               	rlf	??___ftdiv+1,w
  7871  1776  0D4D               	rlf	??___ftdiv+2,w
  7872  1777  00CE               	movwf	??___ftdiv+3
  7873  1778  084E               	movf	??___ftdiv+3,w
  7874  1779  00D4               	movwf	___ftdiv@sign
  7875  177A  0854               	movf	___ftdiv@sign,w
  7876  177B  1D03               	btfss	3,2
  7877  177C  2F84               	goto	l2302
  7878  177D  3000               	movlw	0
  7879  177E  00C5               	movwf	?___ftdiv
  7880  177F  3000               	movlw	0
  7881  1780  00C6               	movwf	?___ftdiv+1
  7882  1781  3000               	movlw	0
  7883  1782  00C7               	movwf	?___ftdiv+2
  7884  1783  0008               	return
  7885  1784                     l2302:	
  7886  1784  3000               	movlw	0
  7887  1785  00D0               	movwf	___ftdiv@f3
  7888  1786  3000               	movlw	0
  7889  1787  00D1               	movwf	___ftdiv@f3+1
  7890  1788  3000               	movlw	0
  7891  1789  00D2               	movwf	___ftdiv@f3+2
  7892  178A  3089               	movlw	137
  7893  178B  0754               	addwf	___ftdiv@sign,w
  7894  178C  00CB               	movwf	??___ftdiv
  7895  178D  084B               	movf	??___ftdiv,w
  7896  178E  02D3               	subwf	___ftdiv@exp,f
  7897  178F  0848               	movf	___ftdiv@f1,w
  7898  1790  00CB               	movwf	??___ftdiv
  7899  1791  0849               	movf	___ftdiv@f1+1,w
  7900  1792  00CC               	movwf	??___ftdiv+1
  7901  1793  084A               	movf	___ftdiv@f1+2,w
  7902  1794  00CD               	movwf	??___ftdiv+2
  7903  1795  3010               	movlw	16
  7904  1796                     u2285:	
  7905  1796  36CD               	lsrf	??___ftdiv+2,f
  7906  1797  0CCC               	rrf	??___ftdiv+1,f
  7907  1798  0CCB               	rrf	??___ftdiv,f
  7908  1799  0B89               	decfsz	9,f
  7909  179A  2F96               	goto	u2285
  7910  179B  084B               	movf	??___ftdiv,w
  7911  179C  00CE               	movwf	??___ftdiv+3
  7912  179D  084E               	movf	??___ftdiv+3,w
  7913  179E  00D4               	movwf	___ftdiv@sign
  7914  179F  0845               	movf	___ftdiv@f2,w
  7915  17A0  00CB               	movwf	??___ftdiv
  7916  17A1  0846               	movf	___ftdiv@f2+1,w
  7917  17A2  00CC               	movwf	??___ftdiv+1
  7918  17A3  0847               	movf	___ftdiv@f2+2,w
  7919  17A4  00CD               	movwf	??___ftdiv+2
  7920  17A5  3010               	movlw	16
  7921  17A6                     u2295:	
  7922  17A6  36CD               	lsrf	??___ftdiv+2,f
  7923  17A7  0CCC               	rrf	??___ftdiv+1,f
  7924  17A8  0CCB               	rrf	??___ftdiv,f
  7925  17A9  0B89               	decfsz	9,f
  7926  17AA  2FA6               	goto	u2295
  7927  17AB  084B               	movf	??___ftdiv,w
  7928  17AC  00CE               	movwf	??___ftdiv+3
  7929  17AD  084E               	movf	??___ftdiv+3,w
  7930  17AE  06D4               	xorwf	___ftdiv@sign,f
  7931  17AF  3080               	movlw	128
  7932  17B0  00CB               	movwf	??___ftdiv
  7933  17B1  084B               	movf	??___ftdiv,w
  7934  17B2  05D4               	andwf	___ftdiv@sign,f
  7935  17B3  17C9               	bsf	___ftdiv@f1+1,7
  7936  17B4  30FF               	movlw	255
  7937  17B5  05C8               	andwf	___ftdiv@f1,f
  7938  17B6  30FF               	movlw	255
  7939  17B7  05C9               	andwf	___ftdiv@f1+1,f
  7940  17B8  3000               	movlw	0
  7941  17B9  05CA               	andwf	___ftdiv@f1+2,f
  7942  17BA  17C6               	bsf	___ftdiv@f2+1,7
  7943  17BB  30FF               	movlw	255
  7944  17BC  05C5               	andwf	___ftdiv@f2,f
  7945  17BD  30FF               	movlw	255
  7946  17BE  05C6               	andwf	___ftdiv@f2+1,f
  7947  17BF  3000               	movlw	0
  7948  17C0  05C7               	andwf	___ftdiv@f2+2,f
  7949  17C1  3018               	movlw	24
  7950  17C2  00CB               	movwf	??___ftdiv
  7951  17C3  084B               	movf	??___ftdiv,w
  7952  17C4  00CF               	movwf	___ftdiv@cntr
  7953  17C5                     l2316:	
  7954  17C5  3001               	movlw	1
  7955  17C6                     u2305:	
  7956  17C6  35D0               	lslf	___ftdiv@f3,f
  7957  17C7  0DD1               	rlf	___ftdiv@f3+1,f
  7958  17C8  0DD2               	rlf	___ftdiv@f3+2,f
  7959  17C9  0B89               	decfsz	9,f
  7960  17CA  2FC6               	goto	u2305
  7961  17CB  0847               	movf	___ftdiv@f2+2,w
  7962  17CC  024A               	subwf	___ftdiv@f1+2,w
  7963  17CD  1D03               	skipz
  7964  17CE  2FD5               	goto	u2315
  7965  17CF  0846               	movf	___ftdiv@f2+1,w
  7966  17D0  0249               	subwf	___ftdiv@f1+1,w
  7967  17D1  1D03               	skipz
  7968  17D2  2FD5               	goto	u2315
  7969  17D3  0845               	movf	___ftdiv@f2,w
  7970  17D4  0248               	subwf	___ftdiv@f1,w
  7971  17D5                     u2315:	
  7972  17D5  1C03               	skipc
  7973  17D6  2FDE               	goto	l2324
  7974  17D7  0845               	movf	___ftdiv@f2,w
  7975  17D8  02C8               	subwf	___ftdiv@f1,f
  7976  17D9  0846               	movf	___ftdiv@f2+1,w
  7977  17DA  3BC9               	subwfb	___ftdiv@f1+1,f
  7978  17DB  0847               	movf	___ftdiv@f2+2,w
  7979  17DC  3BCA               	subwfb	___ftdiv@f1+2,f
  7980  17DD  1450               	bsf	___ftdiv@f3,0
  7981  17DE                     l2324:	
  7982  17DE  3001               	movlw	1
  7983  17DF                     u2325:	
  7984  17DF  35C8               	lslf	___ftdiv@f1,f
  7985  17E0  0DC9               	rlf	___ftdiv@f1+1,f
  7986  17E1  0DCA               	rlf	___ftdiv@f1+2,f
  7987  17E2  0B89               	decfsz	9,f
  7988  17E3  2FDF               	goto	u2325
  7989  17E4  3001               	movlw	1
  7990  17E5  02CF               	subwf	___ftdiv@cntr,f
  7991  17E6  1D03               	btfss	3,2
  7992  17E7  2FC5               	goto	l2316
  7993  17E8  0850               	movf	___ftdiv@f3,w
  7994  17E9  00A0               	movwf	___ftpack@arg
  7995  17EA  0851               	movf	___ftdiv@f3+1,w
  7996  17EB  00A1               	movwf	___ftpack@arg+1
  7997  17EC  0852               	movf	___ftdiv@f3+2,w
  7998  17ED  00A2               	movwf	___ftpack@arg+2
  7999  17EE  0853               	movf	___ftdiv@exp,w
  8000  17EF  00CB               	movwf	??___ftdiv
  8001  17F0  084B               	movf	??___ftdiv,w
  8002  17F1  00A3               	movwf	___ftpack@exp
  8003  17F2  0854               	movf	___ftdiv@sign,w
  8004  17F3  00CC               	movwf	??___ftdiv+1
  8005  17F4  084C               	movf	??___ftdiv+1,w
  8006  17F5  00A4               	movwf	___ftpack@sign
  8007  17F6  3195  2566         	fcall	___ftpack
  8008  17F8  0020               	movlb	0	; select bank0
  8009  17F9  0820               	movf	?___ftpack,w
  8010  17FA  00C5               	movwf	?___ftdiv
  8011  17FB  0821               	movf	?___ftpack+1,w
  8012  17FC  00C6               	movwf	?___ftdiv+1
  8013  17FD  0822               	movf	?___ftpack+2,w
  8014  17FE  00C7               	movwf	?___ftdiv+2
  8015  17FF  0008               	return
  8016  1800                     __end_of___ftdiv:	
  8017                           
  8018                           	psect	text15
  8019  0679                     __ptext15:	
  8020 ;; *************** function ___ftadd *****************
  8021 ;; Defined at:
  8022 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftadd.c"
  8023 ;; Parameters:    Size  Location     Type
  8024 ;;  f1              3    8[BANK0 ] float 
  8025 ;;  f2              3   11[BANK0 ] float 
  8026 ;; Auto vars:     Size  Location     Type
  8027 ;;  exp1            1   20[BANK0 ] unsigned char 
  8028 ;;  exp2            1   19[BANK0 ] unsigned char 
  8029 ;;  sign            1   18[BANK0 ] unsigned char 
  8030 ;; Return value:  Size  Location     Type
  8031 ;;                  3    8[BANK0 ] float 
  8032 ;; Registers used:
  8033 ;;		wreg, status,2, status,0, pclath, cstack
  8034 ;; Tracked objects:
  8035 ;;		On entry : 0/0
  8036 ;;		On exit  : 0/0
  8037 ;;		Unchanged: 0/0
  8038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  8039 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8040 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8041 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8042 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8043 ;;Total ram usage:       13 bytes
  8044 ;; Hardware stack levels used:    1
  8045 ;; Hardware stack levels required when called:    3
  8046 ;; This function calls:
  8047 ;;		___ftpack
  8048 ;; This function is called by:
  8049 ;;		_map
  8050 ;; This function uses a non-reentrant model
  8051 ;;
  8052                           
  8053                           
  8054                           ;psect for function ___ftadd
  8055  0679                     ___ftadd:	
  8056                           
  8057                           ;incstack = 0
  8058                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  8059  0679  0020               	movlb	0	; select bank0
  8060  067A  0828               	movf	___ftadd@f1,w
  8061  067B  00AE               	movwf	??___ftadd
  8062  067C  0829               	movf	___ftadd@f1+1,w
  8063  067D  00AF               	movwf	??___ftadd+1
  8064  067E  082A               	movf	___ftadd@f1+2,w
  8065  067F  00B0               	movwf	??___ftadd+2
  8066  0680  1003               	clrc
  8067  0681  0D2F               	rlf	??___ftadd+1,w
  8068  0682  0D30               	rlf	??___ftadd+2,w
  8069  0683  00B1               	movwf	??___ftadd+3
  8070  0684  0831               	movf	??___ftadd+3,w
  8071  0685  00B4               	movwf	___ftadd@exp1
  8072  0686  082B               	movf	___ftadd@f2,w
  8073  0687  00AE               	movwf	??___ftadd
  8074  0688  082C               	movf	___ftadd@f2+1,w
  8075  0689  00AF               	movwf	??___ftadd+1
  8076  068A  082D               	movf	___ftadd@f2+2,w
  8077  068B  00B0               	movwf	??___ftadd+2
  8078  068C  1003               	clrc
  8079  068D  0D2F               	rlf	??___ftadd+1,w
  8080  068E  0D30               	rlf	??___ftadd+2,w
  8081  068F  00B1               	movwf	??___ftadd+3
  8082  0690  0831               	movf	??___ftadd+3,w
  8083  0691  00B3               	movwf	___ftadd@exp2
  8084  0692  0834               	movf	___ftadd@exp1,w
  8085  0693  1903               	btfsc	3,2
  8086  0694  2EA1               	goto	l2226
  8087  0695  0833               	movf	___ftadd@exp2,w
  8088  0696  0234               	subwf	___ftadd@exp1,w
  8089  0697  1803               	skipnc
  8090  0698  2EA8               	goto	l2230
  8091  0699  0334               	decf	___ftadd@exp1,w
  8092  069A  3AFF               	xorlw	255
  8093  069B  0733               	addwf	___ftadd@exp2,w
  8094  069C  00AE               	movwf	??___ftadd
  8095  069D  3019               	movlw	25
  8096  069E  022E               	subwf	??___ftadd,w
  8097  069F  1C03               	skipc
  8098  06A0  2EA8               	goto	l2230
  8099  06A1                     l2226:	
  8100  06A1  082B               	movf	___ftadd@f2,w
  8101  06A2  00A8               	movwf	?___ftadd
  8102  06A3  082C               	movf	___ftadd@f2+1,w
  8103  06A4  00A9               	movwf	?___ftadd+1
  8104  06A5  082D               	movf	___ftadd@f2+2,w
  8105  06A6  00AA               	movwf	?___ftadd+2
  8106  06A7  0008               	return
  8107  06A8                     l2230:	
  8108  06A8  0833               	movf	___ftadd@exp2,w
  8109  06A9  1903               	btfsc	3,2
  8110  06AA  0008               	return
  8111  06AB  0834               	movf	___ftadd@exp1,w
  8112  06AC  0233               	subwf	___ftadd@exp2,w
  8113  06AD  1803               	skipnc
  8114  06AE  2EB7               	goto	l2236
  8115  06AF  0333               	decf	___ftadd@exp2,w
  8116  06B0  3AFF               	xorlw	255
  8117  06B1  0734               	addwf	___ftadd@exp1,w
  8118  06B2  00AE               	movwf	??___ftadd
  8119  06B3  3019               	movlw	25
  8120  06B4  022E               	subwf	??___ftadd,w
  8121  06B5  1803               	btfsc	3,0
  8122  06B6  0008               	return
  8123  06B7                     l2236:	
  8124  06B7  3006               	movlw	6
  8125  06B8  00AE               	movwf	??___ftadd
  8126  06B9  082E               	movf	??___ftadd,w
  8127  06BA  00B2               	movwf	___ftadd@sign
  8128  06BB  1BAA               	btfsc	___ftadd@f1+2,7
  8129  06BC  17B2               	bsf	___ftadd@sign,7
  8130  06BD  1BAD               	btfsc	___ftadd@f2+2,7
  8131  06BE  1732               	bsf	___ftadd@sign,6
  8132  06BF  17A9               	bsf	___ftadd@f1+1,7
  8133  06C0  30FF               	movlw	255
  8134  06C1  05A8               	andwf	___ftadd@f1,f
  8135  06C2  30FF               	movlw	255
  8136  06C3  05A9               	andwf	___ftadd@f1+1,f
  8137  06C4  3000               	movlw	0
  8138  06C5  05AA               	andwf	___ftadd@f1+2,f
  8139  06C6  17AC               	bsf	___ftadd@f2+1,7
  8140  06C7  30FF               	movlw	255
  8141  06C8  05AB               	andwf	___ftadd@f2,f
  8142  06C9  30FF               	movlw	255
  8143  06CA  05AC               	andwf	___ftadd@f2+1,f
  8144  06CB  3000               	movlw	0
  8145  06CC  05AD               	andwf	___ftadd@f2+2,f
  8146  06CD  0833               	movf	___ftadd@exp2,w
  8147  06CE  0234               	subwf	___ftadd@exp1,w
  8148  06CF  1803               	skipnc
  8149  06D0  2EF3               	goto	l2258
  8150  06D1                     l2248:	
  8151  06D1  3001               	movlw	1
  8152  06D2                     u2125:	
  8153  06D2  35AB               	lslf	___ftadd@f2,f
  8154  06D3  0DAC               	rlf	___ftadd@f2+1,f
  8155  06D4  0DAD               	rlf	___ftadd@f2+2,f
  8156  06D5  0B89               	decfsz	9,f
  8157  06D6  2ED2               	goto	u2125
  8158  06D7  3001               	movlw	1
  8159  06D8  02B3               	subwf	___ftadd@exp2,f
  8160  06D9  0833               	movf	___ftadd@exp2,w
  8161  06DA  0634               	xorwf	___ftadd@exp1,w
  8162  06DB  1903               	skipnz
  8163  06DC  2EEE               	goto	l2256
  8164  06DD  3001               	movlw	1
  8165  06DE  02B2               	subwf	___ftadd@sign,f
  8166  06DF  0832               	movf	___ftadd@sign,w
  8167  06E0  3907               	andlw	7
  8168  06E1  1903               	btfsc	3,2
  8169  06E2  2EEE               	goto	l2256
  8170  06E3  2ED1               	goto	l2248
  8171  06E4                     l2254:	
  8172  06E4  3001               	movlw	1
  8173  06E5                     u2155:	
  8174  06E5  36AA               	lsrf	___ftadd@f1+2,f
  8175  06E6  0CA9               	rrf	___ftadd@f1+1,f
  8176  06E7  0CA8               	rrf	___ftadd@f1,f
  8177  06E8  0B89               	decfsz	9,f
  8178  06E9  2EE5               	goto	u2155
  8179  06EA  3001               	movlw	1
  8180  06EB  00AE               	movwf	??___ftadd
  8181  06EC  082E               	movf	??___ftadd,w
  8182  06ED  07B4               	addwf	___ftadd@exp1,f
  8183  06EE                     l2256:	
  8184  06EE  0834               	movf	___ftadd@exp1,w
  8185  06EF  0633               	xorwf	___ftadd@exp2,w
  8186  06F0  1903               	btfsc	3,2
  8187  06F1  2F18               	goto	l666
  8188  06F2  2EE4               	goto	l2254
  8189  06F3                     l2258:	
  8190  06F3  0834               	movf	___ftadd@exp1,w
  8191  06F4  0233               	subwf	___ftadd@exp2,w
  8192  06F5  1803               	skipnc
  8193  06F6  2F18               	goto	l666
  8194  06F7                     l2260:	
  8195  06F7  3001               	movlw	1
  8196  06F8                     u2185:	
  8197  06F8  35A8               	lslf	___ftadd@f1,f
  8198  06F9  0DA9               	rlf	___ftadd@f1+1,f
  8199  06FA  0DAA               	rlf	___ftadd@f1+2,f
  8200  06FB  0B89               	decfsz	9,f
  8201  06FC  2EF8               	goto	u2185
  8202  06FD  3001               	movlw	1
  8203  06FE  02B4               	subwf	___ftadd@exp1,f
  8204  06FF  0833               	movf	___ftadd@exp2,w
  8205  0700  0634               	xorwf	___ftadd@exp1,w
  8206  0701  1903               	skipnz
  8207  0702  2F14               	goto	l2268
  8208  0703  3001               	movlw	1
  8209  0704  02B2               	subwf	___ftadd@sign,f
  8210  0705  0832               	movf	___ftadd@sign,w
  8211  0706  3907               	andlw	7
  8212  0707  1903               	btfsc	3,2
  8213  0708  2F14               	goto	l2268
  8214  0709  2EF7               	goto	l2260
  8215  070A                     l2266:	
  8216  070A  3001               	movlw	1
  8217  070B                     u2215:	
  8218  070B  36AD               	lsrf	___ftadd@f2+2,f
  8219  070C  0CAC               	rrf	___ftadd@f2+1,f
  8220  070D  0CAB               	rrf	___ftadd@f2,f
  8221  070E  0B89               	decfsz	9,f
  8222  070F  2F0B               	goto	u2215
  8223  0710  3001               	movlw	1
  8224  0711  00AE               	movwf	??___ftadd
  8225  0712  082E               	movf	??___ftadd,w
  8226  0713  07B3               	addwf	___ftadd@exp2,f
  8227  0714                     l2268:	
  8228  0714  0834               	movf	___ftadd@exp1,w
  8229  0715  0633               	xorwf	___ftadd@exp2,w
  8230  0716  1D03               	skipz
  8231  0717  2F0A               	goto	l2266
  8232  0718                     l666:	
  8233  0718  1FB2               	btfss	___ftadd@sign,7
  8234  0719  2F2A               	goto	l2272
  8235  071A  30FF               	movlw	255
  8236  071B  06A8               	xorwf	___ftadd@f1,f
  8237  071C  30FF               	movlw	255
  8238  071D  06A9               	xorwf	___ftadd@f1+1,f
  8239  071E  30FF               	movlw	255
  8240  071F  06AA               	xorwf	___ftadd@f1+2,f
  8241  0720  3001               	movlw	1
  8242  0721  07A8               	addwf	___ftadd@f1,f
  8243  0722  3000               	movlw	0
  8244  0723  1803               	skipnc
  8245  0724  3001               	movlw	1
  8246  0725  07A9               	addwf	___ftadd@f1+1,f
  8247  0726  3000               	movlw	0
  8248  0727  1803               	skipnc
  8249  0728  3001               	movlw	1
  8250  0729  07AA               	addwf	___ftadd@f1+2,f
  8251  072A                     l2272:	
  8252  072A  1F32               	btfss	___ftadd@sign,6
  8253  072B  2F3C               	goto	l2276
  8254  072C  30FF               	movlw	255
  8255  072D  06AB               	xorwf	___ftadd@f2,f
  8256  072E  30FF               	movlw	255
  8257  072F  06AC               	xorwf	___ftadd@f2+1,f
  8258  0730  30FF               	movlw	255
  8259  0731  06AD               	xorwf	___ftadd@f2+2,f
  8260  0732  3001               	movlw	1
  8261  0733  07AB               	addwf	___ftadd@f2,f
  8262  0734  3000               	movlw	0
  8263  0735  1803               	skipnc
  8264  0736  3001               	movlw	1
  8265  0737  07AC               	addwf	___ftadd@f2+1,f
  8266  0738  3000               	movlw	0
  8267  0739  1803               	skipnc
  8268  073A  3001               	movlw	1
  8269  073B  07AD               	addwf	___ftadd@f2+2,f
  8270  073C                     l2276:	
  8271  073C  01B2               	clrf	___ftadd@sign
  8272  073D  0828               	movf	___ftadd@f1,w
  8273  073E  07AB               	addwf	___ftadd@f2,f
  8274  073F  0829               	movf	___ftadd@f1+1,w
  8275  0740  3DAC               	addwfc	___ftadd@f2+1,f
  8276  0741  082A               	movf	___ftadd@f1+2,w
  8277  0742  3DAD               	addwfc	___ftadd@f2+2,f
  8278  0743  1FAD               	btfss	___ftadd@f2+2,7
  8279  0744  2F57               	goto	l2286
  8280  0745  30FF               	movlw	255
  8281  0746  06AB               	xorwf	___ftadd@f2,f
  8282  0747  30FF               	movlw	255
  8283  0748  06AC               	xorwf	___ftadd@f2+1,f
  8284  0749  30FF               	movlw	255
  8285  074A  06AD               	xorwf	___ftadd@f2+2,f
  8286  074B  3001               	movlw	1
  8287  074C  07AB               	addwf	___ftadd@f2,f
  8288  074D  3000               	movlw	0
  8289  074E  1803               	skipnc
  8290  074F  3001               	movlw	1
  8291  0750  07AC               	addwf	___ftadd@f2+1,f
  8292  0751  3000               	movlw	0
  8293  0752  1803               	skipnc
  8294  0753  3001               	movlw	1
  8295  0754  07AD               	addwf	___ftadd@f2+2,f
  8296  0755  01B2               	clrf	___ftadd@sign
  8297  0756  0AB2               	incf	___ftadd@sign,f
  8298  0757                     l2286:	
  8299  0757  082B               	movf	___ftadd@f2,w
  8300  0758  00A0               	movwf	___ftpack@arg
  8301  0759  082C               	movf	___ftadd@f2+1,w
  8302  075A  00A1               	movwf	___ftpack@arg+1
  8303  075B  082D               	movf	___ftadd@f2+2,w
  8304  075C  00A2               	movwf	___ftpack@arg+2
  8305  075D  0834               	movf	___ftadd@exp1,w
  8306  075E  00AE               	movwf	??___ftadd
  8307  075F  082E               	movf	??___ftadd,w
  8308  0760  00A3               	movwf	___ftpack@exp
  8309  0761  0832               	movf	___ftadd@sign,w
  8310  0762  00AF               	movwf	??___ftadd+1
  8311  0763  082F               	movf	??___ftadd+1,w
  8312  0764  00A4               	movwf	___ftpack@sign
  8313  0765  3195  2566         	fcall	___ftpack
  8314  0767  0020               	movlb	0	; select bank0
  8315  0768  0820               	movf	?___ftpack,w
  8316  0769  00A8               	movwf	?___ftadd
  8317  076A  0821               	movf	?___ftpack+1,w
  8318  076B  00A9               	movwf	?___ftadd+1
  8319  076C  0822               	movf	?___ftpack+2,w
  8320  076D  00AA               	movwf	?___ftadd+2
  8321  076E  0008               	return
  8322  076F                     __end_of___ftadd:	
  8323                           
  8324                           	psect	text16
  8325  1083                     __ptext16:	
  8326 ;; *************** function _adc_convert *****************
  8327 ;; Defined at:
  8328 ;;		line 196 in file "user.c"
  8329 ;; Parameters:    Size  Location     Type
  8330 ;;  channel         1    wreg     unsigned char 
  8331 ;; Auto vars:     Size  Location     Type
  8332 ;;  channel         1    3[BANK0 ] unsigned char 
  8333 ;; Return value:  Size  Location     Type
  8334 ;;                  2    0[BANK0 ] unsigned int 
  8335 ;; Registers used:
  8336 ;;		wreg, status,2, status,0
  8337 ;; Tracked objects:
  8338 ;;		On entry : 0/0
  8339 ;;		On exit  : 0/0
  8340 ;;		Unchanged: 0/0
  8341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  8342 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8343 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8344 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8345 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8346 ;;Total ram usage:        4 bytes
  8347 ;; Hardware stack levels used:    1
  8348 ;; Hardware stack levels required when called:    2
  8349 ;; This function calls:
  8350 ;;		Nothing
  8351 ;; This function is called by:
  8352 ;;		_main
  8353 ;; This function uses a non-reentrant model
  8354 ;;
  8355                           
  8356                           
  8357                           ;psect for function _adc_convert
  8358  1083                     _adc_convert:	
  8359                           
  8360                           ;incstack = 0
  8361                           ; Regs used in _adc_convert: [wreg+status,2+status,0]
  8362                           ;adc_convert@channel stored from wreg
  8363  1083  0020               	movlb	0	; select bank0
  8364  1084  00A3               	movwf	adc_convert@channel
  8365                           
  8366                           ;user.c: 197: ADCON0bits.CHS = channel;
  8367  1085  0823               	movf	adc_convert@channel,w
  8368  1086  00A2               	movwf	??_adc_convert
  8369  1087  0DA2               	rlf	??_adc_convert,f
  8370  1088  0DA2               	rlf	??_adc_convert,f
  8371  1089  0021               	movlb	1	; select bank1
  8372  108A  081D               	movf	29,w	;volatile
  8373  108B  0020               	movlb	0	; select bank0
  8374  108C  0622               	xorwf	??_adc_convert,w
  8375  108D  3983               	andlw	-125
  8376  108E  0622               	xorwf	??_adc_convert,w
  8377  108F  0021               	movlb	1	; select bank1
  8378  1090  009D               	movwf	29	;volatile
  8379                           
  8380                           ;user.c: 198: ADCON0bits.GO = 0b1;
  8381  1091  149D               	bsf	29,1	;volatile
  8382  1092                     l414:	
  8383                           ;user.c: 199: while (ADCON0bits.GO_nDONE);
  8384                           
  8385  1092  189D               	btfsc	29,1	;volatile
  8386  1093  2892               	goto	l414
  8387                           
  8388                           ;user.c: 200: return (ADRESH << 8) | ADRESL;
  8389  1094  081C               	movf	28,w	;volatile
  8390  1095  0020               	movlb	0	; select bank0
  8391  1096  00A1               	movwf	?_adc_convert+1
  8392  1097  0021               	movlb	1	; select bank1
  8393  1098  081B               	movf	27,w	;volatile
  8394  1099  0020               	movlb	0	; select bank0
  8395  109A  00A0               	movwf	?_adc_convert
  8396  109B  0008               	return
  8397  109C                     __end_of_adc_convert:	
  8398                           
  8399                           	psect	text17
  8400  1458                     __ptext17:	
  8401 ;; *************** function ___awdiv *****************
  8402 ;; Defined at:
  8403 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awdiv.c"
  8404 ;; Parameters:    Size  Location     Type
  8405 ;;  divisor         2    0[BANK0 ] int 
  8406 ;;  dividend        2    2[BANK0 ] int 
  8407 ;; Auto vars:     Size  Location     Type
  8408 ;;  quotient        2    7[BANK0 ] int 
  8409 ;;  sign            1    6[BANK0 ] unsigned char 
  8410 ;;  counter         1    5[BANK0 ] unsigned char 
  8411 ;; Return value:  Size  Location     Type
  8412 ;;                  2    0[BANK0 ] int 
  8413 ;; Registers used:
  8414 ;;		wreg, status,2, status,0
  8415 ;; Tracked objects:
  8416 ;;		On entry : 0/0
  8417 ;;		On exit  : 0/0
  8418 ;;		Unchanged: 0/0
  8419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  8420 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8421 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8422 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8423 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8424 ;;Total ram usage:        9 bytes
  8425 ;; Hardware stack levels used:    1
  8426 ;; Hardware stack levels required when called:    2
  8427 ;; This function calls:
  8428 ;;		Nothing
  8429 ;; This function is called by:
  8430 ;;		_main
  8431 ;; This function uses a non-reentrant model
  8432 ;;
  8433                           
  8434                           
  8435                           ;psect for function ___awdiv
  8436  1458                     ___awdiv:	
  8437                           
  8438                           ;incstack = 0
  8439                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  8440  1458  0020               	movlb	0	; select bank0
  8441  1459  01A6               	clrf	___awdiv@sign
  8442  145A  1FA1               	btfss	___awdiv@divisor+1,7
  8443  145B  2C63               	goto	l2578
  8444  145C  09A0               	comf	___awdiv@divisor,f
  8445  145D  09A1               	comf	___awdiv@divisor+1,f
  8446  145E  0AA0               	incf	___awdiv@divisor,f
  8447  145F  1903               	skipnz
  8448  1460  0AA1               	incf	___awdiv@divisor+1,f
  8449  1461  01A6               	clrf	___awdiv@sign
  8450  1462  0AA6               	incf	___awdiv@sign,f
  8451  1463                     l2578:	
  8452  1463  1FA3               	btfss	___awdiv@dividend+1,7
  8453  1464  2C6E               	goto	l2584
  8454  1465  09A2               	comf	___awdiv@dividend,f
  8455  1466  09A3               	comf	___awdiv@dividend+1,f
  8456  1467  0AA2               	incf	___awdiv@dividend,f
  8457  1468  1903               	skipnz
  8458  1469  0AA3               	incf	___awdiv@dividend+1,f
  8459  146A  3001               	movlw	1
  8460  146B  00A4               	movwf	??___awdiv
  8461  146C  0824               	movf	??___awdiv,w
  8462  146D  06A6               	xorwf	___awdiv@sign,f
  8463  146E                     l2584:	
  8464  146E  01A7               	clrf	___awdiv@quotient
  8465  146F  01A8               	clrf	___awdiv@quotient+1
  8466  1470  0820               	movf	___awdiv@divisor,w
  8467  1471  0421               	iorwf	___awdiv@divisor+1,w
  8468  1472  1903               	btfsc	3,2
  8469  1473  2C9D               	goto	l2606
  8470  1474  01A5               	clrf	___awdiv@counter
  8471  1475  0AA5               	incf	___awdiv@counter,f
  8472  1476                     l2594:	
  8473  1476  1BA1               	btfsc	___awdiv@divisor+1,7
  8474  1477  2C82               	goto	l2596
  8475  1478  3001               	movlw	1
  8476  1479                     u2675:	
  8477  1479  35A0               	lslf	___awdiv@divisor,f
  8478  147A  0DA1               	rlf	___awdiv@divisor+1,f
  8479  147B  0B89               	decfsz	9,f
  8480  147C  2C79               	goto	u2675
  8481  147D  3001               	movlw	1
  8482  147E  00A4               	movwf	??___awdiv
  8483  147F  0824               	movf	??___awdiv,w
  8484  1480  07A5               	addwf	___awdiv@counter,f
  8485  1481  2C76               	goto	l2594
  8486  1482                     l2596:	
  8487  1482  3001               	movlw	1
  8488  1483                     u2695:	
  8489  1483  35A7               	lslf	___awdiv@quotient,f
  8490  1484  0DA8               	rlf	___awdiv@quotient+1,f
  8491  1485  0B89               	decfsz	9,f
  8492  1486  2C83               	goto	u2695
  8493  1487  0821               	movf	___awdiv@divisor+1,w
  8494  1488  0223               	subwf	___awdiv@dividend+1,w
  8495  1489  1D03               	skipz
  8496  148A  2C8D               	goto	u2705
  8497  148B  0820               	movf	___awdiv@divisor,w
  8498  148C  0222               	subwf	___awdiv@dividend,w
  8499  148D                     u2705:	
  8500  148D  1C03               	skipc
  8501  148E  2C94               	goto	l2602
  8502  148F  0820               	movf	___awdiv@divisor,w
  8503  1490  02A2               	subwf	___awdiv@dividend,f
  8504  1491  0821               	movf	___awdiv@divisor+1,w
  8505  1492  3BA3               	subwfb	___awdiv@dividend+1,f
  8506  1493  1427               	bsf	___awdiv@quotient,0
  8507  1494                     l2602:	
  8508  1494  3001               	movlw	1
  8509  1495                     u2715:	
  8510  1495  36A1               	lsrf	___awdiv@divisor+1,f
  8511  1496  0CA0               	rrf	___awdiv@divisor,f
  8512  1497  0B89               	decfsz	9,f
  8513  1498  2C95               	goto	u2715
  8514  1499  3001               	movlw	1
  8515  149A  02A5               	subwf	___awdiv@counter,f
  8516  149B  1D03               	btfss	3,2
  8517  149C  2C82               	goto	l2596
  8518  149D                     l2606:	
  8519  149D  0826               	movf	___awdiv@sign,w
  8520  149E  1903               	btfsc	3,2
  8521  149F  2CA5               	goto	l2610
  8522  14A0  09A7               	comf	___awdiv@quotient,f
  8523  14A1  09A8               	comf	___awdiv@quotient+1,f
  8524  14A2  0AA7               	incf	___awdiv@quotient,f
  8525  14A3  1903               	skipnz
  8526  14A4  0AA8               	incf	___awdiv@quotient+1,f
  8527  14A5                     l2610:	
  8528  14A5  0828               	movf	___awdiv@quotient+1,w
  8529  14A6  00A1               	movwf	?___awdiv+1
  8530  14A7  0827               	movf	___awdiv@quotient,w
  8531  14A8  00A0               	movwf	?___awdiv
  8532  14A9  0008               	return
  8533  14AA                     __end_of___awdiv:	
  8534                           
  8535                           	psect	text18
  8536  1271                     __ptext18:	
  8537 ;; *************** function ___altoft *****************
  8538 ;; Defined at:
  8539 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\altoft.c"
  8540 ;; Parameters:    Size  Location     Type
  8541 ;;  c               4    8[BANK0 ] long 
  8542 ;; Auto vars:     Size  Location     Type
  8543 ;;  sign            1   15[BANK0 ] unsigned char 
  8544 ;;  exp             1   14[BANK0 ] unsigned char 
  8545 ;; Return value:  Size  Location     Type
  8546 ;;                  3    8[BANK0 ] float 
  8547 ;; Registers used:
  8548 ;;		wreg, status,2, status,0, pclath, cstack
  8549 ;; Tracked objects:
  8550 ;;		On entry : 0/0
  8551 ;;		On exit  : 0/0
  8552 ;;		Unchanged: 0/0
  8553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  8554 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8555 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8556 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8557 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8558 ;;Total ram usage:        8 bytes
  8559 ;; Hardware stack levels used:    1
  8560 ;; Hardware stack levels required when called:    3
  8561 ;; This function calls:
  8562 ;;		___ftpack
  8563 ;; This function is called by:
  8564 ;;		_main
  8565 ;; This function uses a non-reentrant model
  8566 ;;
  8567                           
  8568                           
  8569                           ;psect for function ___altoft
  8570  1271                     ___altoft:	
  8571                           
  8572                           ;incstack = 0
  8573                           ; Regs used in ___altoft: [wreg+status,2+status,0+pclath+cstack]
  8574  1271  0020               	movlb	0	; select bank0
  8575  1272  01AF               	clrf	___altoft@sign
  8576  1273  308E               	movlw	142
  8577  1274  00AC               	movwf	??___altoft
  8578  1275  082C               	movf	??___altoft,w
  8579  1276  00AE               	movwf	___altoft@exp
  8580  1277  1FAB               	btfss	___altoft@c+3,7
  8581  1278  2A86               	goto	l2564
  8582  1279  09A8               	comf	___altoft@c,f
  8583  127A  09A9               	comf	___altoft@c+1,f
  8584  127B  09AA               	comf	___altoft@c+2,f
  8585  127C  09AB               	comf	___altoft@c+3,f
  8586  127D  0AA8               	incf	___altoft@c,f
  8587  127E  1903               	skipnz
  8588  127F  0AA9               	incf	___altoft@c+1,f
  8589  1280  1903               	skipnz
  8590  1281  0AAA               	incf	___altoft@c+2,f
  8591  1282  1903               	skipnz
  8592  1283  0AAB               	incf	___altoft@c+3,f
  8593  1284  01AF               	clrf	___altoft@sign
  8594  1285  0AAF               	incf	___altoft@sign,f
  8595  1286                     l2564:	
  8596  1286  30FF               	movlw	255
  8597  1287  052B               	andwf	___altoft@c+3,w
  8598  1288  1903               	btfsc	3,2
  8599  1289  2A96               	goto	l2566
  8600  128A  3001               	movlw	1
  8601  128B                     u2625:	
  8602  128B  36AB               	lsrf	___altoft@c+3,f
  8603  128C  0CAA               	rrf	___altoft@c+2,f
  8604  128D  0CA9               	rrf	___altoft@c+1,f
  8605  128E  0CA8               	rrf	___altoft@c,f
  8606  128F  0B89               	decfsz	9,f
  8607  1290  2A8B               	goto	u2625
  8608  1291  3001               	movlw	1
  8609  1292  00AC               	movwf	??___altoft
  8610  1293  082C               	movf	??___altoft,w
  8611  1294  07AE               	addwf	___altoft@exp,f
  8612  1295  2A86               	goto	l2564
  8613  1296                     l2566:	
  8614  1296  0828               	movf	___altoft@c,w
  8615  1297  00A0               	movwf	___ftpack@arg
  8616  1298  0829               	movf	___altoft@c+1,w
  8617  1299  00A1               	movwf	___ftpack@arg+1
  8618  129A  082A               	movf	___altoft@c+2,w
  8619  129B  00A2               	movwf	___ftpack@arg+2
  8620  129C  082E               	movf	___altoft@exp,w
  8621  129D  00AC               	movwf	??___altoft
  8622  129E  082C               	movf	??___altoft,w
  8623  129F  00A3               	movwf	___ftpack@exp
  8624  12A0  082F               	movf	___altoft@sign,w
  8625  12A1  00AD               	movwf	??___altoft+1
  8626  12A2  082D               	movf	??___altoft+1,w
  8627  12A3  00A4               	movwf	___ftpack@sign
  8628  12A4  3195  2566         	fcall	___ftpack
  8629  12A6  0020               	movlb	0	; select bank0
  8630  12A7  0820               	movf	?___ftpack,w
  8631  12A8  00A8               	movwf	?___altoft
  8632  12A9  0821               	movf	?___ftpack+1,w
  8633  12AA  00A9               	movwf	?___altoft+1
  8634  12AB  0822               	movf	?___ftpack+2,w
  8635  12AC  00AA               	movwf	?___altoft+2
  8636  12AD  0008               	return
  8637  12AE                     __end_of___altoft:	
  8638                           
  8639                           	psect	text19
  8640  1566                     __ptext19:	
  8641 ;; *************** function ___ftpack *****************
  8642 ;; Defined at:
  8643 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\float.c"
  8644 ;; Parameters:    Size  Location     Type
  8645 ;;  arg             3    0[BANK0 ] unsigned um
  8646 ;;  exp             1    3[BANK0 ] unsigned char 
  8647 ;;  sign            1    4[BANK0 ] unsigned char 
  8648 ;; Auto vars:     Size  Location     Type
  8649 ;;		None
  8650 ;; Return value:  Size  Location     Type
  8651 ;;                  3    0[BANK0 ] float 
  8652 ;; Registers used:
  8653 ;;		wreg, status,2, status,0
  8654 ;; Tracked objects:
  8655 ;;		On entry : 0/0
  8656 ;;		On exit  : 0/0
  8657 ;;		Unchanged: 0/0
  8658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  8659 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8661 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8662 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8663 ;;Total ram usage:        8 bytes
  8664 ;; Hardware stack levels used:    1
  8665 ;; Hardware stack levels required when called:    2
  8666 ;; This function calls:
  8667 ;;		Nothing
  8668 ;; This function is called by:
  8669 ;;		___altoft
  8670 ;;		___awtoft
  8671 ;;		___ftadd
  8672 ;;		___ftdiv
  8673 ;;		___ftmul
  8674 ;; This function uses a non-reentrant model
  8675 ;;
  8676                           
  8677                           
  8678                           ;psect for function ___ftpack
  8679  1566                     ___ftpack:	
  8680                           
  8681                           ;incstack = 0
  8682                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  8683  1566  0020               	movlb	0	; select bank0
  8684  1567  0823               	movf	___ftpack@exp,w
  8685  1568  1903               	btfsc	3,2
  8686  1569  2D6F               	goto	l2012
  8687  156A  0822               	movf	___ftpack@arg+2,w
  8688  156B  0421               	iorwf	___ftpack@arg+1,w
  8689  156C  0420               	iorwf	___ftpack@arg,w
  8690  156D  1D03               	skipz
  8691  156E  2D80               	goto	l2018
  8692  156F                     l2012:	
  8693  156F  3000               	movlw	0
  8694  1570  00A0               	movwf	?___ftpack
  8695  1571  3000               	movlw	0
  8696  1572  00A1               	movwf	?___ftpack+1
  8697  1573  3000               	movlw	0
  8698  1574  00A2               	movwf	?___ftpack+2
  8699  1575  0008               	return
  8700  1576                     l2016:	
  8701  1576  3001               	movlw	1
  8702  1577  00A5               	movwf	??___ftpack
  8703  1578  0825               	movf	??___ftpack,w
  8704  1579  07A3               	addwf	___ftpack@exp,f
  8705  157A  3001               	movlw	1
  8706  157B                     u1705:	
  8707  157B  36A2               	lsrf	___ftpack@arg+2,f
  8708  157C  0CA1               	rrf	___ftpack@arg+1,f
  8709  157D  0CA0               	rrf	___ftpack@arg,f
  8710  157E  0B89               	decfsz	9,f
  8711  157F  2D7B               	goto	u1705
  8712  1580                     l2018:	
  8713  1580  30FE               	movlw	254
  8714  1581  0522               	andwf	___ftpack@arg+2,w
  8715  1582  1903               	btfsc	3,2
  8716  1583  2D99               	goto	l635
  8717  1584  2D76               	goto	l2016
  8718  1585                     l2020:	
  8719  1585  3001               	movlw	1
  8720  1586  00A5               	movwf	??___ftpack
  8721  1587  0825               	movf	??___ftpack,w
  8722  1588  07A3               	addwf	___ftpack@exp,f
  8723  1589  3001               	movlw	1
  8724  158A  07A0               	addwf	___ftpack@arg,f
  8725  158B  3000               	movlw	0
  8726  158C  1803               	skipnc
  8727  158D  3001               	movlw	1
  8728  158E  07A1               	addwf	___ftpack@arg+1,f
  8729  158F  3000               	movlw	0
  8730  1590  1803               	skipnc
  8731  1591  3001               	movlw	1
  8732  1592  07A2               	addwf	___ftpack@arg+2,f
  8733  1593  3001               	movlw	1
  8734  1594                     u1725:	
  8735  1594  36A2               	lsrf	___ftpack@arg+2,f
  8736  1595  0CA1               	rrf	___ftpack@arg+1,f
  8737  1596  0CA0               	rrf	___ftpack@arg,f
  8738  1597  0B89               	decfsz	9,f
  8739  1598  2D94               	goto	u1725
  8740  1599                     l635:	
  8741  1599  30FF               	movlw	255
  8742  159A  0522               	andwf	___ftpack@arg+2,w
  8743  159B  1903               	btfsc	3,2
  8744  159C  2DA6               	goto	l2028
  8745  159D  2D85               	goto	l2020
  8746  159E                     l2026:	
  8747  159E  3001               	movlw	1
  8748  159F  02A3               	subwf	___ftpack@exp,f
  8749  15A0  3001               	movlw	1
  8750  15A1                     u1745:	
  8751  15A1  35A0               	lslf	___ftpack@arg,f
  8752  15A2  0DA1               	rlf	___ftpack@arg+1,f
  8753  15A3  0DA2               	rlf	___ftpack@arg+2,f
  8754  15A4  0B89               	decfsz	9,f
  8755  15A5  2DA1               	goto	u1745
  8756  15A6                     l2028:	
  8757  15A6  1BA1               	btfsc	___ftpack@arg+1,7
  8758  15A7  2DAC               	goto	l642
  8759  15A8  3002               	movlw	2
  8760  15A9  0223               	subwf	___ftpack@exp,w
  8761  15AA  1803               	skipnc
  8762  15AB  2D9E               	goto	l2026
  8763  15AC                     l642:	
  8764  15AC  1823               	btfsc	___ftpack@exp,0
  8765  15AD  2DB4               	goto	l643
  8766  15AE  30FF               	movlw	255
  8767  15AF  05A0               	andwf	___ftpack@arg,f
  8768  15B0  307F               	movlw	127
  8769  15B1  05A1               	andwf	___ftpack@arg+1,f
  8770  15B2  30FF               	movlw	255
  8771  15B3  05A2               	andwf	___ftpack@arg+2,f
  8772  15B4                     l643:	
  8773  15B4  1003               	clrc
  8774  15B5  0CA3               	rrf	___ftpack@exp,f
  8775  15B6  0823               	movf	___ftpack@exp,w
  8776  15B7  00A5               	movwf	??___ftpack
  8777  15B8  01A6               	clrf	??___ftpack+1
  8778  15B9  01A7               	clrf	??___ftpack+2
  8779  15BA  3010               	movlw	16
  8780  15BB                     u1785:	
  8781  15BB  35A5               	lslf	??___ftpack,f
  8782  15BC  0DA6               	rlf	??___ftpack+1,f
  8783  15BD  0DA7               	rlf	??___ftpack+2,f
  8784  15BE  0B89               	decfsz	9,f
  8785  15BF  2DBB               	goto	u1785
  8786  15C0  0825               	movf	??___ftpack,w
  8787  15C1  04A0               	iorwf	___ftpack@arg,f
  8788  15C2  0826               	movf	??___ftpack+1,w
  8789  15C3  04A1               	iorwf	___ftpack@arg+1,f
  8790  15C4  0827               	movf	??___ftpack+2,w
  8791  15C5  04A2               	iorwf	___ftpack@arg+2,f
  8792  15C6  0824               	movf	___ftpack@sign,w
  8793  15C7  1903               	btfsc	3,2
  8794  15C8  0008               	return
  8795  15C9  17A2               	bsf	___ftpack@arg+2,7
  8796  15CA  0008               	return
  8797  15CB                     __end_of___ftpack:	
  8798                           
  8799                           	psect	text20
  8800  10F8                     __ptext20:	
  8801 ;; *************** function _InitApp *****************
  8802 ;; Defined at:
  8803 ;;		line 21 in file "user.c"
  8804 ;; Parameters:    Size  Location     Type
  8805 ;;		None
  8806 ;; Auto vars:     Size  Location     Type
  8807 ;;		None
  8808 ;; Return value:  Size  Location     Type
  8809 ;;                  1    wreg      void 
  8810 ;; Registers used:
  8811 ;;		wreg, status,2, status,0, pclath, cstack
  8812 ;; Tracked objects:
  8813 ;;		On entry : 0/0
  8814 ;;		On exit  : 0/0
  8815 ;;		Unchanged: 0/0
  8816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  8817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8820 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8821 ;;Total ram usage:        0 bytes
  8822 ;; Hardware stack levels used:    1
  8823 ;; Hardware stack levels required when called:    4
  8824 ;; This function calls:
  8825 ;;		_init_adc
  8826 ;;		_init_pwm
  8827 ;; This function is called by:
  8828 ;;		_main
  8829 ;; This function uses a non-reentrant model
  8830 ;;
  8831                           
  8832                           
  8833                           ;psect for function _InitApp
  8834  10F8                     _InitApp:	
  8835                           
  8836                           ;user.c: 22: TRISBbits.TRISB0 = 1;
  8837                           
  8838                           ;incstack = 0
  8839                           ; Regs used in _InitApp: [wreg+status,2+status,0+pclath+cstack]
  8840  10F8  0021               	movlb	1	; select bank1
  8841  10F9  140D               	bsf	13,0	;volatile
  8842                           
  8843                           ;user.c: 23: TRISBbits.TRISB1 = 0;
  8844  10FA  108D               	bcf	13,1	;volatile
  8845                           
  8846                           ;user.c: 24: TRISBbits.TRISB2 = 1;
  8847  10FB  150D               	bsf	13,2	;volatile
  8848                           
  8849                           ;user.c: 25: TRISBbits.TRISB3 = 1;
  8850  10FC  158D               	bsf	13,3	;volatile
  8851                           
  8852                           ;user.c: 26: TRISBbits.TRISB4 = 0;
  8853  10FD  120D               	bcf	13,4	;volatile
  8854                           
  8855                           ;user.c: 27: TRISBbits.TRISB5 = 0;
  8856  10FE  128D               	bcf	13,5	;volatile
  8857                           
  8858                           ;user.c: 28: ANSELBbits.ANSB0 = 0;
  8859  10FF  0023               	movlb	3	; select bank3
  8860  1100  100D               	bcf	13,0	;volatile
  8861                           
  8862                           ;user.c: 29: ANSELBbits.ANSB2 = 0;
  8863  1101  110D               	bcf	13,2	;volatile
  8864                           
  8865                           ;user.c: 30: ANSELBbits.ANSB3 = 0;
  8866  1102  118D               	bcf	13,3	;volatile
  8867                           
  8868                           ;user.c: 32: TRISCbits.TRISC6 = 0;
  8869  1103  0021               	movlb	1	; select bank1
  8870  1104  130E               	bcf	14,6	;volatile
  8871                           
  8872                           ;user.c: 33: TRISCbits.TRISC7 = 0;
  8873  1105  138E               	bcf	14,7	;volatile
  8874                           
  8875                           ;user.c: 35: TRISDbits.TRISD0 = 0;
  8876  1106  100F               	bcf	15,0	;volatile
  8877                           
  8878                           ;user.c: 36: TRISDbits.TRISD1 = 0;
  8879  1107  108F               	bcf	15,1	;volatile
  8880                           
  8881                           ;user.c: 37: TRISDbits.TRISD2 = 0;
  8882  1108  110F               	bcf	15,2	;volatile
  8883                           
  8884                           ;user.c: 38: TRISDbits.TRISD3 = 0;
  8885  1109  118F               	bcf	15,3	;volatile
  8886                           
  8887                           ;user.c: 39: TRISDbits.TRISD4 = 0;
  8888  110A  120F               	bcf	15,4	;volatile
  8889                           
  8890                           ;user.c: 40: TRISDbits.TRISD5 = 1;
  8891  110B  168F               	bsf	15,5	;volatile
  8892                           
  8893                           ;user.c: 41: TRISDbits.TRISD5 = 1;
  8894  110C  168F               	bsf	15,5	;volatile
  8895                           
  8896                           ;user.c: 43: TRISEbits.TRISE0 = 1;
  8897  110D  1410               	bsf	16,0	;volatile
  8898                           
  8899                           ;user.c: 44: TRISEbits.TRISE1 = 1;
  8900  110E  1490               	bsf	16,1	;volatile
  8901                           
  8902                           ;user.c: 45: ANSELEbits.ANSE0 = 0;
  8903  110F  0023               	movlb	3	; select bank3
  8904  1110  1010               	bcf	16,0	;volatile
  8905                           
  8906                           ;user.c: 46: ANSELEbits.ANSE1 = 0;
  8907  1111  1090               	bcf	16,1	;volatile
  8908                           
  8909                           ;user.c: 47: PORTEbits.RE0 = 0;
  8910  1112  0020               	movlb	0	; select bank0
  8911  1113  1010               	bcf	16,0	;volatile
  8912                           
  8913                           ;user.c: 48: PORTEbits.RE1 = 0;
  8914  1114  1090               	bcf	16,1	;volatile
  8915                           
  8916                           ;user.c: 50: TRISFbits.TRISF0 = 0;
  8917  1115  0026               	movlb	6	; select bank6
  8918  1116  100C               	bcf	12,0	;volatile
  8919                           
  8920                           ;user.c: 51: TRISFbits.TRISF1 = 0;
  8921  1117  108C               	bcf	12,1	;volatile
  8922                           
  8923                           ;user.c: 52: TRISFbits.TRISF2 = 0;
  8924  1118  110C               	bcf	12,2	;volatile
  8925                           
  8926                           ;user.c: 53: TRISFbits.TRISF3 = 0;
  8927  1119  118C               	bcf	12,3	;volatile
  8928                           
  8929                           ;user.c: 54: TRISFbits.TRISF4 = 0;
  8930  111A  120C               	bcf	12,4	;volatile
  8931                           
  8932                           ;user.c: 55: TRISFbits.TRISF5 = 0;
  8933  111B  128C               	bcf	12,5	;volatile
  8934                           
  8935                           ;user.c: 56: TRISFbits.TRISF6 = 0;
  8936  111C  130C               	bcf	12,6	;volatile
  8937                           
  8938                           ;user.c: 58: TRISGbits.TRISG1 = 0;
  8939  111D  108D               	bcf	13,1	;volatile
  8940                           
  8941                           ;user.c: 59: TRISGbits.TRISG2 = 0;
  8942  111E  110D               	bcf	13,2	;volatile
  8943                           
  8944                           ;user.c: 61: init_adc();
  8945  111F  3190  2041  3190   	fcall	_init_adc
  8946                           
  8947                           ;user.c: 62: init_pwm();
  8948  1122  3192  22EC         	fcall	_init_pwm
  8949                           
  8950                           ;user.c: 64: INTCONbits.GIE = 0b1;
  8951  1124  178B               	bsf	11,7	;volatile
  8952                           
  8953                           ;user.c: 65: INTCONbits.TMR0IE = 0b1;
  8954  1125  168B               	bsf	11,5	;volatile
  8955                           
  8956                           ;user.c: 66: INTCONbits.TMR0IF = 0b0;
  8957  1126  110B               	bcf	11,2	;volatile
  8958  1127  0008               	return
  8959  1128                     __end_of_InitApp:	
  8960                           
  8961                           	psect	text21
  8962  12EC                     __ptext21:	
  8963 ;; *************** function _init_pwm *****************
  8964 ;; Defined at:
  8965 ;;		line 203 in file "user.c"
  8966 ;; Parameters:    Size  Location     Type
  8967 ;;		None
  8968 ;; Auto vars:     Size  Location     Type
  8969 ;;		None
  8970 ;; Return value:  Size  Location     Type
  8971 ;;                  1    wreg      void 
  8972 ;; Registers used:
  8973 ;;		wreg, status,2, status,0, pclath, cstack
  8974 ;; Tracked objects:
  8975 ;;		On entry : 0/0
  8976 ;;		On exit  : 0/0
  8977 ;;		Unchanged: 0/0
  8978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  8979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8982 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8983 ;;Total ram usage:        0 bytes
  8984 ;; Hardware stack levels used:    1
  8985 ;; Hardware stack levels required when called:    3
  8986 ;; This function calls:
  8987 ;;		_init_timer0
  8988 ;;		_init_timer2
  8989 ;; This function is called by:
  8990 ;;		_InitApp
  8991 ;; This function uses a non-reentrant model
  8992 ;;
  8993                           
  8994                           
  8995                           ;psect for function _init_pwm
  8996  12EC                     _init_pwm:	
  8997                           
  8998                           ;user.c: 204: APFCONbits.CCP2SEL = 0;
  8999                           
  9000                           ;incstack = 0
  9001                           ; Regs used in _init_pwm: [wreg+status,2+status,0+pclath+cstack]
  9002  12EC  0022               	movlb	2	; select bank2
  9003  12ED  101D               	bcf	29,0	;volatile
  9004                           
  9005                           ;user.c: 205: TRISCbits.TRISC2 = 0;
  9006  12EE  0021               	movlb	1	; select bank1
  9007  12EF  110E               	bcf	14,2	;volatile
  9008                           
  9009                           ;user.c: 206: TRISCbits.TRISC1 = 0;
  9010  12F0  108E               	bcf	14,1	;volatile
  9011                           
  9012                           ;user.c: 207: TRISGbits.TRISG0 = 0;
  9013  12F1  0026               	movlb	6	; select bank6
  9014  12F2  100D               	bcf	13,0	;volatile
  9015                           
  9016                           ;user.c: 208: TRISGbits.TRISG3 = 0;
  9017  12F3  118D               	bcf	13,3	;volatile
  9018                           
  9019                           ;user.c: 209: TRISGbits.TRISG4 = 0;
  9020  12F4  120D               	bcf	13,4	;volatile
  9021                           
  9022                           ;user.c: 210: TRISEbits.TRISE6 = 0;
  9023  12F5  0021               	movlb	1	; select bank1
  9024  12F6  1310               	bcf	16,6	;volatile
  9025                           
  9026                           ;user.c: 211: TRISEbits.TRISE5 = 0;
  9027  12F7  1290               	bcf	16,5	;volatile
  9028                           
  9029                           ;user.c: 212: TRISEbits.TRISE4 = 0;
  9030  12F8  1210               	bcf	16,4	;volatile
  9031                           
  9032                           ;user.c: 213: TRISEbits.TRISE3 = 0;
  9033  12F9  1190               	bcf	16,3	;volatile
  9034                           
  9035                           ;user.c: 214: TRISEbits.TRISE2 = 0;
  9036  12FA  1110               	bcf	16,2	;volatile
  9037                           
  9038                           ;user.c: 215: CCP1CONbits.CCP1M = 0b1111;
  9039  12FB  300F               	movlw	15
  9040  12FC  0025               	movlb	5	; select bank5
  9041  12FD  0493               	iorwf	19,f	;volatile
  9042                           
  9043                           ;user.c: 216: CCP2CONbits.CCP2M = 0b1111;
  9044  12FE  300F               	movlw	15
  9045  12FF  049A               	iorwf	26,f	;volatile
  9046                           
  9047                           ;user.c: 217: CCP3CONbits.CCP3M = 0b1111;
  9048  1300  300F               	movlw	15
  9049  1301  0026               	movlb	6	; select bank6
  9050  1302  0493               	iorwf	19,f	;volatile
  9051                           
  9052                           ;user.c: 218: CCP4CONbits.CCP4M = 0b1111;
  9053  1303  300F               	movlw	15
  9054  1304  049A               	iorwf	26,f	;volatile
  9055                           
  9056                           ;user.c: 219: CCP5CONbits.CCP5M = 0b1111;
  9057  1305  300F               	movlw	15
  9058  1306  049E               	iorwf	30,f	;volatile
  9059                           
  9060                           ;user.c: 220: CCP6CONbits.CCP6M = 0b1111;
  9061  1307  300F               	movlw	15
  9062  1308  002C               	movlb	12	; select bank12
  9063  1309  0493               	iorwf	19,f	;volatile
  9064                           
  9065                           ;user.c: 221: CCP7CONbits.CCP7M = 0b1111;
  9066  130A  300F               	movlw	15
  9067  130B  0496               	iorwf	22,f	;volatile
  9068                           
  9069                           ;user.c: 222: CCP8CONbits.CCP8M = 0b1111;
  9070  130C  300F               	movlw	15
  9071  130D  0499               	iorwf	25,f	;volatile
  9072                           
  9073                           ;user.c: 223: CCP9CONbits.CCP9M = 0b1111;
  9074  130E  300F               	movlw	15
  9075  130F  049C               	iorwf	28,f	;volatile
  9076                           
  9077                           ;user.c: 224: CCP10CONbits.CCP10M = 0b1111;
  9078  1310  300F               	movlw	15
  9079  1311  049F               	iorwf	31,f	;volatile
  9080                           
  9081                           ;user.c: 225: CCPTMRS0 = 0b00000000;
  9082  1312  0025               	movlb	5	; select bank5
  9083  1313  019D               	clrf	29	;volatile
  9084                           
  9085                           ;user.c: 226: CCPTMRS1 = 0b00000000;
  9086  1314  019E               	clrf	30	;volatile
  9087                           
  9088                           ;user.c: 227: CCPTMRS2 = 0b00000000;
  9089  1315  019F               	clrf	31	;volatile
  9090                           
  9091                           ;user.c: 228: CCPR1 = 50;
  9092  1316  3000               	movlw	0
  9093  1317  0092               	movwf	18	;volatile
  9094  1318  3032               	movlw	50
  9095  1319  0091               	movwf	17	;volatile
  9096                           
  9097                           ;user.c: 229: CCPR2 = 100;
  9098  131A  3000               	movlw	0
  9099  131B  0099               	movwf	25	;volatile
  9100  131C  3064               	movlw	100
  9101  131D  0098               	movwf	24	;volatile
  9102                           
  9103                           ;user.c: 230: CCPR3 = 150;
  9104  131E  3000               	movlw	0
  9105  131F  0026               	movlb	6	; select bank6
  9106  1320  0092               	movwf	18	;volatile
  9107  1321  3096               	movlw	150
  9108  1322  0091               	movwf	17	;volatile
  9109                           
  9110                           ;user.c: 231: CCPR4 = 200;
  9111  1323  3000               	movlw	0
  9112  1324  0099               	movwf	25	;volatile
  9113  1325  30C8               	movlw	200
  9114  1326  0098               	movwf	24	;volatile
  9115                           
  9116                           ;user.c: 232: init_timer2();
  9117  1327  3190  202F  3192   	fcall	_init_timer2
  9118                           
  9119                           ;user.c: 233: init_timer0();
  9120  132A  3188  2000         	fcall	_init_timer0
  9121  132C  0008               	return
  9122  132D                     __end_of_init_pwm:	
  9123                           
  9124                           	psect	text22
  9125  102F                     __ptext22:	
  9126 ;; *************** function _init_timer2 *****************
  9127 ;; Defined at:
  9128 ;;		line 236 in file "user.c"
  9129 ;; Parameters:    Size  Location     Type
  9130 ;;		None
  9131 ;; Auto vars:     Size  Location     Type
  9132 ;;		None
  9133 ;; Return value:  Size  Location     Type
  9134 ;;                  1    wreg      void 
  9135 ;; Registers used:
  9136 ;;		wreg, status,2, status,0
  9137 ;; Tracked objects:
  9138 ;;		On entry : 0/0
  9139 ;;		On exit  : 0/0
  9140 ;;		Unchanged: 0/0
  9141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  9142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9145 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9146 ;;Total ram usage:        0 bytes
  9147 ;; Hardware stack levels used:    1
  9148 ;; Hardware stack levels required when called:    2
  9149 ;; This function calls:
  9150 ;;		Nothing
  9151 ;; This function is called by:
  9152 ;;		_init_pwm
  9153 ;; This function uses a non-reentrant model
  9154 ;;
  9155                           
  9156                           
  9157                           ;psect for function _init_timer2
  9158  102F                     _init_timer2:	
  9159                           
  9160                           ;user.c: 237: T2CONbits.T2OUTPS = 0b0000;
  9161                           
  9162                           ;incstack = 0
  9163                           ; Regs used in _init_timer2: [wreg+status,2+status,0]
  9164  102F  3087               	movlw	-121
  9165  1030  0020               	movlb	0	; select bank0
  9166  1031  059C               	andwf	28,f	;volatile
  9167                           
  9168                           ;user.c: 238: T2CONbits.T2CKPS = 0b00;
  9169  1032  30FC               	movlw	-4
  9170  1033  059C               	andwf	28,f	;volatile
  9171                           
  9172                           ;user.c: 239: PR2 = 0xFF;
  9173  1034  30FF               	movlw	255
  9174  1035  009B               	movwf	27	;volatile
  9175                           
  9176                           ;user.c: 240: T2CONbits.TMR2ON = 1;
  9177  1036  151C               	bsf	28,2	;volatile
  9178  1037  0008               	return
  9179  1038                     __end_of_init_timer2:	
  9180                           
  9181                           	psect	text23
  9182  0800                     __ptext23:	
  9183 ;; *************** function _init_timer0 *****************
  9184 ;; Defined at:
  9185 ;;		line 243 in file "user.c"
  9186 ;; Parameters:    Size  Location     Type
  9187 ;;		None
  9188 ;; Auto vars:     Size  Location     Type
  9189 ;;		None
  9190 ;; Return value:  Size  Location     Type
  9191 ;;                  1    wreg      void 
  9192 ;; Registers used:
  9193 ;;		None
  9194 ;; Tracked objects:
  9195 ;;		On entry : 0/0
  9196 ;;		On exit  : 0/0
  9197 ;;		Unchanged: 0/0
  9198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  9199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9202 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9203 ;;Total ram usage:        0 bytes
  9204 ;; Hardware stack levels used:    1
  9205 ;; Hardware stack levels required when called:    2
  9206 ;; This function calls:
  9207 ;;		Nothing
  9208 ;; This function is called by:
  9209 ;;		_init_pwm
  9210 ;; This function uses a non-reentrant model
  9211 ;;
  9212                           
  9213                           
  9214                           ;psect for function _init_timer0
  9215  0800                     _init_timer0:	
  9216                           
  9217                           ;user.c: 244: OPTION_REGbits.TMR0CS = 0b0;
  9218                           
  9219                           ;incstack = 0
  9220                           ; Regs used in _init_timer0: []
  9221  0800  0021               	movlb	1	; select bank1
  9222  0801  1295               	bcf	21,5	;volatile
  9223                           
  9224                           ;user.c: 245: OPTION_REGbits.PSA = 0b0;
  9225  0802  1195               	bcf	21,3	;volatile
  9226                           
  9227                           ;user.c: 246: OPTION_REGbits.PS0 = 0b0;
  9228  0803  1015               	bcf	21,0	;volatile
  9229                           
  9230                           ;user.c: 247: OPTION_REGbits.PS1 = 0b1;
  9231  0804  1495               	bsf	21,1	;volatile
  9232                           
  9233                           ;user.c: 248: OPTION_REGbits.PS2 = 0b0;
  9234  0805  1115               	bcf	21,2	;volatile
  9235  0806  0008               	return
  9236  0807                     __end_of_init_timer0:	
  9237                           
  9238                           	psect	text24
  9239  1041                     __ptext24:	
  9240 ;; *************** function _init_adc *****************
  9241 ;; Defined at:
  9242 ;;		line 189 in file "user.c"
  9243 ;; Parameters:    Size  Location     Type
  9244 ;;		None
  9245 ;; Auto vars:     Size  Location     Type
  9246 ;;		None
  9247 ;; Return value:  Size  Location     Type
  9248 ;;                  1    wreg      void 
  9249 ;; Registers used:
  9250 ;;		wreg, status,2, status,0
  9251 ;; Tracked objects:
  9252 ;;		On entry : 0/0
  9253 ;;		On exit  : 0/0
  9254 ;;		Unchanged: 0/0
  9255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  9256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9259 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9260 ;;Total ram usage:        0 bytes
  9261 ;; Hardware stack levels used:    1
  9262 ;; Hardware stack levels required when called:    2
  9263 ;; This function calls:
  9264 ;;		Nothing
  9265 ;; This function is called by:
  9266 ;;		_InitApp
  9267 ;; This function uses a non-reentrant model
  9268 ;;
  9269                           
  9270                           
  9271                           ;psect for function _init_adc
  9272  1041                     _init_adc:	
  9273                           
  9274                           ;user.c: 190: ADCON1bits.ADFM = 0b1;
  9275                           
  9276                           ;incstack = 0
  9277                           ; Regs used in _init_adc: [wreg+status,2+status,0]
  9278  1041  0021               	movlb	1	; select bank1
  9279  1042  179E               	bsf	30,7	;volatile
  9280                           
  9281                           ;user.c: 191: ADCON1bits.ADCS = 0b110;
  9282  1043  081E               	movf	30,w	;volatile
  9283  1044  398F               	andlw	-113
  9284  1045  3860               	iorlw	96
  9285  1046  009E               	movwf	30	;volatile
  9286                           
  9287                           ;user.c: 192: ADCON1bits.ADPREF = 0b00;
  9288  1047  30FC               	movlw	-4
  9289  1048  059E               	andwf	30,f	;volatile
  9290                           
  9291                           ;user.c: 193: ADCON0bits.ADON = 0b1;
  9292  1049  141D               	bsf	29,0	;volatile
  9293  104A  0008               	return
  9294  104B                     __end_of_init_adc:	
  9295                           
  9296                           	psect	text25
  9297  132D                     __ptext25:	
  9298 ;; *************** function _FLASH_WriteWord *****************
  9299 ;; Defined at:
  9300 ;;		line 74 in file "memory.c"
  9301 ;; Parameters:    Size  Location     Type
  9302 ;;  flashAddr       2   13[BANK0 ] unsigned int 
  9303 ;;  ramBuf          1   15[BANK0 ] PTR unsigned int 
  9304 ;;		 -> myBuf(64), 
  9305 ;;  word            2   16[BANK0 ] unsigned int 
  9306 ;; Auto vars:     Size  Location     Type
  9307 ;;  blockStartAd    2   20[BANK0 ] unsigned int 
  9308 ;;  i               1   22[BANK0 ] unsigned char 
  9309 ;;  offset          1   19[BANK0 ] unsigned char 
  9310 ;; Return value:  Size  Location     Type
  9311 ;;                  1    wreg      void 
  9312 ;; Registers used:
  9313 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9314 ;; Tracked objects:
  9315 ;;		On entry : 0/0
  9316 ;;		On exit  : 0/0
  9317 ;;		Unchanged: 0/0
  9318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  9319 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9320 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9321 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9322 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9323 ;;Total ram usage:       10 bytes
  9324 ;; Hardware stack levels used:    1
  9325 ;; Hardware stack levels required when called:    4
  9326 ;; This function calls:
  9327 ;;		_FLASH_ReadWord
  9328 ;;		_FLASH_WriteBlock
  9329 ;; This function is called by:
  9330 ;;		_main
  9331 ;; This function uses a non-reentrant model
  9332 ;;
  9333                           
  9334                           
  9335                           ;psect for function _FLASH_WriteWord
  9336  132D                     _FLASH_WriteWord:	
  9337                           
  9338                           ;memory.c: 75: uint16_t blockStartAddr = (uint16_t) (flashAddr & ((16384 - 1) ^ (32 - 1)
      +                          ));
  9339                           
  9340                           ;incstack = 0
  9341                           ; Regs used in _FLASH_WriteWord: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9342  132D  30E0               	movlw	224
  9343  132E  0020               	movlb	0	; select bank0
  9344  132F  052D               	andwf	FLASH_WriteWord@flashAddr,w
  9345  1330  00B4               	movwf	FLASH_WriteWord@blockStartAddr
  9346  1331  303F               	movlw	63
  9347  1332  052E               	andwf	FLASH_WriteWord@flashAddr+1,w
  9348  1333  00B5               	movwf	FLASH_WriteWord@blockStartAddr+1
  9349                           
  9350                           ;memory.c: 76: uint8_t offset = (uint8_t) (flashAddr & (32 - 1));
  9351  1334  082D               	movf	FLASH_WriteWord@flashAddr,w
  9352  1335  391F               	andlw	31
  9353  1336  00B2               	movwf	??_FLASH_WriteWord
  9354  1337  0832               	movf	??_FLASH_WriteWord,w
  9355  1338  00B3               	movwf	FLASH_WriteWord@offset
  9356                           
  9357                           ;memory.c: 77: uint8_t i;
  9358                           ;memory.c: 80: for (i = 0; i < 32; i++) {
  9359  1339  01B6               	clrf	FLASH_WriteWord@i
  9360  133A  3020               	movlw	32
  9361  133B  0236               	subwf	FLASH_WriteWord@i,w
  9362  133C  1803               	btfsc	3,0
  9363  133D  2B5C               	goto	l2512
  9364  133E                     l2506:	
  9365                           
  9366                           ;memory.c: 81: ramBuf[i] = FLASH_ReadWord((blockStartAddr + i));
  9367  133E  0836               	movf	FLASH_WriteWord@i,w
  9368  133F  0734               	addwf	FLASH_WriteWord@blockStartAddr,w
  9369  1340  00A0               	movwf	FLASH_ReadWord@flashAddr
  9370  1341  0835               	movf	FLASH_WriteWord@blockStartAddr+1,w
  9371  1342  1803               	skipnc
  9372  1343  0A35               	incf	FLASH_WriteWord@blockStartAddr+1,w
  9373  1344  00A1               	movwf	FLASH_ReadWord@flashAddr+1
  9374  1345  3190  20B8  3193   	fcall	_FLASH_ReadWord
  9375  1348  0020               	movlb	0	; select bank0
  9376  1349  3536               	lslf	FLASH_WriteWord@i,w
  9377  134A  072F               	addwf	FLASH_WriteWord@ramBuf,w
  9378  134B  00B2               	movwf	??_FLASH_WriteWord
  9379  134C  0832               	movf	??_FLASH_WriteWord,w
  9380  134D  0086               	movwf	6
  9381  134E  3002               	movlw	2	; select bank4/5
  9382  134F  0087               	movwf	7
  9383  1350  0820               	movf	?_FLASH_ReadWord,w
  9384  1351  3FC0               	movwi [0]fsr1
  9385  1352  0821               	movf	?_FLASH_ReadWord+1,w
  9386  1353  3FC1               	movwi [1]fsr1
  9387  1354  3001               	movlw	1
  9388  1355  00B2               	movwf	??_FLASH_WriteWord
  9389  1356  0832               	movf	??_FLASH_WriteWord,w
  9390  1357  07B6               	addwf	FLASH_WriteWord@i,f
  9391  1358  3020               	movlw	32
  9392  1359  0236               	subwf	FLASH_WriteWord@i,w
  9393  135A  1C03               	skipc
  9394  135B  2B3E               	goto	l2506
  9395  135C                     l2512:	
  9396                           
  9397                           ;memory.c: 82: }
  9398                           ;memory.c: 85: ramBuf[offset] = word;
  9399  135C  3533               	lslf	FLASH_WriteWord@offset,w
  9400  135D  072F               	addwf	FLASH_WriteWord@ramBuf,w
  9401  135E  00B2               	movwf	??_FLASH_WriteWord
  9402  135F  0832               	movf	??_FLASH_WriteWord,w
  9403  1360  0086               	movwf	6
  9404  1361  3002               	movlw	2	; select bank4/5
  9405  1362  0087               	movwf	7
  9406  1363  0830               	movf	FLASH_WriteWord@word,w
  9407  1364  3FC0               	movwi [0]fsr1
  9408  1365  0831               	movf	FLASH_WriteWord@word+1,w
  9409  1366  3FC1               	movwi [1]fsr1
  9410                           
  9411                           ;memory.c: 88: FLASH_WriteBlock(blockStartAddr, ramBuf);
  9412  1367  0835               	movf	FLASH_WriteWord@blockStartAddr+1,w
  9413  1368  00A4               	movwf	FLASH_WriteBlock@writeAddr+1
  9414  1369  0834               	movf	FLASH_WriteWord@blockStartAddr,w
  9415  136A  00A3               	movwf	FLASH_WriteBlock@writeAddr
  9416  136B  082F               	movf	FLASH_WriteWord@ramBuf,w
  9417  136C  00B2               	movwf	??_FLASH_WriteWord
  9418  136D  0832               	movf	??_FLASH_WriteWord,w
  9419  136E  00A5               	movwf	FLASH_WriteBlock@flashWordArray
  9420  136F  3195  25CB         	fcall	_FLASH_WriteBlock
  9421  1371  0008               	return
  9422  1372                     __end_of_FLASH_WriteWord:	
  9423                           
  9424                           	psect	text26
  9425  15CB                     __ptext26:	
  9426 ;; *************** function _FLASH_WriteBlock *****************
  9427 ;; Defined at:
  9428 ;;		line 91 in file "memory.c"
  9429 ;; Parameters:    Size  Location     Type
  9430 ;;  writeAddr       2    3[BANK0 ] unsigned int 
  9431 ;;  flashWordArr    1    5[BANK0 ] PTR unsigned int 
  9432 ;;		 -> myBuf(64), 
  9433 ;; Auto vars:     Size  Location     Type
  9434 ;;  blockStartAd    2    9[BANK0 ] unsigned int 
  9435 ;;  i               1   12[BANK0 ] unsigned char 
  9436 ;;  GIEBitValue     1   11[BANK0 ] unsigned char 
  9437 ;; Return value:  Size  Location     Type
  9438 ;;                  1    wreg      char 
  9439 ;; Registers used:
  9440 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9441 ;; Tracked objects:
  9442 ;;		On entry : 0/0
  9443 ;;		On exit  : 0/0
  9444 ;;		Unchanged: 0/0
  9445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  9446 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9447 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9448 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9449 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9450 ;;Total ram usage:       10 bytes
  9451 ;; Hardware stack levels used:    1
  9452 ;; Hardware stack levels required when called:    3
  9453 ;; This function calls:
  9454 ;;		_FLASH_EraseBlock
  9455 ;; This function is called by:
  9456 ;;		_FLASH_WriteWord
  9457 ;; This function uses a non-reentrant model
  9458 ;;
  9459                           
  9460                           
  9461                           ;psect for function _FLASH_WriteBlock
  9462  15CB                     _FLASH_WriteBlock:	
  9463                           
  9464                           ;memory.c: 92: uint16_t blockStartAddr = (uint16_t) (writeAddr & ((16384 - 1) ^ (32 - 1)
      +                          ));
  9465                           
  9466                           ;incstack = 0
  9467                           ; Regs used in _FLASH_WriteBlock: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9468  15CB  30E0               	movlw	224
  9469  15CC  0020               	movlb	0	; select bank0
  9470  15CD  0523               	andwf	FLASH_WriteBlock@writeAddr,w
  9471  15CE  00A9               	movwf	FLASH_WriteBlock@blockStartAddr
  9472  15CF  303F               	movlw	63
  9473  15D0  0524               	andwf	FLASH_WriteBlock@writeAddr+1,w
  9474  15D1  00AA               	movwf	FLASH_WriteBlock@blockStartAddr+1
  9475                           
  9476                           ;memory.c: 93: uint8_t GIEBitValue = INTCONbits.GIE;
  9477  15D2  3000               	movlw	0
  9478  15D3  1B8B               	btfsc	11,7	;volatile
  9479  15D4  3001               	movlw	1
  9480  15D5  00AB               	movwf	FLASH_WriteBlock@GIEBitValue
  9481                           
  9482                           ;memory.c: 94: uint8_t i;
  9483                           ;memory.c: 97: if (writeAddr != blockStartAddr) {
  9484  15D6  082A               	movf	FLASH_WriteBlock@blockStartAddr+1,w
  9485  15D7  0624               	xorwf	FLASH_WriteBlock@writeAddr+1,w
  9486  15D8  1D03               	skipz
  9487  15D9  2DDC               	goto	u1805
  9488  15DA  0829               	movf	FLASH_WriteBlock@blockStartAddr,w
  9489  15DB  0623               	xorwf	FLASH_WriteBlock@writeAddr,w
  9490  15DC                     u1805:	
  9491  15DC  1D03               	btfss	3,2
  9492  15DD  0008               	return
  9493                           
  9494                           ;memory.c: 99: }
  9495                           ;memory.c: 101: INTCONbits.GIE = 0;
  9496                           
  9497                           ;memory.c: 98: return -1;
  9498                           ;	Return value of _FLASH_WriteBlock is never used
  9499  15DE  138B               	bcf	11,7	;volatile
  9500                           
  9501                           ;memory.c: 104: FLASH_EraseBlock(writeAddr);
  9502  15DF  0824               	movf	FLASH_WriteBlock@writeAddr+1,w
  9503  15E0  00A1               	movwf	FLASH_EraseBlock@startAddr+1
  9504  15E1  0823               	movf	FLASH_WriteBlock@writeAddr,w
  9505  15E2  00A0               	movwf	FLASH_EraseBlock@startAddr
  9506  15E3  3190  20D8  3195   	fcall	_FLASH_EraseBlock
  9507                           
  9508                           ;memory.c: 107: PMCON1bits.CFGS = 0;
  9509  15E6  0023               	movlb	3	; select bank3
  9510  15E7  1315               	bcf	21,6	;volatile
  9511                           
  9512                           ;memory.c: 108: PMCON1bits.WREN = 1;
  9513  15E8  1515               	bsf	21,2	;volatile
  9514                           
  9515                           ;memory.c: 109: PMCON1bits.LWLO = 1;
  9516  15E9  1695               	bsf	21,5	;volatile
  9517                           
  9518                           ;memory.c: 111: for (i = 0; i < 32; i++) {
  9519  15EA  0020               	movlb	0	; select bank0
  9520  15EB  01AC               	clrf	FLASH_WriteBlock@i
  9521  15EC  3020               	movlw	32
  9522  15ED  022C               	subwf	FLASH_WriteBlock@i,w
  9523  15EE  1803               	btfsc	3,0
  9524  15EF  2E2D               	goto	l466
  9525  15F0                     l2112:	
  9526                           
  9527                           ;memory.c: 113: PMADRL = (writeAddr & 0xFF);
  9528  15F0  0823               	movf	FLASH_WriteBlock@writeAddr,w
  9529  15F1  0023               	movlb	3	; select bank3
  9530  15F2  0091               	movwf	17	;volatile
  9531                           
  9532                           ;memory.c: 115: PMADRH = ((writeAddr & 0xFF00) >> 8);
  9533  15F3  0020               	movlb	0	; select bank0
  9534  15F4  0824               	movf	FLASH_WriteBlock@writeAddr+1,w
  9535  15F5  0023               	movlb	3	; select bank3
  9536  15F6  0092               	movwf	18	;volatile
  9537                           
  9538                           ;memory.c: 118: PMDATL = flashWordArray[i];
  9539  15F7  0020               	movlb	0	; select bank0
  9540  15F8  352C               	lslf	FLASH_WriteBlock@i,w
  9541  15F9  0725               	addwf	FLASH_WriteBlock@flashWordArray,w
  9542  15FA  00A6               	movwf	??_FLASH_WriteBlock
  9543  15FB  0826               	movf	??_FLASH_WriteBlock,w
  9544  15FC  0086               	movwf	6
  9545  15FD  3002               	movlw	2	; select bank4/5
  9546  15FE  0087               	movwf	7
  9547  15FF  0801               	movf	1,w
  9548  1600  0023               	movlb	3	; select bank3
  9549  1601  0093               	movwf	19	;volatile
  9550                           
  9551                           ;memory.c: 119: PMDATH = ((flashWordArray[i] & 0xFF00) >> 8);
  9552  1602  0020               	movlb	0	; select bank0
  9553  1603  352C               	lslf	FLASH_WriteBlock@i,w
  9554  1604  0725               	addwf	FLASH_WriteBlock@flashWordArray,w
  9555  1605  00A6               	movwf	??_FLASH_WriteBlock
  9556  1606  0826               	movf	??_FLASH_WriteBlock,w
  9557  1607  0086               	movwf	6
  9558  1608  3002               	movlw	2	; select bank4/5
  9559  1609  0087               	movwf	7
  9560  160A  3F40               	moviw [0]fsr1
  9561  160B  00A7               	movwf	??_FLASH_WriteBlock+1
  9562  160C  3F41               	moviw [1]fsr1
  9563  160D  00A8               	movwf	??_FLASH_WriteBlock+2
  9564  160E  0828               	movf	??_FLASH_WriteBlock+2,w
  9565  160F  0023               	movlb	3	; select bank3
  9566  1610  0094               	movwf	20	;volatile
  9567                           
  9568                           ;memory.c: 121: if (i == (32 - 1)) {
  9569  1611  301F               	movlw	31
  9570  1612  0020               	movlb	0	; select bank0
  9571  1613  062C               	xorwf	FLASH_WriteBlock@i,w
  9572  1614  1D03               	btfss	3,2
  9573  1615  2E18               	goto	l2124
  9574                           
  9575                           ;memory.c: 123: PMCON1bits.LWLO = 0;
  9576  1616  0023               	movlb	3	; select bank3
  9577  1617  1295               	bcf	21,5	;volatile
  9578  1618                     l2124:	
  9579                           
  9580                           ;memory.c: 124: }
  9581                           ;memory.c: 126: PMCON2 = 0x55;
  9582  1618  3055               	movlw	85
  9583  1619  0023               	movlb	3	; select bank3
  9584  161A  0096               	movwf	22	;volsfr
  9585                           
  9586                           ;memory.c: 127: PMCON2 = 0xAA;
  9587  161B  30AA               	movlw	170
  9588  161C  0096               	movwf	22	;volsfr
  9589                           
  9590                           ;memory.c: 128: PMCON1bits.WR = 1;
  9591  161D  1495               	bsf	21,1	;volatile
  9592                           
  9593                           ;memory.c: 129: __nop();
  9594  161E  0000               	nop
  9595                           
  9596                           ;memory.c: 130: __nop();
  9597  161F  0000               	nop
  9598                           
  9599                           ;memory.c: 132: writeAddr++;
  9600  1620  3001               	movlw	1
  9601  1621  0020               	movlb	0	; select bank0
  9602  1622  07A3               	addwf	FLASH_WriteBlock@writeAddr,f
  9603  1623  3000               	movlw	0
  9604  1624  3DA4               	addwfc	FLASH_WriteBlock@writeAddr+1,f
  9605  1625  3001               	movlw	1
  9606  1626  00A6               	movwf	??_FLASH_WriteBlock
  9607  1627  0826               	movf	??_FLASH_WriteBlock,w
  9608  1628  07AC               	addwf	FLASH_WriteBlock@i,f
  9609  1629  3020               	movlw	32
  9610  162A  022C               	subwf	FLASH_WriteBlock@i,w
  9611  162B  1C03               	skipc
  9612  162C  2DF0               	goto	l2112
  9613  162D                     l466:	
  9614                           
  9615                           ;memory.c: 133: }
  9616                           ;memory.c: 135: PMCON1bits.WREN = 0;
  9617  162D  0023               	movlb	3	; select bank3
  9618  162E  1115               	bcf	21,2	;volatile
  9619                           
  9620                           ;memory.c: 136: INTCONbits.GIE = GIEBitValue;
  9621  162F  0020               	movlb	0	; select bank0
  9622  1630  0C2B               	rrf	FLASH_WriteBlock@GIEBitValue,w
  9623  1631  1C03               	skipc
  9624  1632  138B               	bcf	11,7	;volatile
  9625  1633  1803               	skipnc
  9626  1634  178B               	bsf	11,7	;volatile
  9627  1635  0008               	return
  9628  1636                     __end_of_FLASH_WriteBlock:	
  9629                           ;memory.c: 138: return 0;
  9630                           ;	Return value of _FLASH_WriteBlock is never used
  9631                           
  9632                           
  9633                           	psect	text27
  9634  10D8                     __ptext27:	
  9635 ;; *************** function _FLASH_EraseBlock *****************
  9636 ;; Defined at:
  9637 ;;		line 141 in file "memory.c"
  9638 ;; Parameters:    Size  Location     Type
  9639 ;;  startAddr       2    0[BANK0 ] unsigned int 
  9640 ;; Auto vars:     Size  Location     Type
  9641 ;;  GIEBitValue     1    2[BANK0 ] unsigned char 
  9642 ;; Return value:  Size  Location     Type
  9643 ;;                  1    wreg      void 
  9644 ;; Registers used:
  9645 ;;		wreg, status,2, status,0
  9646 ;; Tracked objects:
  9647 ;;		On entry : 0/0
  9648 ;;		On exit  : 0/0
  9649 ;;		Unchanged: 0/0
  9650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  9651 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9652 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9654 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9655 ;;Total ram usage:        3 bytes
  9656 ;; Hardware stack levels used:    1
  9657 ;; Hardware stack levels required when called:    2
  9658 ;; This function calls:
  9659 ;;		Nothing
  9660 ;; This function is called by:
  9661 ;;		_FLASH_WriteBlock
  9662 ;; This function uses a non-reentrant model
  9663 ;;
  9664                           
  9665                           
  9666                           ;psect for function _FLASH_EraseBlock
  9667  10D8                     _FLASH_EraseBlock:	
  9668                           
  9669                           ;memory.c: 142: uint8_t GIEBitValue = INTCONbits.GIE;
  9670                           
  9671                           ;incstack = 0
  9672                           ; Regs used in _FLASH_EraseBlock: [wreg+status,2+status,0]
  9673  10D8  3000               	movlw	0
  9674  10D9  1B8B               	btfsc	11,7	;volatile
  9675  10DA  3001               	movlw	1
  9676  10DB  0020               	movlb	0	; select bank0
  9677  10DC  00A2               	movwf	FLASH_EraseBlock@GIEBitValue
  9678                           
  9679                           ;memory.c: 145: INTCONbits.GIE = 0;
  9680  10DD  138B               	bcf	11,7	;volatile
  9681                           
  9682                           ;memory.c: 147: PMADRL = (startAddr & 0xFF);
  9683  10DE  0820               	movf	FLASH_EraseBlock@startAddr,w
  9684  10DF  0023               	movlb	3	; select bank3
  9685  10E0  0091               	movwf	17	;volatile
  9686                           
  9687                           ;memory.c: 149: PMADRH = ((startAddr & 0xFF00) >> 8);
  9688  10E1  0020               	movlb	0	; select bank0
  9689  10E2  0821               	movf	FLASH_EraseBlock@startAddr+1,w
  9690  10E3  0023               	movlb	3	; select bank3
  9691  10E4  0092               	movwf	18	;volatile
  9692                           
  9693                           ;memory.c: 152: PMCON1bits.CFGS = 0;
  9694  10E5  1315               	bcf	21,6	;volatile
  9695                           
  9696                           ;memory.c: 153: PMCON1bits.FREE = 1;
  9697  10E6  1615               	bsf	21,4	;volatile
  9698                           
  9699                           ;memory.c: 154: PMCON1bits.WREN = 1;
  9700  10E7  1515               	bsf	21,2	;volatile
  9701                           
  9702                           ;memory.c: 157: PMCON2 = 0x55;
  9703  10E8  3055               	movlw	85
  9704  10E9  0096               	movwf	22	;volsfr
  9705                           
  9706                           ;memory.c: 158: PMCON2 = 0xAA;
  9707  10EA  30AA               	movlw	170
  9708  10EB  0096               	movwf	22	;volsfr
  9709                           
  9710                           ;memory.c: 159: PMCON1bits.WR = 1;
  9711  10EC  1495               	bsf	21,1	;volatile
  9712                           
  9713                           ;memory.c: 160: __nop();
  9714  10ED  0000               	nop
  9715                           
  9716                           ;memory.c: 161: __nop();
  9717  10EE  0000               	nop
  9718                           
  9719                           ;memory.c: 163: PMCON1bits.WREN = 0;
  9720  10EF  0023               	movlb	3	; select bank3
  9721  10F0  1115               	bcf	21,2	;volatile
  9722                           
  9723                           ;memory.c: 164: INTCONbits.GIE = GIEBitValue;
  9724  10F1  0020               	movlb	0	; select bank0
  9725  10F2  0C22               	rrf	FLASH_EraseBlock@GIEBitValue,w
  9726  10F3  1C03               	skipc
  9727  10F4  138B               	bcf	11,7	;volatile
  9728  10F5  1803               	skipnc
  9729  10F6  178B               	bsf	11,7	;volatile
  9730  10F7  0008               	return
  9731  10F8                     __end_of_FLASH_EraseBlock:	
  9732                           
  9733                           	psect	text28
  9734  10B8                     __ptext28:	
  9735 ;; *************** function _FLASH_ReadWord *****************
  9736 ;; Defined at:
  9737 ;;		line 58 in file "memory.c"
  9738 ;; Parameters:    Size  Location     Type
  9739 ;;  flashAddr       2    0[BANK0 ] unsigned int 
  9740 ;; Auto vars:     Size  Location     Type
  9741 ;;  GIEBitValue     1    2[BANK0 ] unsigned char 
  9742 ;; Return value:  Size  Location     Type
  9743 ;;                  2    0[BANK0 ] unsigned int 
  9744 ;; Registers used:
  9745 ;;		wreg, status,2, status,0
  9746 ;; Tracked objects:
  9747 ;;		On entry : 0/0
  9748 ;;		On exit  : 0/0
  9749 ;;		Unchanged: 0/0
  9750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  9751 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9752 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9754 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9755 ;;Total ram usage:        3 bytes
  9756 ;; Hardware stack levels used:    1
  9757 ;; Hardware stack levels required when called:    2
  9758 ;; This function calls:
  9759 ;;		Nothing
  9760 ;; This function is called by:
  9761 ;;		_main
  9762 ;;		_FLASH_WriteWord
  9763 ;; This function uses a non-reentrant model
  9764 ;;
  9765                           
  9766                           
  9767                           ;psect for function _FLASH_ReadWord
  9768  10B8                     _FLASH_ReadWord:	
  9769                           
  9770                           ;memory.c: 59: uint8_t GIEBitValue = INTCONbits.GIE;
  9771                           
  9772                           ;incstack = 0
  9773                           ; Regs used in _FLASH_ReadWord: [wreg+status,2+status,0]
  9774  10B8  3000               	movlw	0
  9775  10B9  1B8B               	btfsc	11,7	;volatile
  9776  10BA  3001               	movlw	1
  9777  10BB  0020               	movlb	0	; select bank0
  9778  10BC  00A2               	movwf	FLASH_ReadWord@GIEBitValue
  9779                           
  9780                           ;memory.c: 61: INTCONbits.GIE = 0;
  9781  10BD  138B               	bcf	11,7	;volatile
  9782                           
  9783                           ;memory.c: 62: PMADRL = (flashAddr & 0x00FF);
  9784  10BE  0820               	movf	FLASH_ReadWord@flashAddr,w
  9785  10BF  0023               	movlb	3	; select bank3
  9786  10C0  0091               	movwf	17	;volatile
  9787                           
  9788                           ;memory.c: 63: PMADRH = ((flashAddr & 0xFF00) >> 8);
  9789  10C1  0020               	movlb	0	; select bank0
  9790  10C2  0821               	movf	FLASH_ReadWord@flashAddr+1,w
  9791  10C3  0023               	movlb	3	; select bank3
  9792  10C4  0092               	movwf	18	;volatile
  9793                           
  9794                           ;memory.c: 65: PMCON1bits.CFGS = 0;
  9795  10C5  1315               	bcf	21,6	;volatile
  9796                           
  9797                           ;memory.c: 66: PMCON1bits.RD = 1;
  9798  10C6  1415               	bsf	21,0	;volatile
  9799                           
  9800                           ;memory.c: 67: __nop();
  9801  10C7  0000               	nop
  9802                           
  9803                           ;memory.c: 68: __nop();
  9804  10C8  0000               	nop
  9805                           
  9806                           ;memory.c: 69: INTCONbits.GIE = GIEBitValue;
  9807  10C9  0020               	movlb	0	; select bank0
  9808  10CA  0C22               	rrf	FLASH_ReadWord@GIEBitValue,w
  9809  10CB  1C03               	skipc
  9810  10CC  138B               	bcf	11,7	;volatile
  9811  10CD  1803               	skipnc
  9812  10CE  178B               	bsf	11,7	;volatile
  9813                           
  9814                           ;memory.c: 71: return ((PMDATH << 8) | PMDATL);
  9815  10CF  0023               	movlb	3	; select bank3
  9816  10D0  0814               	movf	20,w	;volatile
  9817  10D1  0020               	movlb	0	; select bank0
  9818  10D2  00A1               	movwf	?_FLASH_ReadWord+1
  9819  10D3  0023               	movlb	3	; select bank3
  9820  10D4  0813               	movf	19,w	;volatile
  9821  10D5  0020               	movlb	0	; select bank0
  9822  10D6  00A0               	movwf	?_FLASH_ReadWord
  9823  10D7  0008               	return
  9824  10D8                     __end_of_FLASH_ReadWord:	
  9825                           
  9826                           	psect	text29
  9827  07FA                     __ptext29:	
  9828 ;; *************** function _ConfigureOscillator *****************
  9829 ;; Defined at:
  9830 ;;		line 18 in file "system.c"
  9831 ;; Parameters:    Size  Location     Type
  9832 ;;		None
  9833 ;; Auto vars:     Size  Location     Type
  9834 ;;		None
  9835 ;; Return value:  Size  Location     Type
  9836 ;;                  1    wreg      void 
  9837 ;; Registers used:
  9838 ;;		wreg, status,2, status,0
  9839 ;; Tracked objects:
  9840 ;;		On entry : 0/0
  9841 ;;		On exit  : 0/0
  9842 ;;		Unchanged: 0/0
  9843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  9844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9847 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9848 ;;Total ram usage:        0 bytes
  9849 ;; Hardware stack levels used:    1
  9850 ;; Hardware stack levels required when called:    2
  9851 ;; This function calls:
  9852 ;;		Nothing
  9853 ;; This function is called by:
  9854 ;;		_main
  9855 ;; This function uses a non-reentrant model
  9856 ;;
  9857                           
  9858                           
  9859                           ;psect for function _ConfigureOscillator
  9860  07FA                     _ConfigureOscillator:	
  9861                           
  9862                           ;system.c: 20: OSCCONbits.SCS = 0b00;
  9863                           
  9864                           ;incstack = 0
  9865                           ; Regs used in _ConfigureOscillator: [wreg+status,2+status,0]
  9866  07FA  30FC               	movlw	-4
  9867  07FB  0021               	movlb	1	; select bank1
  9868  07FC  0599               	andwf	25,f	;volatile
  9869  07FD  0008               	return
  9870  07FE                     __end_of_ConfigureOscillator:	
  9871                           
  9872                           	psect	intentry
  9873  0004                     __pintentry:	
  9874 ;; *************** function _isr *****************
  9875 ;; Defined at:
  9876 ;;		line 22 in file "interrupts.c"
  9877 ;; Parameters:    Size  Location     Type
  9878 ;;		None
  9879 ;; Auto vars:     Size  Location     Type
  9880 ;;		None
  9881 ;; Return value:  Size  Location     Type
  9882 ;;                  1    wreg      void 
  9883 ;; Registers used:
  9884 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9885 ;; Tracked objects:
  9886 ;;		On entry : 0/0
  9887 ;;		On exit  : 0/0
  9888 ;;		Unchanged: 0/0
  9889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  9890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9892 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9893 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  9894 ;;Total ram usage:        5 bytes
  9895 ;; Hardware stack levels used:    1
  9896 ;; Hardware stack levels required when called:    1
  9897 ;; This function calls:
  9898 ;;		i1_set_leds_top
  9899 ;; This function is called by:
  9900 ;;		Interrupt level 1
  9901 ;; This function uses a non-reentrant model
  9902 ;;
  9903                           
  9904  0004                     _isr:	
  9905                           
  9906                           ;incstack = 0
  9907                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9908  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  9909  0005  3180               	pagesel	$
  9910  0006  0020               	movlb	0	; select bank0
  9911  0007  087F               	movf	127,w
  9912  0008  00F8               	movwf	??_isr+4
  9913                           
  9914                           ;interrupts.c: 23: extern volatile long timer;
  9915                           ;interrupts.c: 24: extern volatile long sub_timer;
  9916                           ;interrupts.c: 25: extern volatile long tap_timer;
  9917                           ;interrupts.c: 26: extern volatile long mod_timer;
  9918                           ;interrupts.c: 27: extern volatile long baseline_delay_time;
  9919                           ;interrupts.c: 28: extern volatile long delay_time;
  9920                           ;interrupts.c: 29: extern volatile int top_push_state;
  9921                           ;interrupts.c: 31: if (INTCONbits.TMR0IF == 1) {
  9922  0009  1D0B               	btfss	11,2	;volatile
  9923  000A  286E               	goto	i1l23
  9924                           
  9925                           ;interrupts.c: 32: timer = timer + 1;
  9926  000B  3001               	movlw	1
  9927  000C  00F4               	movwf	??_isr
  9928  000D  3000               	movlw	0
  9929  000E  00F5               	movwf	??_isr+1
  9930  000F  3000               	movlw	0
  9931  0010  00F6               	movwf	??_isr+2
  9932  0011  3000               	movlw	0
  9933  0012  00F7               	movwf	??_isr+3
  9934  0013  0021               	movlb	1	; select bank1
  9935  0014  084D               	movf	_timer^(0+128),w	;volatile
  9936  0015  07F4               	addwf	??_isr,f
  9937  0016  084E               	movf	(_timer+1)^(0+128),w	;volatile
  9938  0017  3DF5               	addwfc	??_isr+1,f
  9939  0018  084F               	movf	(_timer+2)^(0+128),w	;volatile
  9940  0019  3DF6               	addwfc	??_isr+2,f
  9941  001A  0850               	movf	(_timer+3)^(0+128),w	;volatile
  9942  001B  3DF7               	addwfc	??_isr+3,f
  9943  001C  0877               	movf	??_isr+3,w
  9944  001D  00D0               	movwf	(_timer+3)^(0+128)	;volatile
  9945  001E  0876               	movf	??_isr+2,w
  9946  001F  00CF               	movwf	(_timer+2)^(0+128)	;volatile
  9947  0020  0875               	movf	??_isr+1,w
  9948  0021  00CE               	movwf	(_timer+1)^(0+128)	;volatile
  9949  0022  0874               	movf	??_isr,w
  9950  0023  00CD               	movwf	_timer^(0+128)	;volatile
  9951                           
  9952                           ;interrupts.c: 33: sub_timer = sub_timer + 1;
  9953  0024  3001               	movlw	1
  9954  0025  00F4               	movwf	??_isr
  9955  0026  3000               	movlw	0
  9956  0027  00F5               	movwf	??_isr+1
  9957  0028  3000               	movlw	0
  9958  0029  00F6               	movwf	??_isr+2
  9959  002A  3000               	movlw	0
  9960  002B  00F7               	movwf	??_isr+3
  9961  002C  0845               	movf	_sub_timer^(0+128),w	;volatile
  9962  002D  07F4               	addwf	??_isr,f
  9963  002E  0846               	movf	(_sub_timer+1)^(0+128),w	;volatile
  9964  002F  3DF5               	addwfc	??_isr+1,f
  9965  0030  0847               	movf	(_sub_timer+2)^(0+128),w	;volatile
  9966  0031  3DF6               	addwfc	??_isr+2,f
  9967  0032  0848               	movf	(_sub_timer+3)^(0+128),w	;volatile
  9968  0033  3DF7               	addwfc	??_isr+3,f
  9969  0034  0877               	movf	??_isr+3,w
  9970  0035  00C8               	movwf	(_sub_timer+3)^(0+128)	;volatile
  9971  0036  0876               	movf	??_isr+2,w
  9972  0037  00C7               	movwf	(_sub_timer+2)^(0+128)	;volatile
  9973  0038  0875               	movf	??_isr+1,w
  9974  0039  00C6               	movwf	(_sub_timer+1)^(0+128)	;volatile
  9975  003A  0874               	movf	??_isr,w
  9976  003B  00C5               	movwf	_sub_timer^(0+128)	;volatile
  9977                           
  9978                           ;interrupts.c: 34: tap_timer = tap_timer + 1;
  9979  003C  3001               	movlw	1
  9980  003D  00F4               	movwf	??_isr
  9981  003E  3000               	movlw	0
  9982  003F  00F5               	movwf	??_isr+1
  9983  0040  3000               	movlw	0
  9984  0041  00F6               	movwf	??_isr+2
  9985  0042  3000               	movlw	0
  9986  0043  00F7               	movwf	??_isr+3
  9987  0044  0849               	movf	_tap_timer^(0+128),w	;volatile
  9988  0045  07F4               	addwf	??_isr,f
  9989  0046  084A               	movf	(_tap_timer+1)^(0+128),w	;volatile
  9990  0047  3DF5               	addwfc	??_isr+1,f
  9991  0048  084B               	movf	(_tap_timer+2)^(0+128),w	;volatile
  9992  0049  3DF6               	addwfc	??_isr+2,f
  9993  004A  084C               	movf	(_tap_timer+3)^(0+128),w	;volatile
  9994  004B  3DF7               	addwfc	??_isr+3,f
  9995  004C  0877               	movf	??_isr+3,w
  9996  004D  00CC               	movwf	(_tap_timer+3)^(0+128)	;volatile
  9997  004E  0876               	movf	??_isr+2,w
  9998  004F  00CB               	movwf	(_tap_timer+2)^(0+128)	;volatile
  9999  0050  0875               	movf	??_isr+1,w
 10000  0051  00CA               	movwf	(_tap_timer+1)^(0+128)	;volatile
 10001  0052  0874               	movf	??_isr,w
 10002  0053  00C9               	movwf	_tap_timer^(0+128)	;volatile
 10003                           
 10004                           ;interrupts.c: 35: mod_timer = mod_timer + 1;
 10005  0054  3001               	movlw	1
 10006  0055  00F4               	movwf	??_isr
 10007  0056  3000               	movlw	0
 10008  0057  00F5               	movwf	??_isr+1
 10009  0058  3000               	movlw	0
 10010  0059  00F6               	movwf	??_isr+2
 10011  005A  3000               	movlw	0
 10012  005B  00F7               	movwf	??_isr+3
 10013  005C  0022               	movlb	2	; select bank2
 10014  005D  0834               	movf	_mod_timer^(0+256),w	;volatile
 10015  005E  07F4               	addwf	??_isr,f
 10016  005F  0835               	movf	(_mod_timer+1)^(0+256),w	;volatile
 10017  0060  3DF5               	addwfc	??_isr+1,f
 10018  0061  0836               	movf	(_mod_timer+2)^(0+256),w	;volatile
 10019  0062  3DF6               	addwfc	??_isr+2,f
 10020  0063  0837               	movf	(_mod_timer+3)^(0+256),w	;volatile
 10021  0064  3DF7               	addwfc	??_isr+3,f
 10022  0065  0877               	movf	??_isr+3,w
 10023  0066  00B7               	movwf	(_mod_timer+3)^(0+256)	;volatile
 10024  0067  0876               	movf	??_isr+2,w
 10025  0068  00B6               	movwf	(_mod_timer+2)^(0+256)	;volatile
 10026  0069  0875               	movf	??_isr+1,w
 10027  006A  00B5               	movwf	(_mod_timer+1)^(0+256)	;volatile
 10028  006B  0874               	movf	??_isr,w
 10029  006C  00B4               	movwf	_mod_timer^(0+256)	;volatile
 10030                           
 10031                           ;interrupts.c: 36: INTCONbits.TMR0IF = 0;
 10032  006D  110B               	bcf	11,2	;volatile
 10033  006E                     i1l23:	
 10034                           
 10035                           ;interrupts.c: 37: }
 10036                           ;interrupts.c: 39: if (timer >= baseline_delay_time) {
 10037  006E  0021               	movlb	1	; select bank1
 10038  006F  0850               	movf	(_timer+3)^(0+128),w	;volatile
 10039  0070  3A80               	xorlw	128
 10040  0071  00F4               	movwf	??_isr
 10041  0072  0862               	movf	(_baseline_delay_time+3)^(0+128),w	;volatile
 10042  0073  3A80               	xorlw	128
 10043  0074  0274               	subwf	??_isr,w
 10044  0075  1D03               	skipz
 10045  0076  2881               	goto	u275_23
 10046  0077  0861               	movf	(_baseline_delay_time+2)^(0+128),w	;volatile
 10047  0078  024F               	subwf	(_timer+2)^(0+128),w	;volatile
 10048  0079  1D03               	skipz
 10049  007A  2881               	goto	u275_23
 10050  007B  0860               	movf	(_baseline_delay_time+1)^(0+128),w	;volatile
 10051  007C  024E               	subwf	(_timer+1)^(0+128),w	;volatile
 10052  007D  1D03               	skipz
 10053  007E  2881               	goto	u275_23
 10054  007F  085F               	movf	_baseline_delay_time^(0+128),w	;volatile
 10055  0080  024D               	subwf	_timer^(0+128),w	;volatile
 10056  0081                     u275_23:	
 10057  0081  1C03               	skipc
 10058  0082  288E               	goto	i1l2664
 10059                           
 10060                           ;interrupts.c: 40: LATFbits.LATF5 = 1;
 10061  0083  0027               	movlb	7	; select bank7
 10062  0084  168C               	bsf	12,5	;volatile
 10063                           
 10064                           ;interrupts.c: 41: timer = 0;
 10065  0085  3000               	movlw	0
 10066  0086  0021               	movlb	1	; select bank1
 10067  0087  00D0               	movwf	(_timer+3)^(0+128)	;volatile
 10068  0088  3000               	movlw	0
 10069  0089  00CF               	movwf	(_timer+2)^(0+128)	;volatile
 10070  008A  3000               	movlw	0
 10071  008B  00CE               	movwf	(_timer+1)^(0+128)	;volatile
 10072  008C  3000               	movlw	0
 10073  008D  00CD               	movwf	_timer^(0+128)	;volatile
 10074  008E                     i1l2664:	
 10075                           
 10076                           ;interrupts.c: 42: }
 10077                           ;interrupts.c: 44: if (timer >= 20) {
 10078  008E  1BD0               	btfsc	(_timer+3)^(0+128),7	;volatile
 10079  008F  289F               	goto	i1l2668
 10080  0090  0850               	movf	(_timer+3)^(0+128),w	;volatile
 10081  0091  1D03               	btfss	3,2
 10082  0092  289D               	goto	i1l2666
 10083  0093  084F               	movf	(_timer+2)^(0+128),w	;volatile
 10084  0094  1D03               	btfss	3,2
 10085  0095  289D               	goto	i1l2666
 10086  0096  084E               	movf	(_timer+1)^(0+128),w	;volatile
 10087  0097  1D03               	btfss	3,2
 10088  0098  289D               	goto	i1l2666
 10089  0099  3014               	movlw	20
 10090  009A  024D               	subwf	_timer^(0+128),w	;volatile
 10091  009B  1C03               	btfss	3,0
 10092  009C  289F               	goto	i1l2668
 10093  009D                     i1l2666:	
 10094                           
 10095                           ;interrupts.c: 45: LATFbits.LATF5 = 0;
 10096  009D  0027               	movlb	7	; select bank7
 10097  009E  128C               	bcf	12,5	;volatile
 10098  009F                     i1l2668:	
 10099                           
 10100                           ;interrupts.c: 46: }
 10101                           ;interrupts.c: 48: if (sub_timer >= delay_time) {
 10102  009F  0021               	movlb	1	; select bank1
 10103  00A0  0848               	movf	(_sub_timer+3)^(0+128),w	;volatile
 10104  00A1  3A80               	xorlw	128
 10105  00A2  00F4               	movwf	??_isr
 10106  00A3  0866               	movf	(_delay_time+3)^(0+128),w	;volatile
 10107  00A4  3A80               	xorlw	128
 10108  00A5  0274               	subwf	??_isr,w
 10109  00A6  1D03               	skipz
 10110  00A7  28B2               	goto	u277_23
 10111  00A8  0865               	movf	(_delay_time+2)^(0+128),w	;volatile
 10112  00A9  0247               	subwf	(_sub_timer+2)^(0+128),w	;volatile
 10113  00AA  1D03               	skipz
 10114  00AB  28B2               	goto	u277_23
 10115  00AC  0864               	movf	(_delay_time+1)^(0+128),w	;volatile
 10116  00AD  0246               	subwf	(_sub_timer+1)^(0+128),w	;volatile
 10117  00AE  1D03               	skipz
 10118  00AF  28B2               	goto	u277_23
 10119  00B0  0863               	movf	_delay_time^(0+128),w	;volatile
 10120  00B1  0245               	subwf	_sub_timer^(0+128),w	;volatile
 10121  00B2                     u277_23:	
 10122  00B2  1C03               	skipc
 10123  00B3  28C8               	goto	i1l2674
 10124                           
 10125                           ;interrupts.c: 49: set_leds_top(top_push_state, 1);
 10126  00B4  087C               	movf	_top_push_state+1,w	;volatile
 10127  00B5  00F1               	movwf	i1set_leds_top@x+1
 10128  00B6  087B               	movf	_top_push_state,w	;volatile
 10129  00B7  00F0               	movwf	i1set_leds_top@x
 10130  00B8  3001               	movlw	1
 10131  00B9  00F2               	movwf	i1set_leds_top@ledState
 10132  00BA  3000               	movlw	0
 10133  00BB  00F3               	movwf	i1set_leds_top@ledState+1
 10134  00BC  3194  24AA  3180   	fcall	i1_set_leds_top
 10135                           
 10136                           ;interrupts.c: 50: sub_timer = 0;
 10137  00BF  3000               	movlw	0
 10138  00C0  0021               	movlb	1	; select bank1
 10139  00C1  00C8               	movwf	(_sub_timer+3)^(0+128)	;volatile
 10140  00C2  3000               	movlw	0
 10141  00C3  00C7               	movwf	(_sub_timer+2)^(0+128)	;volatile
 10142  00C4  3000               	movlw	0
 10143  00C5  00C6               	movwf	(_sub_timer+1)^(0+128)	;volatile
 10144  00C6  3000               	movlw	0
 10145  00C7  00C5               	movwf	_sub_timer^(0+128)	;volatile
 10146  00C8                     i1l2674:	
 10147                           
 10148                           ;interrupts.c: 51: }
 10149                           ;interrupts.c: 53: if (sub_timer >= 20) {
 10150  00C8  1BC8               	btfsc	(_sub_timer+3)^(0+128),7	;volatile
 10151  00C9  28E0               	goto	i1l28
 10152  00CA  0848               	movf	(_sub_timer+3)^(0+128),w	;volatile
 10153  00CB  1D03               	btfss	3,2
 10154  00CC  28D7               	goto	i1l2676
 10155  00CD  0847               	movf	(_sub_timer+2)^(0+128),w	;volatile
 10156  00CE  1D03               	btfss	3,2
 10157  00CF  28D7               	goto	i1l2676
 10158  00D0  0846               	movf	(_sub_timer+1)^(0+128),w	;volatile
 10159  00D1  1D03               	btfss	3,2
 10160  00D2  28D7               	goto	i1l2676
 10161  00D3  3014               	movlw	20
 10162  00D4  0245               	subwf	_sub_timer^(0+128),w	;volatile
 10163  00D5  1C03               	btfss	3,0
 10164  00D6  28E0               	goto	i1l28
 10165  00D7                     i1l2676:	
 10166                           
 10167                           ;interrupts.c: 54: set_leds_top(top_push_state, 0);
 10168  00D7  087C               	movf	_top_push_state+1,w	;volatile
 10169  00D8  00F1               	movwf	i1set_leds_top@x+1
 10170  00D9  087B               	movf	_top_push_state,w	;volatile
 10171  00DA  00F0               	movwf	i1set_leds_top@x
 10172  00DB  3000               	movlw	0
 10173  00DC  00F2               	movwf	i1set_leds_top@ledState
 10174  00DD  00F3               	movwf	i1set_leds_top@ledState+1
 10175  00DE  3194  24AA         	fcall	i1_set_leds_top
 10176  00E0                     i1l28:	
 10177  00E0  0878               	movf	??_isr+4,w
 10178  00E1  0020               	movlb	0	; select bank0
 10179  00E2  00FF               	movwf	127
 10180  00E3  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 10181  00E4  0009               	retfie
 10182  00E5                     __end_of_isr:	
 10183                           
 10184                           	psect	text31
 10185  14AA                     __ptext31:	
 10186 ;; *************** function i1_set_leds_top *****************
 10187 ;; Defined at:
 10188 ;;		line 142 in file "user.c"
 10189 ;; Parameters:    Size  Location     Type
 10190 ;;  x               2    0[COMMON] int 
 10191 ;;  ledState        2    2[COMMON] int 
 10192 ;; Auto vars:     Size  Location     Type
 10193 ;;		None
 10194 ;; Return value:  Size  Location     Type
 10195 ;;                  1    wreg      void 
 10196 ;; Registers used:
 10197 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 10198 ;; Tracked objects:
 10199 ;;		On entry : 0/0
 10200 ;;		On exit  : 0/0
 10201 ;;		Unchanged: 0/0
 10202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
 10203 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10206 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
 10207 ;;Total ram usage:        4 bytes
 10208 ;; Hardware stack levels used:    1
 10209 ;; This function calls:
 10210 ;;		Nothing
 10211 ;; This function is called by:
 10212 ;;		_isr
 10213 ;; This function uses a non-reentrant model
 10214 ;;
 10215                           
 10216                           
 10217                           ;psect for function i1_set_leds_top
 10218  14AA                     i1_set_leds_top:	
 10219                           
 10220                           ;user.c: 143: switch (x) {
 10221                           
 10222                           ;incstack = 0
 10223                           ; Regs used in i1_set_leds_top: [wreg-fsr0h+status,2+status,0]
 10224  14AA  2CE9               	goto	i1l2648
 10225  14AB                     i1l2616:	
 10226                           ;user.c: 144: case 1:
 10227                           
 10228                           
 10229                           ;user.c: 145: LATFbits.LATF0 = ledState;
 10230  14AB  0C72               	rrf	i1set_leds_top@ledState,w
 10231  14AC  0027               	movlb	7	; select bank7
 10232  14AD  1C03               	skipc
 10233  14AE  100C               	bcf	12,0	;volatile
 10234  14AF  1803               	skipnc
 10235  14B0  140C               	bsf	12,0	;volatile
 10236                           
 10237                           ;user.c: 146: LATFbits.LATF1 = 0;
 10238  14B1  108C               	bcf	12,1	;volatile
 10239                           
 10240                           ;user.c: 147: LATFbits.LATF2 = 0;
 10241  14B2  110C               	bcf	12,2	;volatile
 10242                           
 10243                           ;user.c: 148: LATFbits.LATF3 = 0;
 10244  14B3  118C               	bcf	12,3	;volatile
 10245                           
 10246                           ;user.c: 149: LATFbits.LATF4 = 0;
 10247  14B4  120C               	bcf	12,4	;volatile
 10248                           
 10249                           ;user.c: 150: break;
 10250  14B5  0008               	return
 10251  14B6                     i1l403:	
 10252                           ;user.c: 151: case 2:
 10253                           
 10254                           
 10255                           ;user.c: 152: LATFbits.LATF0 = 0;
 10256  14B6  0027               	movlb	7	; select bank7
 10257  14B7  100C               	bcf	12,0	;volatile
 10258                           
 10259                           ;user.c: 153: LATFbits.LATF1 = ledState;
 10260  14B8  0C72               	rrf	i1set_leds_top@ledState,w
 10261  14B9  1C03               	skipc
 10262  14BA  108C               	bcf	12,1	;volatile
 10263  14BB  1803               	skipnc
 10264  14BC  148C               	bsf	12,1	;volatile
 10265                           
 10266                           ;user.c: 154: LATFbits.LATF2 = 0;
 10267  14BD  110C               	bcf	12,2	;volatile
 10268                           
 10269                           ;user.c: 155: LATFbits.LATF3 = 0;
 10270  14BE  118C               	bcf	12,3	;volatile
 10271                           
 10272                           ;user.c: 156: LATFbits.LATF4 = 0;
 10273  14BF  120C               	bcf	12,4	;volatile
 10274                           
 10275                           ;user.c: 157: break;
 10276  14C0  0008               	return
 10277  14C1                     i1l404:	
 10278                           ;user.c: 158: case 3:
 10279                           
 10280                           
 10281                           ;user.c: 159: LATFbits.LATF0 = 0;
 10282  14C1  0027               	movlb	7	; select bank7
 10283  14C2  100C               	bcf	12,0	;volatile
 10284                           
 10285                           ;user.c: 160: LATFbits.LATF1 = 0;
 10286  14C3  108C               	bcf	12,1	;volatile
 10287                           
 10288                           ;user.c: 161: LATFbits.LATF2 = ledState;
 10289  14C4  0C72               	rrf	i1set_leds_top@ledState,w
 10290  14C5  1C03               	skipc
 10291  14C6  110C               	bcf	12,2	;volatile
 10292  14C7  1803               	skipnc
 10293  14C8  150C               	bsf	12,2	;volatile
 10294                           
 10295                           ;user.c: 162: LATFbits.LATF3 = 0;
 10296  14C9  118C               	bcf	12,3	;volatile
 10297                           
 10298                           ;user.c: 163: LATFbits.LATF4 = 0;
 10299  14CA  120C               	bcf	12,4	;volatile
 10300                           
 10301                           ;user.c: 164: break;
 10302  14CB  0008               	return
 10303  14CC                     i1l405:	
 10304                           ;user.c: 165: case 4:
 10305                           
 10306                           
 10307                           ;user.c: 166: LATFbits.LATF0 = 0;
 10308  14CC  0027               	movlb	7	; select bank7
 10309  14CD  100C               	bcf	12,0	;volatile
 10310                           
 10311                           ;user.c: 167: LATFbits.LATF1 = 0;
 10312  14CE  108C               	bcf	12,1	;volatile
 10313                           
 10314                           ;user.c: 168: LATFbits.LATF2 = 0;
 10315  14CF  110C               	bcf	12,2	;volatile
 10316                           
 10317                           ;user.c: 169: LATFbits.LATF3 = ledState;
 10318  14D0  0C72               	rrf	i1set_leds_top@ledState,w
 10319  14D1  1C03               	skipc
 10320  14D2  118C               	bcf	12,3	;volatile
 10321  14D3  1803               	skipnc
 10322  14D4  158C               	bsf	12,3	;volatile
 10323                           
 10324                           ;user.c: 170: LATFbits.LATF4 = 0;
 10325  14D5  120C               	bcf	12,4	;volatile
 10326                           
 10327                           ;user.c: 171: break;
 10328  14D6  0008               	return
 10329  14D7                     i1l406:	
 10330                           ;user.c: 172: case 5:
 10331                           
 10332                           
 10333                           ;user.c: 173: LATFbits.LATF0 = 0;
 10334  14D7  0027               	movlb	7	; select bank7
 10335  14D8  100C               	bcf	12,0	;volatile
 10336                           
 10337                           ;user.c: 174: LATFbits.LATF1 = 0;
 10338  14D9  108C               	bcf	12,1	;volatile
 10339                           
 10340                           ;user.c: 175: LATFbits.LATF2 = 0;
 10341  14DA  110C               	bcf	12,2	;volatile
 10342                           
 10343                           ;user.c: 176: LATFbits.LATF3 = 0;
 10344  14DB  118C               	bcf	12,3	;volatile
 10345                           
 10346                           ;user.c: 177: LATFbits.LATF4 = ledState;
 10347  14DC  0C72               	rrf	i1set_leds_top@ledState,w
 10348  14DD  1C03               	skipc
 10349  14DE  120C               	bcf	12,4	;volatile
 10350  14DF  1803               	skipnc
 10351  14E0  160C               	bsf	12,4	;volatile
 10352                           
 10353                           ;user.c: 178: break;
 10354  14E1  0008               	return
 10355  14E2                     i1l407:	
 10356                           ;user.c: 179: case 6:
 10357                           
 10358                           
 10359                           ;user.c: 180: LATFbits.LATF0 = 0;
 10360  14E2  0027               	movlb	7	; select bank7
 10361  14E3  100C               	bcf	12,0	;volatile
 10362                           
 10363                           ;user.c: 181: LATFbits.LATF1 = 0;
 10364  14E4  108C               	bcf	12,1	;volatile
 10365                           
 10366                           ;user.c: 182: LATFbits.LATF2 = 0;
 10367  14E5  110C               	bcf	12,2	;volatile
 10368                           
 10369                           ;user.c: 183: LATFbits.LATF3 = 0;
 10370  14E6  118C               	bcf	12,3	;volatile
 10371                           
 10372                           ;user.c: 184: LATFbits.LATF4 = 0;
 10373  14E7  120C               	bcf	12,4	;volatile
 10374                           
 10375                           ;user.c: 186: }
 10376                           
 10377                           ;user.c: 185: break;
 10378  14E8  0008               	return
 10379  14E9                     i1l2648:	
 10380                           
 10381                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10382                           ; Switch size 1, requested type "space"
 10383                           ; Number of cases is 1, Range of values is 0 to 0
 10384                           ; switch strategies available:
 10385                           ; Name         Instructions Cycles
 10386                           ; simple_byte            4     3 (average)
 10387                           ; direct_byte            8     6 (fixed)
 10388                           ; jumptable            260     6 (fixed)
 10389                           ;	Chosen strategy is simple_byte
 10390  14E9  0871               	movf	i1set_leds_top@x+1,w
 10391  14EA  3A00               	xorlw	0	; case 0
 10392  14EB  1903               	skipnz
 10393  14EC  2CEE               	goto	i1l3094
 10394  14ED  2D02               	goto	i1l408
 10395  14EE                     i1l3094:	
 10396                           
 10397                           ; Switch size 1, requested type "space"
 10398                           ; Number of cases is 6, Range of values is 1 to 6
 10399                           ; switch strategies available:
 10400                           ; Name         Instructions Cycles
 10401                           ; simple_byte           19    10 (average)
 10402                           ; direct_byte           21     9 (fixed)
 10403                           ; jumptable            263     9 (fixed)
 10404                           ;	Chosen strategy is simple_byte
 10405  14EE  0870               	movf	i1set_leds_top@x,w
 10406  14EF  3A01               	xorlw	1	; case 1
 10407  14F0  1903               	skipnz
 10408  14F1  2CAB               	goto	i1l2616
 10409  14F2  3A03               	xorlw	3	; case 2
 10410  14F3  1903               	skipnz
 10411  14F4  2CB6               	goto	i1l403
 10412  14F5  3A01               	xorlw	1	; case 3
 10413  14F6  1903               	skipnz
 10414  14F7  2CC1               	goto	i1l404
 10415  14F8  3A07               	xorlw	7	; case 4
 10416  14F9  1903               	skipnz
 10417  14FA  2CCC               	goto	i1l405
 10418  14FB  3A01               	xorlw	1	; case 5
 10419  14FC  1903               	skipnz
 10420  14FD  2CD7               	goto	i1l406
 10421  14FE  3A03               	xorlw	3	; case 6
 10422  14FF  1903               	skipnz
 10423  1500  2CE2               	goto	i1l407
 10424  1501  2D02               	goto	i1l408
 10425  1502                     i1l408:	
 10426  1502  0008               	return
 10427  1503                     __end_ofi1_set_leds_top:	
 10428  007E                     btemp	set	126	;btemp
 10429  007E                     int$flags	set	126
 10430  007E                     wtemp	set	126
 10431  007E                     wtemp0	set	126
 10432  0080                     wtemp1	set	128
 10433  0082                     wtemp2	set	130
 10434  0084                     wtemp3	set	132
 10435  0086                     wtemp4	set	134
 10436  0088                     wtemp5	set	136
 10437  007F                     wtemp6	set	127
 10438  007E                     ttemp	set	126
 10439  007E                     ttemp0	set	126
 10440  0081                     ttemp1	set	129
 10441  0084                     ttemp2	set	132
 10442  0087                     ttemp3	set	135
 10443  007F                     ttemp4	set	127
 10444  007E                     ltemp	set	126
 10445  007E                     ltemp0	set	126
 10446  0082                     ltemp1	set	130
 10447  0086                     ltemp2	set	134
 10448  0080                     ltemp3	set	128
 10449  2378                     
 10450                           	psect	maintext_split_1
 10451  0416                     l2926:	
 10452                           ;main.c: 409: case 1:
 10453                           
 10454                           
 10455                           ;main.c: 410: mod_value = mod5[mod_counter];
 10456  0416  085E               	movf	(_mod_counter+1)^(0+128),w
 10457  0417  00AB               	movwf	(??_main^(0+128)+1)
 10458  0418  085D               	movf	_mod_counter^(0+128),w
 10459  0419  00AA               	movwf	??_main^(0+128)
 10460  041A  35AA               	lslf	??_main^(0+128),f
 10461  041B  0DAB               	rlf	(??_main^(0+128)+1),f
 10462  041C  3076               	movlw	118
 10463  041D  00AC               	movwf	(??_main+2)^(0+128)
 10464  041E  3025               	movlw	37
 10465  041F  00AD               	movwf	((??_main+2)^(0+128)+1)
 10466  0420  082A               	movf	??_main^(0+128),w
 10467  0421  072C               	addwf	(??_main+2)^(0+128),w
 10468  0422  0086               	movwf	6
 10469  0423  082B               	movf	(??_main+1)^(0+128),w
 10470  0424  3D2D               	addwfc	(??_main+3)^(0+128),w
 10471  0425  0087               	movwf	7
 10472  0426  3F40               	moviw [0]fsr1
 10473  0427  0022               	movlb	2	; select bank2
 10474  0428  00DA               	movwf	_mod_value^(0+256)
 10475  0429  3F41               	moviw [1]fsr1
 10476  042A  2C4B               	goto	L4
 10477  042B                     l2930:	
 10478                           ;main.c: 413: case 2:
 10479                           
 10480                           ;main.c: 412: break;
 10481                           
 10482                           ;main.c: 411: LATCbits.LATC6 = 0;
 10483                           
 10484                           
 10485                           ;main.c: 414: mod_value = mod2[mod_counter];
 10486  042B  0021               	movlb	1	; select bank1
 10487  042C  355D               	lslf	_mod_counter^(0+128),w
 10488  042D  3EA0               	addlw	(low (_mod2| (0+512)))& (0+255)
 10489  042E  0086               	movwf	6
 10490  042F  3002               	movlw	2	; select bank5/6
 10491  0430  0087               	movwf	7
 10492  0431  3F40               	moviw [0]fsr1
 10493  0432  0022               	movlb	2	; select bank2
 10494  0433  00DA               	movwf	_mod_value^(0+256)
 10495  0434  3F41               	moviw [1]fsr1
 10496  0435  2C4B               	goto	L4
 10497  0436                     l2934:	
 10498                           ;main.c: 417: case 3:
 10499                           
 10500                           ;main.c: 416: break;
 10501                           
 10502                           ;main.c: 415: LATCbits.LATC6 = 0;
 10503                           
 10504                           
 10505                           ;main.c: 418: mod_value = mod3[mod_counter];
 10506  0436  0021               	movlb	1	; select bank1
 10507  0437  355D               	lslf	_mod_counter^(0+128),w
 10508  0438  3E20               	addlw	(low (_mod3| (0+768)))& (0+255)
 10509  0439  0086               	movwf	6
 10510  043A  3003               	movlw	3	; select bank6/7
 10511  043B  0087               	movwf	7
 10512  043C  3F40               	moviw [0]fsr1
 10513  043D  0022               	movlb	2	; select bank2
 10514  043E  00DA               	movwf	_mod_value^(0+256)
 10515  043F  3F41               	moviw [1]fsr1
 10516  0440  2C4B               	goto	L4
 10517  0441                     l2938:	
 10518                           ;main.c: 421: case 4:
 10519                           
 10520                           ;main.c: 420: break;
 10521                           
 10522                           ;main.c: 419: LATCbits.LATC6 = 0;
 10523                           
 10524                           
 10525                           ;main.c: 422: mod_value = mod4[mod_counter];
 10526  0441  0021               	movlb	1	; select bank1
 10527  0442  355D               	lslf	_mod_counter^(0+128),w
 10528  0443  3EA0               	addlw	(low (_mod4| (0+768)))& (0+255)
 10529  0444  0086               	movwf	6
 10530  0445  3003               	movlw	3	; select bank7/8
 10531  0446  0087               	movwf	7
 10532  0447  3F40               	moviw [0]fsr1
 10533  0448  0022               	movlb	2	; select bank2
 10534  0449  00DA               	movwf	_mod_value^(0+256)
 10535  044A  3F41               	moviw [1]fsr1
 10536  044B                     L4:	
 10537  044B  00DB               	movwf	(_mod_value+1)^(0+256)
 10538  044C  2C6E               	goto	l2950
 10539  044D                     l2942:	
 10540                           ;main.c: 425: case 5:
 10541                           
 10542                           ;main.c: 424: break;
 10543                           
 10544                           ;main.c: 423: LATCbits.LATC6 = 0;
 10545                           
 10546                           
 10547                           ;main.c: 426: mod_value = mod5[mod_counter];
 10548  044D  0021               	movlb	1	; select bank1
 10549  044E  085E               	movf	(_mod_counter+1)^(0+128),w
 10550  044F  00AB               	movwf	(??_main^(0+128)+1)
 10551  0450  085D               	movf	_mod_counter^(0+128),w
 10552  0451  00AA               	movwf	??_main^(0+128)
 10553  0452  35AA               	lslf	??_main^(0+128),f
 10554  0453  0DAB               	rlf	(??_main^(0+128)+1),f
 10555  0454  3076               	movlw	118
 10556  0455  00AC               	movwf	(??_main+2)^(0+128)
 10557  0456  3025               	movlw	37
 10558  0457  00AD               	movwf	((??_main+2)^(0+128)+1)
 10559  0458  082A               	movf	??_main^(0+128),w
 10560  0459  072C               	addwf	(??_main+2)^(0+128),w
 10561  045A  0086               	movwf	6
 10562  045B  082B               	movf	(??_main+1)^(0+128),w
 10563  045C  3D2D               	addwfc	(??_main+3)^(0+128),w
 10564  045D  0087               	movwf	7
 10565  045E  3F40               	moviw [0]fsr1
 10566  045F  0022               	movlb	2	; select bank2
 10567  0460  00DA               	movwf	_mod_value^(0+256)
 10568  0461  3F41               	moviw [1]fsr1
 10569  0462  00DB               	movwf	(_mod_value+1)^(0+256)
 10570                           
 10571                           ;main.c: 427: adjusted_pot_value = 1275;
 10572  0463  30FB               	movlw	251
 10573  0464  0021               	movlb	1	; select bank1
 10574  0465  00BD               	movwf	main@adjusted_pot_value^(0+128)
 10575  0466  3004               	movlw	4
 10576  0467  00BE               	movwf	(main@adjusted_pot_value^(0+128)+1)
 10577                           
 10578                           ;main.c: 428: LATCbits.LATC6 = 1;
 10579  0468  0022               	movlb	2	; select bank2
 10580  0469  170E               	bsf	14,6	;volatile
 10581                           
 10582                           ;main.c: 429: break;
 10583  046A  2C8A               	goto	l2956
 10584  046B                     l2948:	
 10585                           ;main.c: 430: case 6:
 10586                           
 10587                           
 10588                           ;main.c: 431: mod_value = 0;
 10589  046B  0022               	movlb	2	; select bank2
 10590  046C  01DA               	clrf	_mod_value^(0+256)
 10591  046D  01DB               	clrf	(_mod_value+1)^(0+256)
 10592  046E                     l2950:	
 10593                           
 10594                           ;main.c: 432: LATCbits.LATC6 = 0;
 10595  046E  130E               	bcf	14,6	;volatile
 10596                           
 10597                           ;main.c: 434: }
 10598                           
 10599                           ;main.c: 433: break;
 10600  046F  2C8A               	goto	l2956
 10601  0470                     l2954:	
 10602                           
 10603                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10604                           ; Switch size 1, requested type "space"
 10605                           ; Number of cases is 1, Range of values is 0 to 0
 10606                           ; switch strategies available:
 10607                           ; Name         Instructions Cycles
 10608                           ; simple_byte            4     3 (average)
 10609                           ; direct_byte            8     6 (fixed)
 10610                           ; jumptable            260     6 (fixed)
 10611                           ;	Chosen strategy is simple_byte
 10612  0470  0021               	movlb	1	; select bank1
 10613  0471  0868               	movf	(_bottom_push_state+1)^(0+128),w
 10614  0472  3A00               	xorlw	0	; case 0
 10615  0473  1903               	skipnz
 10616  0474  2C76               	goto	l3086
 10617  0475  2C8A               	goto	l2956
 10618  0476                     l3086:	
 10619                           
 10620                           ; Switch size 1, requested type "space"
 10621                           ; Number of cases is 6, Range of values is 1 to 6
 10622                           ; switch strategies available:
 10623                           ; Name         Instructions Cycles
 10624                           ; simple_byte           19    10 (average)
 10625                           ; direct_byte           21     9 (fixed)
 10626                           ; jumptable            263     9 (fixed)
 10627                           ;	Chosen strategy is simple_byte
 10628  0476  0867               	movf	_bottom_push_state^(0+128),w
 10629  0477  3A01               	xorlw	1	; case 1
 10630  0478  1903               	skipnz
 10631  0479  2C16               	goto	l2926
 10632  047A  3A03               	xorlw	3	; case 2
 10633  047B  1903               	skipnz
 10634  047C  2C2B               	goto	l2930
 10635  047D  3A01               	xorlw	1	; case 3
 10636  047E  1903               	skipnz
 10637  047F  2C36               	goto	l2934
 10638  0480  3A07               	xorlw	7	; case 4
 10639  0481  1903               	skipnz
 10640  0482  2C41               	goto	l2938
 10641  0483  3A01               	xorlw	1	; case 5
 10642  0484  1903               	skipnz
 10643  0485  2C4D               	goto	l2942
 10644  0486  3A03               	xorlw	3	; case 6
 10645  0487  1903               	skipnz
 10646  0488  2C6B               	goto	l2948
 10647  0489  2C8A               	goto	l2956
 10648  048A                     l2956:	
 10649                           
 10650                           ;main.c: 435: mod_value = modulation(mod_value, adjusted_pot_value);
 10651  048A  0022               	movlb	2	; select bank2
 10652  048B  085B               	movf	(_mod_value+1)^(0+256),w
 10653  048C  0020               	movlb	0	; select bank0
 10654  048D  00B6               	movwf	modulation@x+1
 10655  048E  0022               	movlb	2	; select bank2
 10656  048F  085A               	movf	_mod_value^(0+256),w
 10657  0490  0020               	movlb	0	; select bank0
 10658  0491  00B5               	movwf	modulation@x
 10659  0492  0021               	movlb	1	; select bank1
 10660  0493  083E               	movf	(main@adjusted_pot_value+1)^(0+128),w
 10661  0494  0020               	movlb	0	; select bank0
 10662  0495  00B8               	movwf	modulation@y+1
 10663  0496  0021               	movlb	1	; select bank1
 10664  0497  083D               	movf	main@adjusted_pot_value^(0+128),w
 10665  0498  0020               	movlb	0	; select bank0
 10666  0499  00B7               	movwf	modulation@y
 10667  049A  3192  22AE  3184   	fcall	_modulation
 10668  049D  0020               	movlb	0	; select bank0
 10669  049E  0836               	movf	?_modulation+1,w
 10670  049F  0022               	movlb	2	; select bank2
 10671  04A0  00DB               	movwf	(_mod_value+1)^(0+256)
 10672  04A1  0020               	movlb	0	; select bank0
 10673  04A2  0835               	movf	?_modulation,w
 10674  04A3  0022               	movlb	2	; select bank2
 10675  04A4  00DA               	movwf	_mod_value^(0+256)
 10676                           
 10677                           ;main.c: 436: CCPR9 = mod_value / 2;
 10678  04A5  3002               	movlw	2
 10679  04A6  0020               	movlb	0	; select bank0
 10680  04A7  00A0               	movwf	___awdiv@divisor
 10681  04A8  3000               	movlw	0
 10682  04A9  00A1               	movwf	___awdiv@divisor+1
 10683  04AA  0022               	movlb	2	; select bank2
 10684  04AB  085B               	movf	(_mod_value+1)^(0+256),w
 10685  04AC  0020               	movlb	0	; select bank0
 10686  04AD  00A3               	movwf	___awdiv@dividend+1
 10687  04AE  0022               	movlb	2	; select bank2
 10688  04AF  085A               	movf	_mod_value^(0+256),w
 10689  04B0  0020               	movlb	0	; select bank0
 10690  04B1  00A2               	movwf	___awdiv@dividend
 10691  04B2  3194  2458  3184   	fcall	___awdiv
 10692  04B5  0020               	movlb	0	; select bank0
 10693  04B6  0821               	movf	?___awdiv+1,w
 10694  04B7  002C               	movlb	12	; select bank12
 10695  04B8  009B               	movwf	27	;volatile
 10696  04B9  0020               	movlb	0	; select bank0
 10697  04BA  0820               	movf	?___awdiv,w
 10698  04BB  002C               	movlb	12	; select bank12
 10699  04BC  009A               	movwf	26	;volatile
 10700                           
 10701                           ;main.c: 437: mod_timer = 0;
 10702  04BD  3000               	movlw	0
 10703  04BE  0022               	movlb	2	; select bank2
 10704  04BF  00B7               	movwf	(_mod_timer+3)^(0+256)	;volatile
 10705  04C0  3000               	movlw	0
 10706  04C1  00B6               	movwf	(_mod_timer+2)^(0+256)	;volatile
 10707  04C2  3000               	movlw	0
 10708  04C3  00B5               	movwf	(_mod_timer+1)^(0+256)	;volatile
 10709  04C4  3000               	movlw	0
 10710  04C5  00B4               	movwf	_mod_timer^(0+256)	;volatile
 10711  04C6                     l2960:	
 10712                           
 10713                           ;main.c: 438: }
 10714                           ;main.c: 443: if (delay_time_changed == 1) {
 10715  04C6  0360               	decf	_delay_time_changed^(0+256),w
 10716  04C7  0461               	iorwf	(_delay_time_changed+1)^(0+256),w
 10717  04C8  1D03               	btfss	3,2
 10718  04C9  2D7E               	goto	L7
 10719                           
 10720                           ;main.c: 444: delay_time = baseline_delay_time;
 10721  04CA  0021               	movlb	1	; select bank1
 10722  04CB  0862               	movf	(_baseline_delay_time+3)^(0+128),w	;volatile
 10723  04CC  00E6               	movwf	(_delay_time+3)^(0+128)	;volatile
 10724  04CD  0861               	movf	(_baseline_delay_time+2)^(0+128),w	;volatile
 10725  04CE  00E5               	movwf	(_delay_time+2)^(0+128)	;volatile
 10726  04CF  0860               	movf	(_baseline_delay_time+1)^(0+128),w	;volatile
 10727  04D0  00E4               	movwf	(_delay_time+1)^(0+128)	;volatile
 10728  04D1  085F               	movf	_baseline_delay_time^(0+128),w	;volatile
 10729  04D2  00E3               	movwf	_delay_time^(0+128)	;volatile
 10730                           
 10731                           ;main.c: 445: delay_time = set_subdivision(baseline_delay_time, top_push_state);
 10732  04D3  0860               	movf	(_baseline_delay_time+1)^(0+128),w	;volatile
 10733  04D4  00A7               	movwf	(set_subdivision@x+1)^(0+128)
 10734  04D5  085F               	movf	_baseline_delay_time^(0+128),w	;volatile
 10735  04D6  00A6               	movwf	set_subdivision@x^(0+128)
 10736  04D7  087C               	movf	_top_push_state+1,w	;volatile
 10737  04D8  00A9               	movwf	(set_subdivision@y+1)^(0+128)
 10738  04D9  087B               	movf	_top_push_state,w	;volatile
 10739  04DA  00A8               	movwf	set_subdivision@y^(0+128)
 10740  04DB  3185  2580  3184   	fcall	_set_subdivision
 10741  04DE  0021               	movlb	1	; select bank1
 10742  04DF  0826               	movf	?_set_subdivision^(0+128),w
 10743  04E0  00E3               	movwf	_delay_time^(0+128)	;volatile
 10744  04E1  0827               	movf	(?_set_subdivision+1)^(0+128),w
 10745  04E2  00E4               	movwf	(_delay_time+1)^(0+128)	;volatile
 10746  04E3  0D89               	rlf	9,f
 10747  04E4  3B89               	subwfb	9,f
 10748  04E5  0989               	comf	9,f
 10749  04E6  00E5               	movwf	(_delay_time+2)^(0+128)	;volatile
 10750  04E7  00E6               	movwf	(_delay_time+3)^(0+128)	;volatile
 10751                           
 10752                           ;main.c: 446: delayfound = 0;
 10753  04E8  0022               	movlb	2	; select bank2
 10754  04E9  01D8               	clrf	_delayfound^(0+256)
 10755  04EA  01D9               	clrf	(_delayfound+1)^(0+256)
 10756                           
 10757                           ;main.c: 447: delay_counter = 0;
 10758  04EB  01D6               	clrf	_delay_counter^(0+256)
 10759  04EC  01D7               	clrf	(_delay_counter+1)^(0+256)
 10760  04ED                     l2976:	
 10761                           ;main.c: 448: while (delayfound == 0) {
 10762                           
 10763  04ED  0022               	movlb	2	; select bank2
 10764  04EE  0858               	movf	_delayfound^(0+256),w
 10765  04EF  0459               	iorwf	(_delayfound+1)^(0+256),w
 10766  04F0  1D03               	btfss	3,2
 10767  04F1  2D48               	goto	l2978
 10768                           
 10769                           ;main.c: 449: if (delay[delay_counter] <= delay_time * 2) {
 10770  04F2  0857               	movf	(_delay_counter+1)^(0+256),w
 10771  04F3  0021               	movlb	1	; select bank1
 10772  04F4  00AB               	movwf	(??_main^(0+128)+1)
 10773  04F5  0022               	movlb	2	; select bank2
 10774  04F6  0856               	movf	_delay_counter^(0+256),w
 10775  04F7  0021               	movlb	1	; select bank1
 10776  04F8  00AA               	movwf	??_main^(0+128)
 10777  04F9  35AA               	lslf	??_main^(0+128),f
 10778  04FA  0DAB               	rlf	(??_main^(0+128)+1),f
 10779  04FB  3078               	movlw	120
 10780  04FC  00AC               	movwf	(??_main+2)^(0+128)
 10781  04FD  3023               	movlw	35
 10782  04FE  00AD               	movwf	((??_main+2)^(0+128)+1)
 10783  04FF  082A               	movf	??_main^(0+128),w
 10784  0500  072C               	addwf	(??_main+2)^(0+128),w
 10785  0501  0086               	movwf	6
 10786  0502  082B               	movf	(??_main+1)^(0+128),w
 10787  0503  3D2D               	addwfc	(??_main+3)^(0+128),w
 10788  0504  0087               	movwf	7
 10789  0505  3F40               	moviw [0]fsr1
 10790  0506  00AE               	movwf	(??_main+4)^(0+128)
 10791  0507  3F41               	moviw [1]fsr1
 10792  0508  00AF               	movwf	((??_main+4)^(0+128)+1)
 10793  0509  082E               	movf	(??_main+4)^(0+128),w
 10794  050A  00B0               	movwf	(??_main+6)^(0+128)
 10795  050B  082F               	movf	(??_main+5)^(0+128),w
 10796  050C  00B1               	movwf	((??_main+6)^(0+128)+1)
 10797  050D  3000               	movlw	0
 10798  050E  1BB1               	btfsc	((??_main+6)^(0+128)+1),7
 10799  050F  30FF               	movlw	255
 10800  0510  00B2               	movwf	((??_main+6)^(0+128)+2)
 10801  0511  00B3               	movwf	((??_main+6)^(0+128)+3)
 10802  0512  0863               	movf	_delay_time^(0+128),w	;volatile
 10803  0513  00B4               	movwf	(??_main+10)^(0+128)
 10804  0514  0864               	movf	(_delay_time+1)^(0+128),w	;volatile
 10805  0515  00B5               	movwf	((??_main+10)^(0+128)+1)
 10806  0516  0865               	movf	(_delay_time+2)^(0+128),w	;volatile
 10807  0517  00B6               	movwf	((??_main+10)^(0+128)+2)
 10808  0518  0866               	movf	(_delay_time+3)^(0+128),w	;volatile
 10809  0519  00B7               	movwf	((??_main+10)^(0+128)+3)
 10810  051A  3001               	movlw	1
 10811  051B                     u3325:	
 10812  051B  35B4               	lslf	(??_main+10)^(0+128),f
 10813  051C  0DB5               	rlf	((??_main+10)^(0+128)+1),f
 10814  051D  0DB6               	rlf	((??_main+10)^(0+128)+2),f
 10815  051E  0DB7               	rlf	((??_main+10)^(0+128)+3),f
 10816  051F  0B89               	decfsz	9,f
 10817  0520  2D1B               	goto	u3325
 10818  0521  0837               	movf	(??_main+13)^(0+128),w
 10819  0522  3A80               	xorlw	128
 10820  0523  00B8               	movwf	(??_main+14)^(0+128)
 10821  0524  0833               	movf	(??_main+9)^(0+128),w
 10822  0525  3A80               	xorlw	128
 10823  0526  0238               	subwf	(??_main+14)^(0+128),w
 10824  0527  1D03               	skipz
 10825  0528  2D33               	goto	u3333
 10826  0529  0832               	movf	(??_main+8)^(0+128),w
 10827  052A  0236               	subwf	(??_main+12)^(0+128),w
 10828  052B  1D03               	skipz
 10829  052C  2D33               	goto	u3333
 10830  052D  0831               	movf	(??_main+7)^(0+128),w
 10831  052E  0235               	subwf	(??_main+11)^(0+128),w
 10832  052F  1D03               	skipz
 10833  0530  2D33               	goto	u3333
 10834  0531  0830               	movf	(??_main+6)^(0+128),w
 10835  0532  0234               	subwf	(??_main+10)^(0+128),w
 10836  0533                     u3333:	
 10837  0533  1C03               	skipc
 10838  0534  2D42               	goto	l2974
 10839                           
 10840                           ;main.c: 450: delayfound = 1;
 10841  0535  3001               	movlw	1
 10842  0536  0022               	movlb	2	; select bank2
 10843  0537  00D8               	movwf	_delayfound^(0+256)
 10844  0538  3000               	movlw	0
 10845  0539  00D9               	movwf	(_delayfound^(0+256)+1)
 10846                           
 10847                           ;main.c: 451: CCPR1 = delay_counter;
 10848  053A  0857               	movf	(_delay_counter+1)^(0+256),w
 10849  053B  0025               	movlb	5	; select bank5
 10850  053C  0092               	movwf	18	;volatile
 10851  053D  0022               	movlb	2	; select bank2
 10852  053E  0856               	movf	_delay_counter^(0+256),w
 10853  053F  0025               	movlb	5	; select bank5
 10854  0540  0091               	movwf	17	;volatile
 10855                           
 10856                           ;main.c: 452: } else {
 10857  0541  2CED               	goto	l2976
 10858  0542                     l2974:	
 10859                           
 10860                           ;main.c: 453: delay_counter++;
 10861  0542  3001               	movlw	1
 10862  0543  0022               	movlb	2	; select bank2
 10863  0544  07D6               	addwf	_delay_counter^(0+256),f
 10864  0545  3000               	movlw	0
 10865  0546  3DD7               	addwfc	(_delay_counter+1)^(0+256),f
 10866  0547  2CED               	goto	l2976
 10867  0548                     l2978:	
 10868                           
 10869                           ;main.c: 454: }
 10870                           ;main.c: 455: }
 10871                           ;main.c: 456: mod_delay_time = delay_time / 7.5;
 10872  0548  0021               	movlb	1	; select bank1
 10873  0549  0866               	movf	(_delay_time+3)^(0+128),w	;volatile
 10874  054A  0020               	movlb	0	; select bank0
 10875  054B  00AB               	movwf	___altoft@c+3
 10876  054C  0021               	movlb	1	; select bank1
 10877  054D  0865               	movf	(_delay_time+2)^(0+128),w	;volatile
 10878  054E  0020               	movlb	0	; select bank0
 10879  054F  00AA               	movwf	___altoft@c+2
 10880  0550  0021               	movlb	1	; select bank1
 10881  0551  0864               	movf	(_delay_time+1)^(0+128),w	;volatile
 10882  0552  0020               	movlb	0	; select bank0
 10883  0553  00A9               	movwf	___altoft@c+1
 10884  0554  0021               	movlb	1	; select bank1
 10885  0555  0863               	movf	_delay_time^(0+128),w	;volatile
 10886  0556  0020               	movlb	0	; select bank0
 10887  0557  00A8               	movwf	___altoft@c
 10888  0558  3192  2271  3184   	fcall	___altoft
 10889  055B  0020               	movlb	0	; select bank0
 10890  055C  0828               	movf	?___altoft,w
 10891  055D  00C8               	movwf	___ftdiv@f1
 10892  055E  0829               	movf	?___altoft+1,w
 10893  055F  00C9               	movwf	___ftdiv@f1+1
 10894  0560  082A               	movf	?___altoft+2,w
 10895  0561  00CA               	movwf	___ftdiv@f1+2
 10896  0562  3000               	movlw	0
 10897  0563  00C5               	movwf	___ftdiv@f2
 10898  0564  30F0               	movlw	240
 10899  0565  00C6               	movwf	___ftdiv@f2+1
 10900  0566  3040               	movlw	64
 10901  0567  00C7               	movwf	___ftdiv@f2+2
 10902  0568  3197  2757  3184   	fcall	___ftdiv
 10903  056B  0020               	movlb	0	; select bank0
 10904  056C  0845               	movf	?___ftdiv,w
 10905  056D  00E7               	movwf	___fttol@f1
 10906  056E  0846               	movf	?___ftdiv+1,w
 10907  056F  00E8               	movwf	___fttol@f1+1
 10908  0570  0847               	movf	?___ftdiv+2,w
 10909  0571  00E9               	movwf	___fttol@f1+2
 10910  0572  3196  26B8         	fcall	___fttol
 10911  0574  0020               	movlb	0	; select bank0
 10912  0575  0868               	movf	?___fttol+1,w
 10913  0576  0022               	movlb	2	; select bank2
 10914  0577  00ED               	movwf	(_mod_delay_time+1)^(0+256)
 10915  0578  0020               	movlb	0	; select bank0
 10916  0579  0867               	movf	?___fttol,w
 10917  057A  0022               	movlb	2	; select bank2
 10918  057B  00EC               	movwf	_mod_delay_time^(0+256)
 10919                           
 10920                           ;main.c: 458: delay_time_changed = 0;
 10921  057C  01E0               	clrf	_delay_time_changed^(0+256)
 10922  057D  01E1               	clrf	(_delay_time_changed+1)^(0+256)
 10923  057E                     L7:	
 10924  057E  3189  2986         	goto	l2716
 10925  0580                     __end_of_main:	


Data Sizes:
    Strings     0
    Constant    0
    Data        1058
    BSS         222
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      13
    BANK0            80     79      79
    BANK1            80     37      79
    BANK2            80      0      78
    BANK3            80      0      68
    BANK4            80      0      64
    BANK5            80      0      58
    BANK6            80      0      58
    BANK7            80      0      58
    BANK8            80      0      80
    BANK9            80      0      80
    BANK10           80      0      58
    BANK11            8      0       0
    BANK12            0      0       0
    BANK13            0      0       0
    BANK14            0      0       0
    BANK15            0      0       0
    BANK16            0      0       0
    BANK17            0      0       0
    BANK18            0      0       0

Pointer List with Targets:

    FLASH_WriteBlock@flashWordArray	PTR unsigned int  size(1) Largest target is 64
		 -> myBuf(BANK4[64]), 

    FLASH_WriteWord@ramBuf	PTR unsigned int  size(1) Largest target is 64
		 -> myBuf(BANK4[64]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->i1_set_leds_top

Critical Paths under _main in BANK0

    _main->___fttol
    _wait_ms->___lmul
    _set_subdivision->___fttol
    ___fttol->_map
    ___awtoft->___ftpack
    _modulation->___aldiv
    ___aldiv->___wmul
    _map->___ftdiv
    ___ftmul->___ftadd
    ___ftdiv->___ftmul
    ___ftadd->___ftpack
    ___ftadd->___ftpack
    ___altoft->___ftpack
    _FLASH_WriteWord->_FLASH_WriteBlock
    _FLASH_WriteBlock->_FLASH_EraseBlock

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_set_subdivision
    _set_subdivision->___fttol

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isr in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _isr in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _isr in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _isr in BANK18

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                27    27      0   33433
                                             10 BANK1     27    27      0
                _ConfigureOscillator
                     _FLASH_ReadWord
                    _FLASH_WriteWord
                            _InitApp
                            ___aldiv
                           ___altoft
                            ___awdiv
                           ___awtoft
                            ___ftdiv
                            ___fttol
                        _adc_convert
                                _map
                         _modulation
                    _set_leds_bottom
                       _set_leds_top
                    _set_subdivision
                            _wait_ms
 ---------------------------------------------------------------------------------
 (1) _wait_ms                                              2     0      2     754
                                             12 BANK0      2     0      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     220
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) _set_subdivision                                      4     0      4    7414
                                              6 BANK1      4     0      4
                           ___awtoft
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4    1020
                                             71 BANK0      8     4      4
                                              0 BANK1      6     6      0
                           ___altoft (ARG)
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                                _map (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             6     3      3    2904
                                              8 BANK0      6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _set_leds_top                                         4     0      4     540
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _set_leds_bottom                                      2     0      2     150
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _modulation                                          12     8      4     971
                                             21 BANK0     12     8      4
                            ___aldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     220
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     556
                                              6 BANK0     15     7      8
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _map                                                 18     3     15   11745
                                             53 BANK0     18     3     15
                           ___awtoft (ARG)
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftneg
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     237
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             16    10      6    3203
                                             21 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    2645
                                             37 BANK0     16    10      6
                           ___altoft (ARG)
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             13     7      6    3563
                                              8 BANK0     13     7      6
                            ___ftneg (ARG)
                           ___ftpack
                           ___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (1) _adc_convert                                          4     2      2      22
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     428
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) ___altoft                                             8     4      4    2311
                                              8 BANK0      8     4      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2109
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
                           _init_adc
                           _init_pwm
 ---------------------------------------------------------------------------------
 (2) _init_pwm                                             0     0      0       0
                        _init_timer0
                        _init_timer2
 ---------------------------------------------------------------------------------
 (3) _init_timer2                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _init_timer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_adc                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _FLASH_WriteWord                                     10     5      5    1505
                                             13 BANK0     10     5      5
                     _FLASH_ReadWord
                   _FLASH_WriteBlock
 ---------------------------------------------------------------------------------
 (2) _FLASH_WriteBlock                                    10     7      3     572
                                              3 BANK0     10     7      3
                   _FLASH_EraseBlock
 ---------------------------------------------------------------------------------
 (3) _FLASH_EraseBlock                                     3     1      2     131
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _FLASH_ReadWord                                       3     1      2     259
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  5     5      0     236
                                              4 COMMON     5     5      0
                     i1_set_leds_top
 ---------------------------------------------------------------------------------
 (5) i1_set_leds_top                                       4     0      4     236
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _FLASH_ReadWord
   _FLASH_WriteWord
     _FLASH_ReadWord
     _FLASH_WriteBlock
       _FLASH_EraseBlock
   _InitApp
     _init_adc
     _init_pwm
       _init_timer0
       _init_timer2
   ___aldiv
     ___wmul (ARG)
   ___altoft
     ___ftpack
   ___awdiv
   ___awtoft
     ___ftpack
   ___ftdiv
     ___altoft (ARG)
       ___ftpack
     ___ftadd (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftneg (ARG)
     ___ftpack (ARG)
   ___fttol
     ___altoft (ARG)
       ___ftpack
     ___awtoft (ARG)
       ___ftpack
     ___ftdiv (ARG)
       ___altoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
     _map (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftdiv (ARG)
         ___altoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
   _adc_convert
   _map
     ___awtoft (ARG)
       ___ftpack
     ___ftadd (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftdiv (ARG)
       ___altoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftneg (ARG)
   _modulation
     ___aldiv
       ___wmul (ARG)
     ___wmul
   _set_leds_bottom
   _set_leds_top
   _set_subdivision
     ___awtoft
       ___ftpack
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___fttol
       ___altoft (ARG)
         ___ftpack
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___altoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       _map (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftdiv (ARG)
           ___altoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
   _wait_ms
     ___lmul

 _isr (ROOT)
   i1_set_leds_top

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      9       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     25      4F       7       98.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      4E       9       97.5%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      44      11       85.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      40      13       80.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0      3A      15       72.5%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
ABS                  0      0     305      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0      3A      18       72.5%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0      3A      20       72.5%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0      50      22      100.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0      50      24      100.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0      3A      26       72.5%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0     305      28        0.0%
BANK11               8      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BANK12               0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13               0      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14               0      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15               0      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16               0      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17               0      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18               0      0       0      43        0.0%


Microchip Technology PIC Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Wed Jun 22 01:37:57 2016

                  ___altoft@exp 002E                     __CFG_CP$OFF 0000                   ___altoft@sign 002F  
                  ___awdiv@sign 0026             ___wmul@multiplicand 0022                    ___ftadd@exp1 0034  
                  ___ftadd@exp2 0033                    ___ftadd@sign 0032                             l203 0A4E  
                           l213 0AD8                             l223 0B43                             l208 0A94  
                           l403 1510                             l251 0F62                             l235 0C77  
                           l404 151D                             l405 152A                             l229 0B78  
                           l414 1092                             l406 1537                             l407 1544  
                           l408 1565                             l196 09B9                             l381 137A  
                           l197 09CB                             l382 1381                             l383 1388  
                           l391 0678                             l287 117A                             l384 138F  
                           l529 1647                             l385 1396                             l466 162D  
                           l642 15AC                             l474 10A5                             l386 13B7  
                           l643 15B4                             l635 1599            __size_of_adc_convert 0019  
                           l379 1373                             l726 1735                             l666 0718  
                           _PR2 001B                             _map 076F                             _isr 0004  
                           _tap 01A0                    __CFG_BORV$LO 0000                             wreg 0009  
                  __CFG_IESO$ON 0000                ?_FLASH_WriteWord 002D                    __CFG_FOSC$HS 0000  
       __end_of_set_leds_bottom 13B8  FLASH_WriteBlock@flashWordArray 0025                    __CFG_LVP$OFF 0000  
                  ___ftdiv@cntr 004F                    ___ftdiv@sign 0054                            _B25k 0420  
                          l2020 1585                            l2012 156F                            l2112 15F0  
                          l2016 1576                            l2200 16A1                            l2026 159E  
                          l2018 1580                            l2124 1618                            l2028 15A6  
                          l2204 16AF                            l2230 06A8                            l2302 1784  
                          l2142 109F                            l2216 0812                            l2160 113B  
                          l2226 06A1                            l2260 06F7                            l2236 06B7  
                          l2324 17DE                            l2316 17C5                            l2156 1131  
                          l2254 06E4                            l2422 172B                            l2414 170C  
                          l2512 135C                            l2272 072A                            l2256 06EE  
                          l2248 06D1                            l2360 0899                            l2344 0856  
                          l2424 1739                            l2416 171D                            l2506 133E  
                          l2610 14A5                            l2602 1494                            l2266 070A  
                          l2258 06F3                            l2338 0840                            l2186 1668  
                          l2178 1658                            l3090 1551                            l2434 1504  
                          l2276 073C                            l2268 0714                            l2372 08B5  
                          l2356 0891                            l2196 1696                            l2188 1676  
                          l3092 13A3                            l2428 1747                            l2540 05DA  
                          l2606 149D                            l2286 0757                            l2542 0606  
                          l3086 0476                            l2296 176E                            l2368 08AD  
                          l3088 0664                            l2544 0632                            l2536 0581  
                          l2466 154B                            l2538 05AE                            l2802 0B03  
                          l2564 1286                            l2396 16D3                            l2548 065E  
                          l2820 0B70                            l2812 0B1F                            l2716 0986  
                          l2708 0961                            l2566 1296                            l2902 0F25  
                          l2814 0B47                            l2750 0A04                            l2584 146E  
                          l2488 139D                            l2920 0FAF                            l2840 0C35  
                          l2816 0B56                            l2736 099E                            l2594 1476  
                          l2578 1463                            l2930 042B                            l2906 0F5D  
                          l2834 0BC0                            l2850 0C7E                            l2762 0A2D  
                          l2754 0A13                            l2596 1482                            l2924 0FBD  
                          l2916 0FA6                            l2836 0C11                            l2828 0BB2  
                          l2748 09DA                            l2950 046E                            l2942 044D  
                          l2934 0436                            l2926 0416                            l2870 0D7B  
                          l2790 0ACA                            ?_map 0055                            l2960 04C6  
                          l2864 0CE9                            l2848 0C7B                            l2776 0A71  
                          l2784 0A9E                            l2768 0A58                            l2938 0441  
                          l2954 0470                            l2882 0E10                            l2874 0DB3  
                          l2794 0ADC                            l2948 046B                            l2956 048A  
                          l2796 0ADF                            l2974 0542                            l2894 0EA5  
                          l2886 0E48                            l2976 04ED                            l2978 0548  
                          l2898 0EDD                            ?_isr 0070                            u2125 06D2  
                          u3005 0AF2                            u2215 070B                            u2305 17C6  
                          u3105 0BD0                            u3025 0B2F                            u2155 06E5  
                          u2315 17D5                            u3115 0BE5                            u3035 0B29  
                          u2325 17DF                            u2405 08A0                            u3205 0E2A  
                          u3125 0BF9                            u3215 0E46                            u3135 0BCA  
                          u1705 157B                            u2185 06F8                            u3305 0FB8  
                          u3225 0EBF                            u3145 0C15                            u3065 0B5F  
                          u2435 08B6                            u2515 170D                            u3235 0EDB  
                          u1805 15DC                            u1725 1594                            u2285 1796  
                          u2445 08BC                            u2365 0862                            u3333 0533  
                          u3325 051B                            u3245 0F3F                            u3165 0CCE  
                          u3085 0B86                            u2295 17A6                            u2375 0872  
                          u3263 0F8A                            u3255 0F5B                            u3175 0CE7  
                          u3095 0B9C                            u1745 15A1                            u2625 128B  
                          u2705 148D                            u2545 172C                            u1905 1143  
                          u3185 0D95                            u2715 1495                            u2395 089A  
                          u3195 0DB1                            u2485 16DB                            u1855 10A6  
                          u1785 15BB                            u1865 10AB                            u2905 0A6B  
                          u2675 1479                            u1955 166B                            u2940 0ABA  
                          u2845 09A8                            u2950 0ABB                            u2790 095F  
                          i1l23 006E                            u2695 1483                            u1975 1677  
                          u1895 113C                            u2935 0AB1                            u2855 09E8  
                          u2960 0AC8                            u1985 168B                            u1995 1697  
                          u2875 0A26                            i1l28 00E0                    __CFG_WRT$OFF 0000  
                 __CFG_FCMEN$ON 0000                            _iCnt 00D3                            _mod1 0520  
                          _mod2 02A0                            _mod3 0320                            _mod4 03A0  
                          _mod5 2576                            _main 08DD                            _tap1 0138  
                          _tap2 013C                            _tap3 0140                            _tap4 0144  
                          _tap5 01D0                            _tap6 01D4                            _tap7 01D8  
                          _tap8 01DC                            _tap9 01E0                    ___ftpack@arg 0020  
                  ___ftpack@exp 0023                            fsr0h 0005                            fsr1h 0007  
                          fsr0l 0004                            indf0 0000                            indf1 0001  
                          fsr1l 0006                            map@x 0055                            btemp 007E  
             ?_FLASH_WriteBlock 0023                   __CFG_BOREN$ON 0000                            ltemp 007E  
                          start 00E5                            ttemp 007E                            wtemp 007E  
            ??_FLASH_WriteBlock 0026                 ?i1_set_leds_top 0070                   __CFG_MCLRE$ON 0000  
                  ___ftmul@cntr 0043                    ___ftmul@sign 0044                 __end_of_InitApp 1128  
                  ___fttol@exp1 00A5                           ??_map 0064                    ___fttol@lval 00A1  
                         ??_isr 0074                 __end_of___aldiv 16B8                           ?_main 0070  
               __end_of___awdiv 14AA                 __end_of___ftadd 076F                           _CCPR1 0291  
                         _CCPR2 0298                           _CCPR3 0311                           _CCPR4 0318  
                         _CCPR5 031C                           _CCPR9 061A                   __CFG_WDTE$OFF 0000  
               __end_of___ftdiv 1800                 __end_of___ftneg 1041                 __end_of___ftmul 08DD  
               ___awdiv@divisor 0020                 __end_of___fttol 1757                           i1l403 14B6  
                         i1l404 14C1                           i1l405 14CC                           i1l406 14D7  
                         i1l407 14E2                           i1l408 1502                 ___awdiv@counter 0025  
                         _iB25k 04A0             _ConfigureOscillator 07FA               main@tapCntDivisor 00BB  
                  ?_init_timer0 0070                    ?_init_timer2 0070             ___lmul@multiplicand 0024  
                 ___awtoft@sign 002D                           _delay 2378                           _tap10 01CC  
                         _myBuf 0220                   ___ftpack@sign 0024                           _timer 00CD  
                         main@i 00B9                           ltemp0 007E                           ltemp1 0082  
                         ltemp2 0086                           ltemp3 0080                 __end_of_wait_ms 1189  
                         ttemp0 007E                           ttemp1 0081                           ttemp2 0084  
                         ttemp3 0087                           ttemp4 007F                           status 0003  
                         wtemp0 007E                           wtemp1 0080                           wtemp2 0082  
                         wtemp3 0084                           wtemp4 0086                           wtemp5 0088  
                         wtemp6 007F            ?_ConfigureOscillator 0070                 __initialization 00E7  
                  __end_of_main 0580                  __CFG_LPBOR$OFF 0000                 _set_subdivision 0580  
                        ??_main 00AA                   ___fttol@sign1 00A0         __size_of_FLASH_ReadWord 0020  
              ?_set_leds_bottom 0020       FLASH_WriteBlock@writeAddr 0023                __end_of___altoft 12AE  
                        _ADRESH 009C                          _ADRESL 009B                ___awdiv@dividend 0022  
           _baseline_delay_time 00DF                __end_of___awtoft 0829                __end_of___ftpack 15CB  
                        i1l3094 14EE                          i1l2616 14AB                          i1l2648 14E9  
                        i1l2664 008E                          i1l2674 00C8                          i1l2666 009D  
                        i1l2676 00D7                          i1l2668 009F                          _PMADRH 0192  
                        _PMADRL 0191                          _PMDATH 0194                          _PMDATL 0193  
                        u275_23 0081                          _PMCON2 0196                          u277_23 00B2  
     __size_of_FLASH_EraseBlock 0020                  _debounce_count 0154                       ??_InitApp 0020  
         ??_ConfigureOscillator 0020                  __CFG_PWRTE$OFF 0000                          ___lmul 1128  
                     ??___aldiv 002E                          ___wmul 109C   FLASH_WriteWord@blockStartAddr 0034  
                     ??___awdiv 0024                       ??___ftadd 002E                  __CFG_STVREN$ON 0000  
                     ??___ftdiv 004B                       ??___ftneg 0023                       ??___ftmul 003B  
                     ??___fttol 006B             FLASH_WriteWord@word 0030                __end_of_init_adc 104B  
              __end_of_init_pwm 132D                ___awdiv@quotient 0027                          _preset 015C  
                 _incoming_data 0162                    __pdataBANK10 0520           ___ftmul@f3_as_product 0040  
                  __pdataBIGRAM 2378         FLASH_ReadWord@flashAddr 0020                    __pdataCOMMON 007B  
                     ??_wait_ms 002E         __end_of__initialization 019A                      ___altoft@c 0028  
                    ___ftadd@f1 0028                      ___ftadd@f2 002B                      ___ftdiv@f1 0048  
                    ___ftdiv@f2 0045                      ___ftdiv@f3 0050                  _top_push_state 007B  
                    ___ftneg@f1 0020                      ___awtoft@c 0028         __end_of_set_subdivision 0679  
                    ___ftmul@f1 0035                      ___ftmul@f2 0038                      ___fttol@f1 0067  
                __pcstackCOMMON 0070                    __pidataBANK1 1073                    __pidataBANK2 1063  
                  __pidataBANK5 1237                    __pidataBANK6 11FD                    __pidataBANK7 11C3  
                  __pidataBANK8 1408                    __pidataBANK9 13B8                FLASH_WriteWord@i 0036  
                _OPTION_REGbits 0095     FLASH_WriteBlock@GIEBitValue 002B            __size_of_init_timer0 0007  
          __size_of_init_timer2 0009                      __pbssBANK1 00C5                      __pbssBANK2 0120  
                    __pbssBANK3 01A0                      __pbssBANK4 0220                ??i1_set_leds_top 0074  
               __CFG_VCAPEN$OFF 0000                      _delay_time 00E3                      _delayfound 0158  
                    __pmaintext 08DD                         ?___lmul 0020                         ?___wmul 0020  
                    __pintentry 0004                   ??_adc_convert 0022                       ?___altoft 0028  
                ___lmul@product 0028                       ?___awtoft 0028                       ?___ftpack 0020  
     __size_of_FLASH_WriteBlock 006B                  _FLASH_ReadWord 10B8                     modulation@x 0035  
                   modulation@y 0037                 _debounce_bypass 0152                _FLASH_EraseBlock 10D8  
      __size_of_FLASH_WriteWord 0045                       ?_init_adc 0070                       ?_init_pwm 0070  
                       _InitApp 10F8                   ?_set_leds_top 0020                      _knob1_prev 00E9  
                    _knob2_prev 0164                      _knob3_prev 0166                      _knob4_prev 0168  
                    _knob5_prev 016A                ?_set_subdivision 00A6                         ___aldiv 1636  
                       ___awdiv 1458                 __size_of___lmul 0030                         ___ftadd 0679  
                       ___ftdiv 1757                         ___ftneg 1038                      _knob_1_pos 00D5  
                    _knob_2_pos 00D7                 __size_of___wmul 001C                         ___ftmul 0829  
                    _knob_3_pos 00D9                         ___fttol 16B8                      _knob_4_pos 00DB  
                    _knob_5_pos 0079                      ??___altoft 002C          __end_of_FLASH_ReadWord 10D8  
                    ??___awtoft 002B                      ??___ftpack 0025                         __ptext1 1158  
                       __ptext2 1128                         __ptext3 0580                         __ptext4 16B8  
                       __ptext5 0807                         __ptext6 1503                         __ptext7 1372  
                       __ptext8 12AE                         __ptext9 109C                       _T2CONbits 001C  
                  __size_of_map 008B                    __size_of_isr 00E1             __end_of_adc_convert 109C  
              ___aldiv@dividend 002A                         _wait_ms 1158                         clrloop0 1058  
          end_of_initialization 019A                      _modulation 12AE                         init_ram 104B  
                    ??_init_adc 0020                         initloop 104C                      ??_init_pwm 0020  
                ??_set_leds_top 0024          i1set_leds_top@ledState 0072                ___aldiv@quotient 0031  
                       psplit$0 210041                     wait_ms@time 002C       FLASH_ReadWord@GIEBitValue 0022  
               ?_FLASH_ReadWord 0020                       _PORTBbits 000D                       _PORTDbits 000F  
                     _PORTEbits 0010                       _TRISBbits 008D                       _TRISCbits 008E  
                     _TRISDbits 008F                       _TRISEbits 0090                       _TRISFbits 030C  
                     _TRISGbits 030D                       _SPI_Value 0150            pnum$maintext_split_1 0041  
   __end_of_ConfigureOscillator 07FE                      map@out_max 0061                      map@out_min 005E  
                   _CCP1CONbits 0293                     ___ftdiv@exp 0053        __size_of_set_leds_bottom 0046  
                   _CCP2CONbits 029A                     _CCP3CONbits 0313                     _CCP4CONbits 031A  
                   _CCP5CONbits 031E               FLASH_WriteBlock@i 002C                     _CCP6CONbits 0613  
                   _CCP7CONbits 0616                     ___ftmul@exp 003F              adc_convert@channel 0023  
                   _CCP8CONbits 0619               ??_FLASH_WriteWord 0032                     _CCP9CONbits 061C  
          set_leds_top@ledState 0022                   __pidataBANK10 1189                  __end_of___lmul 1158  
                 __pidataBIGRAM 019E                  __end_of___wmul 10B8                     _adc_convert 1083  
                 __pidataCOMMON 07FE                _FLASH_WriteBlock 15CB             start_initialization 00E7  
                   __end_of_map 07FA                     __end_of_isr 00E5                     ?_modulation 0035  
                      ??___lmul 0028                        ??___wmul 0024                     __pdataBANK1 00DF  
                   __pdataBANK2 015E                     __pdataBANK5 02A0                     __pdataBANK6 0320  
                   __pdataBANK7 03A0                     __pdataBANK8 0420                     __pdataBANK9 04A0  
   FLASH_EraseBlock@GIEBitValue 0022                   _tap_iteration 00ED        __end_of_FLASH_EraseBlock 10F8  
             __size_of___altoft 003D               __size_of___awtoft 0022               __size_of___ftpack 0065  
                 ??_init_timer0 0020                   ??_init_timer2 0020                     __pbssCOMMON 0079  
          __end_of_set_leds_top 1566                       ___latbits 0003                    _bypass_state 00D1  
                 __pcstackBANK0 0020                   __pcstackBANK1 00A0                   _delay_counter 0156  
                      ?_InitApp 0070               __size_of_init_adc 000A               __size_of_init_pwm 0041  
                      ?___aldiv 0026               ??_set_leds_bottom 0022                        ?___awdiv 0020  
                      ?___ftadd 0028                        ?___ftdiv 0045                        ?___ftneg 0020  
                      ?___ftmul 0035                        ?___fttol 0067             __size_of_modulation 003E  
                   _blink_state 015E                        _CCPTMRS0 029D                        _CCPTMRS1 029E  
                      _CCPTMRS2 029F                        ?_wait_ms 002C        FLASH_WriteWord@flashAddr 002D  
FLASH_WriteBlock@blockStartAddr 0029             __end_of_init_timer0 0807             __end_of_init_timer2 1038  
                     _mod_value 015A                       _mod_timer 0134                 ___aldiv@divisor 0026  
               ___aldiv@counter 002F                  ___wmul@product 0024                        _LATBbits 010D  
                      _LATCbits 010E                        _LATDbits 010F                        _LATFbits 038C  
                      _LATGbits 038D                  _mod_delay_time 016C                       clear_ram0 1057  
                     _tap_timer 00C9                       _tap_total 0148                   set_leds_top@x 0020  
     FLASH_EraseBlock@startAddr 0020                ??_FLASH_ReadWord 0022         __size_ofi1_set_leds_top 0059  
                     map@in_max 005B                       map@in_min 0058                       _sub_timer 00C5  
                    _ADCON0bits 009D                      _ADCON1bits 009E                       main@i_395 00BF  
                     main@i_396 00C1        __size_of_set_subdivision 00F9               ___wmul@multiplier 0020  
              set_subdivision@x 00A6                set_subdivision@y 00A8                       main@count 00C3  
             ___lmul@multiplier 0020                 _FLASH_WriteWord 132D        __end_of_FLASH_WriteBlock 1636  
              __size_of_InitApp 0030                      _APFCONbits 011D                __size_of___aldiv 0082  
                  pnum$maintext 0021                __size_of___awdiv 0052                __size_of___ftadd 00F6  
              __size_of___ftdiv 00A9                    ?_adc_convert 0020                __size_of___ftneg 0009  
                      ___altoft 1271                __size_of___ftmul 00B4                __size_of___fttol 009F  
                      ___awtoft 0807           __size_of_set_leds_top 0063                        ___ftpack 1566  
                      _map$1566 0064                      _ANSELBbits 018D                      _ANSELEbits 0190  
              set_leds_bottom@x 0020                     _init_timer0 0800                     _init_timer2 102F  
            _delay_time_changed 0160                        __ptext10 1636                        __ptext11 076F  
                      __ptext20 10F8                        __ptext12 1038                        __ptext21 12EC  
                      __ptext13 0829                        __ptext22 102F                        __ptext14 1757  
                      __ptext31 14AA                        __ptext23 0800                        __ptext15 0679  
                      __ptext24 1041                        __ptext16 1083                        __ptext25 132D  
                      __ptext17 1458                        __ptext26 15CB                        __ptext18 1271  
                      __ptext27 10D8                        __ptext19 1566                        __ptext28 10B8  
                      __ptext29 07FA                __size_of_wait_ms 0031           FLASH_WriteWord@ramBuf 002F  
         FLASH_WriteWord@offset 0033                    ??_modulation 0039                     _mod_counter 00DD  
                      _init_adc 1041                   __size_of_main FCA3                        _init_pwm 12EC  
  __size_of_ConfigureOscillator 0004                    _set_leds_top 1503                        _num_taps 00EB  
                      int$flags 007E                 i1set_leds_top@x 0070               ?_FLASH_EraseBlock 0020  
            __end_of_modulation 12EC              ??_FLASH_EraseBlock 0022                      _INTCONbits 000B  
       __end_of_FLASH_WriteWord 1372                     _tap_history 0120               ??_set_subdivision 006F  
                      intlevel1 0000                 _set_leds_bottom 1372                      _PMCON1bits 0195  
             __CFG_CLKOUTEN$OFF 0000                      _OSCCONbits 0099                  i1_set_leds_top 14AA  
                  wait_ms@timel 014C                    ___aldiv@sign 0030          main@adjusted_pot_value 00BD  
                  _CCP10CONbits 061F               _bottom_push_state 00E7          __end_ofi1_set_leds_top 1503  
